{
  "contractName": "UtBase",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allowance_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "tokenDecimals_",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCoconsensus",
      "outputs": [
        {
          "internalType": "contract CoconsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "tokenName_",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "tokenSymbol_",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalTokenSupply_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unwrap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "wrap",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getConsensusCogateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTotalTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allowance_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenDecimals_\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCoconsensus\",\"outputs\":[{\"internalType\":\"contract CoconsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getConsensusCogateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName_\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol_\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokenSupply_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"wrap\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"Address of the owner account.\",\"_spender\":\"Address of the spender account.\"},\"return\":\"allowance_ Remaining allowance for the spender to spend from                   owner's account.\"},\"approve(address,uint256)\":{\"details\":\"Allows _spender address to withdraw from function caller's account,     multiple times up to the _value amount, if this function is called     again it overwrites the current allowance with _value.\",\"params\":{\"_spender\":\"Address authorized to spend from the function caller's                 address.\",\"_value\":\"Amount up to which spender is authorized to spend.\"},\"return\":\"bool `true` for a successful approval, `false` otherwise.\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"Address of the owner account.\"},\"return\":\"balance_ Account balance of the owner account.\"},\"burn(uint256)\":{\"params\":{\"_value\":\"The amount that will be burnt.     * \\\\pre msg.value should be non-zero. \\\\pre Caller must have atleast `_value` amount of ERC20 UtBase tokens.     * \\\\post Decreases total token supply of the token by `_value` amount. \\\\post Decreases caller's ERC20 UtBase token balance by `_value` amount.     \"}},\"burnFrom(address,uint256)\":{\"params\":{\"_account\":\"The account whose tokens will be burnt.\",\"_value\":\"The amount that will be burnt.     * \\\\pre `_account` must approve `_value` amount to the caller     * \\\\post Decreases total token supply of the token by `_value` amount. \\\\post Decreases `_account` ERC20 UtBase token balance by      `_value` amount.\"}},\"decimals()\":{\"return\":\"tokenDecimals Decimals of the token.\"},\"getCoconsensus()\":{\"return\":\"Coconsensus contract address.\"},\"getConsensusCogateway()\":{\"return\":\"Consensus cogateway contract address.\"},\"getTotalTokenSupply()\":{\"return\":\"Token token supply.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"Amount of UtBase tokens to be minted.     * \\\\pre Caller must be Consensus cogateway contract.     * \\\\post Increases total token supply by `_amount `. \\\\post Increase ERC20 UtBase token balance of the beneficiary      by `_amount`. \\\\post It satisfies all post conditions of UtBase::unwrapInternal().     *\",\"_beneficiary\":\"Beneficairy address which will receive base coin.\"}},\"name()\":{\"return\":\"tokenName_ Name of the token.\"},\"symbol()\":{\"return\":\"tokenSymbol_ Symbol of the token.\"},\"totalSupply()\":{\"details\":\"Get totalTokenSupply as view so that child cannot edit.\",\"return\":\"totalTokenSupply_ Total token supply.\"},\"transfer(address,uint256)\":{\"details\":\"Fires the transfer event, reverts if _from account does not have     enough tokens to transfer.\",\"params\":{\"_to\":\"Address to which tokens are transferred.\",\"_value\":\"Amount of tokens to be transferred.\"},\"return\":\"success_ `true` for a successful transfer, `false` otherwise.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Allows a contract to transfer tokens on behalf of _from address     to _to address, the function caller has to be pre-authorized for     multiple transfers up to the total of _value amount by the _from     address.\",\"params\":{\"_from\":\"Address from which tokens are transferred.\",\"_to\":\"Address to which tokens are transferred.\",\"_value\":\"Amount of tokens transferred.\"},\"return\":\"success_ `true` for a successful transfer, `false` otherwise.\"},\"unwrap(uint256)\":{\"details\":\"This contract's base coin balance must always be greater than      amount.\",\"params\":{\"_amount\":\"Amount of ERC20 UtBase token to convert to base coin.     * \\\\pre Satisfies all conditions of UtBase::unwrapInternal.     * \\\\post Satisfies all conditions of UtBase::unwrapInternal.     \"}},\"wrap()\":{\"details\":\"The ERC20 OST balance of contract should always be greater than the     received payable amount.     * \\\\pre msg.value should be non-zero. \\\\pre UtBase ERC20 token balance must be greater than     amount to be wrapped.     * \\\\post Increases ERC20 UtBase token balance of the caller by `msg.value`       amount. \\\\post Decreases ERC20 UtBase token balance of the UtBase contract by      `msg.value` amount.\"}},\"title\":\"UtBase is an ERC20 token wrapper for the base coin that is used to       pay for gas consumption on the auxiliary chain.\"},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"Public function to get the allowance.\"},\"approve(address,uint256)\":{\"notice\":\"Public function to approve an account for transfer.\"},\"balanceOf(address)\":{\"notice\":\"Get the balance of an account.\"},\"burn(uint256)\":{\"notice\":\"It allows to burn UtBase tokens for an account.\"},\"burnFrom(address,uint256)\":{\"notice\":\"It allows to burn tokens of the spender.\"},\"decimals()\":{\"notice\":\"Public function to get the decimals of the token.\"},\"getCoconsensus()\":{\"notice\":\"Gets the coconsensus contract address.\"},\"getConsensusCogateway()\":{\"notice\":\"Gets the consensus cogateway contract address.\"},\"getTotalTokenSupply()\":{\"notice\":\"Gets total token supply.\"},\"mint(address,uint256)\":{\"notice\":\"Mints the ERC20 token for the beneficiary address and        unwraps its to base coin.\"},\"name()\":{\"notice\":\"Public function to get the name of the token.\"},\"setup()\":{\"notice\":\"Initializes the UtBase contract.     * \\\\pre Can be called only once by consensus cogateway contract     * \\\\post Sets the `tokenSymbol` storage variable with `TOKEN_SYMBOL`      constant value. \\\\post Sets the `tokenName` storage variable with `TOKEN_NAME`      constant value. \\\\post Sets the `tokenDecimals` storage variable with `TOKEN_DECIMALS`      constant value. \\\\post Sets the `totalTokenSupply` storage variable to genesis total      supply value. \\\\post Adds the balance for the (self) contract address with genesis      total supply value.     \"},\"symbol()\":{\"notice\":\"Public function to get the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Public function to get the total supply of the tokens.\"},\"transfer(address,uint256)\":{\"notice\":\"Public function to transfer the token.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Public function transferFrom.\"},\"unwrap(uint256)\":{\"notice\":\"Unwrap converts ERC20 UtBase to base coin.\"},\"wrap()\":{\"notice\":\"Wrap converts base coin to ERC20 UtBase.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/UtBase.sol\":\"UtBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/ERC20I.sol\":{\"keccak256\":\"0x66811f01b3f1cdb2bbbc6e0d9921c3989ec3f43544c5f68c11ea99fa9bfe0953\",\"urls\":[\"bzz-raw://9a2e4f5f704bcc883d892e5c8746119c88771c16e5ea662d53515207a2d37462\",\"dweb:/ipfs/QmWqv2PzyGA21rSNrzFNTqE6hxZDap2BvEoiB3Y7FrsHxo\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus/CoconsensusInterface.sol\":{\"keccak256\":\"0x0f3733398949bf1b23a80e24d0db0f9b88ede265fa4235878c3032c9614ee3b1\",\"urls\":[\"bzz-raw://43b4f0e9ca35fb3379bbf4645dfc2379fd8f53b419066c4976874b5c3e7e5ae0\",\"dweb:/ipfs/Qmd2YzDr4jygAnj3tSg6d9jfajqFnhg8SaZk5Gg7Vw4L9H\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus/CoconsensusModule.sol\":{\"keccak256\":\"0xabe9fce2fae63ee9d6186ba03faa248d9d9fe8ef3202218e473dfb8d8ba4df71\",\"urls\":[\"bzz-raw://bb79cb8133c43b7ae5973180717b033a2bc9325cf25cd1a4879c9b805fee999e\",\"dweb:/ipfs/QmbUW7mmQXRJRZTVLLpNDoHZhyw2jiTwumHi92MmGE1wD5\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/GenesisUtBase.sol\":{\"keccak256\":\"0x80ee47422414a2d8532e615882ce0086b76ecfd1e94f3a99b8314e7c389cc473\",\"urls\":[\"bzz-raw://f0495f85bb24b45d62b55d73e37c9f9dc22325e1a910c870aa30aea9709e1179\",\"dweb:/ipfs/QmX23UkrN2xJPkk5bX2EJ65UDmTRkyEjwKcWtpM3NGZ49S\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/UtBase.sol\":{\"keccak256\":\"0xc3d7025e1a9dfe511c9b6361c0a8c3e0b44c9740bd24424b2d4a8e83c6886b11\",\"urls\":[\"bzz-raw://c1e653c835c282c0c1f5c988a12da2a63aec29833645c30360d675c61dff55de\",\"dweb:/ipfs/QmQprBm89SBM96wic4nAQuPQksMt74iZyFZ2zEyB8C9kbe\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/MasterCopyNonUpgradable.sol\":{\"keccak256\":\"0x675eaeceda96f0a2ac02345f61797c120bef572f362309ec58de3b21e321a434\",\"urls\":[\"bzz-raw://3dd3e80d5da6f94166f45b8b9f80fe08c29477ce0f0ee03d08b7b35558bc373e\",\"dweb:/ipfs/QmTkdRqRx8kicDK7GvWQsUK25PPLNE8fvotfhwpLJaECbR\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/utility-token/ERC20Token.sol\":{\"keccak256\":\"0x40c1ab835ee753226957710b2d13355a5336968866e16b1471eba9407f6eaf1d\",\"urls\":[\"bzz-raw://783914cc85be91f0ed36d77752c3c9ebbf514ab53d9e46b759aa871ba8cb6e87\",\"dweb:/ipfs/QmbvunUajnm2qeiuRSxVgitynVCYXyGfsge5BwVnb9pUJ7\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]}},\"version\":1}",
  "bytecode": "0x6080604052600880546001600160a01b0319908116614d001790915560098054909116614d0217905534801561003457600080fd5b50610f54806100446000396000f3fe6080604052600436106101355760003560e01c806342966c68116100ab578063a9059cbb1161006f578063a9059cbb14610411578063ba0bba401461044a578063d46eb1191461045f578063dd62ed3e14610467578063de0e9a3e146104a2578063de36948d146104cc57610135565b806342966c68146103515780635b7f415c1461037b57806370a082311461039057806379cc6790146103c357806395d89b41146103fc57610135565b80631d6c90a9116100fd5780631d6c90a91461024d57806323609af71461026257806323b872dd146102935780632a905318146102d6578063313ce567146102eb57806340c10f191461031657610135565b8063047087cc1461013a57806306fdde0314610161578063095ea7b3146101eb57806318160ddd1461013a5780631882140014610238575b600080fd5b34801561014657600080fd5b5061014f6104e1565b60408051918252519081900360200190f35b34801561016d57600080fd5b506101766104e8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b0578181015183820152602001610198565b50505050905090810190601f1680156101dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f757600080fd5b506102246004803603604081101561020e57600080fd5b506001600160a01b03813516906020013561057b565b604080519115158252519081900360200190f35b34801561024457600080fd5b506101766105e1565b34801561025957600080fd5b5061014f610603565b34801561026e57600080fd5b50610277610609565b604080516001600160a01b039092168252519081900360200190f35b34801561029f57600080fd5b50610224600480360360608110156102b657600080fd5b506001600160a01b03813581169160208101359091169060400135610618565b3480156102e257600080fd5b50610176610683565b3480156102f757600080fd5b506103006106a1565b6040805160ff9092168252519081900360200190f35b34801561032257600080fd5b5061034f6004803603604081101561033957600080fd5b506001600160a01b0381351690602001356106aa565b005b34801561035d57600080fd5b5061034f6004803603602081101561037457600080fd5b5035610719565b34801561038757600080fd5b50610300610726565b34801561039c57600080fd5b5061014f600480360360208110156103b357600080fd5b50356001600160a01b031661072b565b3480156103cf57600080fd5b5061034f600480360360408110156103e657600080fd5b506001600160a01b038135169060200135610746565b34801561040857600080fd5b50610176610750565b34801561041d57600080fd5b506102246004803603604081101561043457600080fd5b506001600160a01b0381351690602001356107b1565b34801561045657600080fd5b5061034f6107c5565b61034f6108da565b34801561047357600080fd5b5061014f6004803603604081101561048a57600080fd5b506001600160a01b0381358116916020013516610941565b3480156104ae57600080fd5b5061034f600480360360208110156104c557600080fd5b503561096c565b3480156104d857600080fd5b50610277610976565b6005545b90565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b5050505050905090565b3360008181526007602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6040518060400160405280600681526020016555744261736560d01b81525081565b60015481565b6008546001600160a01b031690565b6001600160a01b038316600090815260076020908152604080832033845290915281205461064c908363ffffffff61098516565b6001600160a01b038516600090815260076020908152604080832033845290915290205561067b84848461099a565b949350505050565b604051806040016040528060028152602001612aa160f11b81525081565b60045460ff1690565b6106b2610976565b6001600160a01b0316336001600160a01b0316146107015760405162461bcd60e51b815260040180806020018281038252603d815260200180610e66603d913960400191505060405180910390fd5b61070b8282610a59565b6107158282610b4b565b5050565b6107233382610bfc565b50565b601281565b6001600160a01b031660009081526006602052604090205490565b6107158282610cd7565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105715780601f1061054657610100808354040283529160200191610571565b60006107be33848461099a565b9392505050565b6107cd610609565b6001600160a01b0316336001600160a01b03161461081c5760405162461bcd60e51b8152600401808060200182810382526035815260200180610ea36035913960400191505060405180910390fd5b6005541561085b5760405162461bcd60e51b8152600401808060200182810382526027815260200180610ed86027913960400191505060405180910390fd5b604080518082019091526002808252612aa160f11b602090920191825261088491600391610dab565b506040805180820190915260068082526555744261736560d01b60209092019182526108b291600291610dab565b506004805460ff19166012179055600154600581905530600090815260066020526040902055565b3433816109185760405162461bcd60e51b8152600401808060200182810382526022815260200180610e446022913960400191505060405180910390fd5b3060009081526006602052604090205482111561093157fe5b61093c30828461099a565b505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6107233382610b4b565b6009546001600160a01b031690565b60008282111561099457600080fd5b50900390565b6001600160a01b0383166000908152600660205260408120546109c3908363ffffffff61098516565b6001600160a01b0380861660009081526006602052604080822093909355908516815220546109f8908363ffffffff610d9916565b6001600160a01b0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b6001600160a01b038216610ab4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610ac7908263ffffffff610d9916565b6005556001600160a01b038216600090815260066020526040902054610af3908263ffffffff610d9916565b6001600160a01b03831660008181526006602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216600090815260066020526040902054811115610bb0576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b604482015290519081900360640190fd5b80471015610bba57fe5b610bc582308361099a565b506040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561093c573d6000803e3d6000fd5b6001600160a01b038216610c415760405162461bcd60e51b8152600401808060200182810382526021815260200180610eff6021913960400191505060405180910390fd5b600554610c54908263ffffffff61098516565b6005556001600160a01b038216600090815260066020526040902054610c80908263ffffffff61098516565b6001600160a01b0383166000818152600660209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b0382166000908152600760209081526040808320338452909152902054610d0b908263ffffffff61098516565b6001600160a01b0383166000908152600760209081526040808320338452909152902055610d398282610bfc565b6001600160a01b0382166000818152600760209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b6000828201838110156107be57600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dec57805160ff1916838001178555610e19565b82800160010185558215610e19579182015b82811115610e19578251825591602001919060010190610dfe565b50610e25929150610e29565b5090565b6104e591905b80821115610e255760008155600101610e2f56fe50617961626c6520616d6f756e742073686f756c64206e6f74206265207a65726f2e4f6e6c792074686520636f6e73656e73757320636f6761746577617920636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e4f6e6c792074686520436f636f6e73656e73757320636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e55746261736520636f6e747261637420697320616c726561647920696e697469616c697a65642e45524332303a206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a72315820d70b6b045eec40a620f0fc0e1b8ab55d889e276b7657a68245fbcd99b2764f3464736f6c634300050d0032",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c806342966c68116100ab578063a9059cbb1161006f578063a9059cbb14610411578063ba0bba401461044a578063d46eb1191461045f578063dd62ed3e14610467578063de0e9a3e146104a2578063de36948d146104cc57610135565b806342966c68146103515780635b7f415c1461037b57806370a082311461039057806379cc6790146103c357806395d89b41146103fc57610135565b80631d6c90a9116100fd5780631d6c90a91461024d57806323609af71461026257806323b872dd146102935780632a905318146102d6578063313ce567146102eb57806340c10f191461031657610135565b8063047087cc1461013a57806306fdde0314610161578063095ea7b3146101eb57806318160ddd1461013a5780631882140014610238575b600080fd5b34801561014657600080fd5b5061014f6104e1565b60408051918252519081900360200190f35b34801561016d57600080fd5b506101766104e8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b0578181015183820152602001610198565b50505050905090810190601f1680156101dd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f757600080fd5b506102246004803603604081101561020e57600080fd5b506001600160a01b03813516906020013561057b565b604080519115158252519081900360200190f35b34801561024457600080fd5b506101766105e1565b34801561025957600080fd5b5061014f610603565b34801561026e57600080fd5b50610277610609565b604080516001600160a01b039092168252519081900360200190f35b34801561029f57600080fd5b50610224600480360360608110156102b657600080fd5b506001600160a01b03813581169160208101359091169060400135610618565b3480156102e257600080fd5b50610176610683565b3480156102f757600080fd5b506103006106a1565b6040805160ff9092168252519081900360200190f35b34801561032257600080fd5b5061034f6004803603604081101561033957600080fd5b506001600160a01b0381351690602001356106aa565b005b34801561035d57600080fd5b5061034f6004803603602081101561037457600080fd5b5035610719565b34801561038757600080fd5b50610300610726565b34801561039c57600080fd5b5061014f600480360360208110156103b357600080fd5b50356001600160a01b031661072b565b3480156103cf57600080fd5b5061034f600480360360408110156103e657600080fd5b506001600160a01b038135169060200135610746565b34801561040857600080fd5b50610176610750565b34801561041d57600080fd5b506102246004803603604081101561043457600080fd5b506001600160a01b0381351690602001356107b1565b34801561045657600080fd5b5061034f6107c5565b61034f6108da565b34801561047357600080fd5b5061014f6004803603604081101561048a57600080fd5b506001600160a01b0381358116916020013516610941565b3480156104ae57600080fd5b5061034f600480360360208110156104c557600080fd5b503561096c565b3480156104d857600080fd5b50610277610976565b6005545b90565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156105715780601f1061054657610100808354040283529160200191610571565b820191906000526020600020905b81548152906001019060200180831161055457829003601f168201915b5050505050905090565b3360008181526007602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b6040518060400160405280600681526020016555744261736560d01b81525081565b60015481565b6008546001600160a01b031690565b6001600160a01b038316600090815260076020908152604080832033845290915281205461064c908363ffffffff61098516565b6001600160a01b038516600090815260076020908152604080832033845290915290205561067b84848461099a565b949350505050565b604051806040016040528060028152602001612aa160f11b81525081565b60045460ff1690565b6106b2610976565b6001600160a01b0316336001600160a01b0316146107015760405162461bcd60e51b815260040180806020018281038252603d815260200180610e66603d913960400191505060405180910390fd5b61070b8282610a59565b6107158282610b4b565b5050565b6107233382610bfc565b50565b601281565b6001600160a01b031660009081526006602052604090205490565b6107158282610cd7565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105715780601f1061054657610100808354040283529160200191610571565b60006107be33848461099a565b9392505050565b6107cd610609565b6001600160a01b0316336001600160a01b03161461081c5760405162461bcd60e51b8152600401808060200182810382526035815260200180610ea36035913960400191505060405180910390fd5b6005541561085b5760405162461bcd60e51b8152600401808060200182810382526027815260200180610ed86027913960400191505060405180910390fd5b604080518082019091526002808252612aa160f11b602090920191825261088491600391610dab565b506040805180820190915260068082526555744261736560d01b60209092019182526108b291600291610dab565b506004805460ff19166012179055600154600581905530600090815260066020526040902055565b3433816109185760405162461bcd60e51b8152600401808060200182810382526022815260200180610e446022913960400191505060405180910390fd5b3060009081526006602052604090205482111561093157fe5b61093c30828461099a565b505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6107233382610b4b565b6009546001600160a01b031690565b60008282111561099457600080fd5b50900390565b6001600160a01b0383166000908152600660205260408120546109c3908363ffffffff61098516565b6001600160a01b0380861660009081526006602052604080822093909355908516815220546109f8908363ffffffff610d9916565b6001600160a01b0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b6001600160a01b038216610ab4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610ac7908263ffffffff610d9916565b6005556001600160a01b038216600090815260066020526040902054610af3908263ffffffff610d9916565b6001600160a01b03831660008181526006602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216600090815260066020526040902054811115610bb0576040805162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b604482015290519081900360640190fd5b80471015610bba57fe5b610bc582308361099a565b506040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561093c573d6000803e3d6000fd5b6001600160a01b038216610c415760405162461bcd60e51b8152600401808060200182810382526021815260200180610eff6021913960400191505060405180910390fd5b600554610c54908263ffffffff61098516565b6005556001600160a01b038216600090815260066020526040902054610c80908263ffffffff61098516565b6001600160a01b0383166000818152600660209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b0382166000908152600760209081526040808320338452909152902054610d0b908263ffffffff61098516565b6001600160a01b0383166000908152600760209081526040808320338452909152902055610d398282610bfc565b6001600160a01b0382166000818152600760209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b6000828201838110156107be57600080fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dec57805160ff1916838001178555610e19565b82800160010185558215610e19579182015b82811115610e19578251825591602001919060010190610dfe565b50610e25929150610e29565b5090565b6104e591905b80821115610e255760008155600101610e2f56fe50617961626c6520616d6f756e742073686f756c64206e6f74206265207a65726f2e4f6e6c792074686520636f6e73656e73757320636f6761746577617920636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e4f6e6c792074686520436f636f6e73656e73757320636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e55746261736520636f6e747261637420697320616c726561647920696e697469616c697a65642e45524332303a206275726e2066726f6d20746865207a65726f2061646472657373a265627a7a72315820d70b6b045eec40a620f0fc0e1b8ab55d889e276b7657a68245fbcd99b2764f3464736f6c634300050d0032",
  "sourceMap": "931:7261:45:-;;;775:88:19;;;-1:-1:-1;;;;;;775:88:19;;;820:42;775:88;;;;1346::45;;;;;;1391:42;1346:88;;;931:7261;5:2:-1;;;;30:1;27;20:12;5:2;931:7261:45;;;;;;;",
  "deployedSourceMap": "931:7261:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7025:100:45;;;:::i;:::-;;;;;;;;;;;;;;;;1509:102:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1509:102:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1509:102:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5292:240;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5292:240:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5292:240:99;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1143:44:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1143:44:45;;;:::i;771:33:43:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:33:43;;;:::i;1248:133:19:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1248:133:19;;;:::i;:::-;;;;-1:-1:-1;;;;;1248:133:19;;;;;;;;;;;;;;4437:263:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4437:263:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4437:263:99;;;;;;;;;;;;;;;;;:::i;1072:42:45:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1072:42:45;;;:::i;2008:110:99:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2008:110:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3877:227:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3877:227:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3877:227:45;;;;;;;;:::i;:::-;;5985:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5985:93:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5985:93:45;;:::i;1219:41::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1219:41:45;;;:::i;2313:118:99:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2313:118:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2313:118:99;-1:-1:-1;;;;;2313:118:99;;:::i;6527:117:45:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6527:117:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6527:117:45;;;;;;;;:::i;1752:110:99:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1752:110:99;;;:::i;3682:166::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3682:166:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3682:166:99;;;;;;;;:::i;2372:917:45:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:917:45;;;:::i;5201:346::-;;;:::i;3096:180:99:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3096:180:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3096:180:99;;;;;;;;;;:::i;4519:120:45:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4519:120:45;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4519:120:45;;:::i;6817:104::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6817:104:45;;;:::i;7025:100::-;7102:16;;7025:100;;:::o;1509:102:99:-;1595:9;1582:22;;;;;;;-1:-1:-1;;1582:22:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:24;;1582:22;;1595:9;;1582:22;;1595:9;1582:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:102;:::o;5292:240::-;5415:10;5375:13;5404:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;5404:32:99;;;;;;;;;;;:41;;;5461:38;;;;;;;5375:13;;5404:32;;5415:10;;5461:38;;;;;;;;-1:-1:-1;5521:4:99;;5292:240;-1:-1:-1;;5292:240:99:o;1143:44:45:-;;;;;;;;;;;;;;-1:-1:-1;;;1143:44:45;;;;:::o;771:33:43:-;;;;:::o;1248:133:19:-;1355:18;;-1:-1:-1;;;;;1355:18:19;1248:133;:::o;4437:263:99:-;-1:-1:-1;;;;;4596:17:99;;4535:13;4596:17;;;:10;:17;;;;;;;;4614:10;4596:29;;;;;;;;:41;;4630:6;4596:41;:33;:41;:::i;:::-;-1:-1:-1;;;;;4564:17:99;;;;;;:10;:17;;;;;;;;4582:10;4564:29;;;;;;;:73;4658:35;4575:5;4681:3;4686:6;4658:15;:35::i;:::-;4647:46;4437:263;-1:-1:-1;;;;4437:263:99:o;1072:42:45:-;;;;;;;;;;;;;;-1:-1:-1;;;1072:42:45;;;;:::o;2008:110:99:-;2098:13;;;;;2008:110::o;3877:227:45:-;1546:23;:21;:23::i;:::-;-1:-1:-1;;;;;1532:37:45;:10;-1:-1:-1;;;;;1532:37:45;;1511:145;;;;-1:-1:-1;;;1511:145:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4022:28;4028:12;4042:7;4022:5;:28::i;:::-;4060:37;4075:12;4089:7;4060:14;:37::i;:::-;3877:227;;:::o;5985:93::-;6046:25;6052:10;6064:6;6046:5;:25::i;:::-;5985:93;:::o;1219:41::-;1258:2;1219:41;:::o;2313:118:99:-;-1:-1:-1;;;;;2408:16:99;2369;2408;;;:8;:16;;;;;;;2313:118::o;6527:117:45:-;6610:27;6620:8;6630:6;6610:9;:27::i;1752:110:99:-;1844:11;1829:26;;;;;;;;-1:-1:-1;;1829:26:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791;;1829;;1844:11;;1829:26;;1844:11;1829:26;;;;;;;;;;;;;;;;;;;;;;;;3682:166;3761:13;3801:40;3817:10;3829:3;3834:6;3801:15;:40::i;:::-;3790:51;3682:166;-1:-1:-1;;;3682:166:99:o;2372:917:45:-;976:16:19;:14;:16::i;:::-;-1:-1:-1;;;;;954:39:19;:10;-1:-1:-1;;;;;954:39:19;;933:139;;;;-1:-1:-1;;;933:139:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:16:45;;:30;2444:116;;;;-1:-1:-1;;;2444:116:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2585:12;;;;;;;;;;;;;-1:-1:-1;;;2585:12:45;;;;;;;2571:26;;:11;;:26;:::i;:::-;-1:-1:-1;2619:10:45;;;;;;;;;;;;;-1:-1:-1;;;2619:10:45;;;;;;;2607:22;;:9;;:22;:::i;:::-;-1:-1:-1;2639:13:45;:30;;-1:-1:-1;;2639:30:45;1258:2;2639:30;;;;2698:18;2679:16;:37;;;3255:4;2639:13;3238:23;;;:8;:23;;;;;:44;2372:917::o;5201:346::-;5281:9;5318:10;5360;5339:91;;;;-1:-1:-1;;;5339:91:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5465:4;5448:23;;;;:8;:23;;;;;;:33;-1:-1:-1;5448:33:45;5441:41;;;;5493:47;5517:4;5524:7;5533:6;5493:15;:47::i;:::-;;5201:346;;:::o;3096:180:99:-;-1:-1:-1;;;;;3241:18:99;;;3194;3241;;;:10;:18;;;;;;;;:28;;;;;;;;;;;;;3096:180::o;4519:120:45:-;4597:35;4612:10;4624:7;4597:14;:35::i;6817:104::-;6896:18;;-1:-1:-1;;;;;6896:18:45;6817:104;:::o;1205:145:106:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:106;;;1205:145::o;6058:568:99:-;-1:-1:-1;;;;;6471:15:99;;6161:13;6471:15;;;:8;:15;;;;;;:27;;6491:6;6471:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;6453:15:99;;;;;;;:8;:15;;;;;;:45;;;;6524:13;;;;;;;:25;;6542:6;6524:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;6508:13:99;;;;;;;:8;:13;;;;;;;;;:41;;;;6565:28;;;;;;;6508:13;;6565:28;;;;;;;;;;;;;-1:-1:-1;6615:4:99;;6058:568;-1:-1:-1;;;6058:568:99:o;7037:313::-;-1:-1:-1;;;;;7113:22:99;;7105:66;;;;;-1:-1:-1;;;7105:66:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;7201:16;;:28;;7222:6;7201:28;:20;:28;:::i;:::-;7182:16;:47;-1:-1:-1;;;;;7260:18:99;;;;;;:8;:18;;;;;;:30;;7283:6;7260:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;7239:18:99;;;;;;:8;:18;;;;;;;;:51;;;;7305:38;;;;;;;7239:18;;;;7305:38;;;;;;;;;;7037:313;;:::o;7802:388:45:-;-1:-1:-1;;;;;7958:22:45;;;;;;:8;:22;;;;;;7947:33;;;7926:101;;;;;-1:-1:-1;;;7926:101:45;;;;;;;;;;;;-1:-1:-1;;;7926:101:45;;;;;;;;;;;;;;;8070:7;8045:21;:32;;8038:40;;;;8089:53;8105:12;8127:4;8134:7;8089:15;:53::i;:::-;-1:-1:-1;8153:30:45;;-1:-1:-1;;;;;8153:21:45;;;:30;;;;;8175:7;;8153:30;;;;8175:7;8153:21;:30;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;7642:315:99;-1:-1:-1;;;;;7718:22:99;;7710:68;;;;-1:-1:-1;;;7710:68:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7808:16;;:28;;7829:6;7808:28;:20;:28;:::i;:::-;7789:16;:47;-1:-1:-1;;;;;7867:18:99;;;;;;:8;:18;;;;;;:30;;7890:6;7867:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;7846:18:99;;;;;;:8;:18;;;;;;;;:51;;;;7912:38;;;;;;;7846:18;;7912:38;;;;;;;;;;;7642:315;;:::o;8433:292::-;-1:-1:-1;;;;;8540:20:99;;;;;;:10;:20;;;;;;;;8561:10;8540:32;;;;;;;;:66;;8590:6;8540:66;:36;:66;:::i;:::-;-1:-1:-1;;;;;8505:20:99;;;;;;:10;:20;;;;;;;;8526:10;8505:32;;;;;;;:101;8616:23;8516:8;8632:6;8616:5;:23::i;:::-;-1:-1:-1;;;;;8654:64:99;;8685:20;;;;:10;:20;;;;;;;;8673:10;8685:32;;;;;;;;;;;8654:64;;;;;;;8673:10;;8654:64;;;;;;;;;;;;8433:292;;:::o;1431:145:106:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;931:7261:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;931:7261:45;;;-1:-1:-1;931:7261:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\n// Copyright 2020 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport \"./GenesisUtBase.sol\";\nimport \"../consensus/CoconsensusModule.sol\";\nimport \"../proxies/MasterCopyNonUpgradable.sol\";\nimport \"../utility-token/ERC20Token.sol\";\n\n/**\n * @title UtBase is an ERC20 token wrapper for the base coin that is used to\n *        pay for gas consumption on the auxiliary chain.\n */\ncontract UtBase is MasterCopyNonUpgradable, GenesisUtBase, ERC20Token, CoconsensusModule {\n\n    /* Constants */\n\n    /** Token Symbol */\n    string public constant TOKEN_SYMBOL = \"UB\";\n\n    /** Token Name */\n    string public constant TOKEN_NAME = \"UtBase\";\n\n    /** Token Decimal */\n    uint8 public constant TOKEN_DECIMALS = 18;\n\n\n    /* Storage */\n\n    /** Consensus cogateway address defined in genesis. */\n    address private consensusCogateway = address(0x0000000000000000000000000000000000004d02);\n\n\n    /* Modifiers */\n\n    modifier onlyConsensusCogateway()\n    {\n        require(\n            msg.sender == getConsensusCogateway(),\n            \"Only the consensus cogateway contract can call this function.\"\n        );\n        _;\n    }\n\n\n    /* External Functions */\n\n    /**\n     * @notice Initializes the UtBase contract.\n     *\n     * \\pre Can be called only once by consensus cogateway contract\n     *\n     * \\post Sets the `tokenSymbol` storage variable with `TOKEN_SYMBOL`\n     *       constant value.\n     * \\post Sets the `tokenName` storage variable with `TOKEN_NAME`\n     *       constant value.\n     * \\post Sets the `tokenDecimals` storage variable with `TOKEN_DECIMALS`\n     *       constant value.\n     * \\post Sets the `totalTokenSupply` storage variable to genesis total\n     *       supply value.\n     * \\post Adds the balance for the (self) contract address with genesis\n     *       total supply value.     */\n    function setup()\n        external\n        onlyCoconsensus\n    {\n        require(\n            totalTokenSupply == uint256(0),\n            \"Utbase contract is already initialized.\"\n        );\n\n        tokenSymbol = TOKEN_SYMBOL;\n        tokenName = TOKEN_NAME;\n        tokenDecimals = TOKEN_DECIMALS;\n        totalTokenSupply = genesisTotalSupply;\n\n        /*\n         * In the genesis block, validators gets base token equivalent to the\n         * amount they deposited before joining the core. Equivalent\n         * amount of ERC20 token should be minted and UtBase contract should\n         * hold that balance. Similar flow will happen in normal mint process\n         * where UtBase contract ERC20 balance will be incremented. So in the\n         * setup, UtBase contract holds the ERC20 token balance equal to the\n         * genesisTotalSupply.\n         */\n        balances[address(this)] = genesisTotalSupply;\n    }\n\n    /**\n     * @notice Mints the ERC20 token for the beneficiary address and\n     *         unwraps its to base coin.\n     *\n     * @param _beneficiary Beneficairy address which will receive base coin.\n     * @param _amount Amount of UtBase tokens to be minted.\n     *\n     * \\pre Caller must be Consensus cogateway contract.\n     *\n     * \\post Increases total token supply by `_amount `.\n     * \\post Increase ERC20 UtBase token balance of the beneficiary\n     *       by `_amount`.\n     * \\post It satisfies all post conditions of UtBase::unwrapInternal().\n     *\n     *\n     */\n    function mint(\n        address payable _beneficiary,\n        uint256 _amount\n    )\n        external\n        onlyConsensusCogateway\n    {\n        _mint(_beneficiary, _amount);\n        unwrapInternal(_beneficiary, _amount);\n    }\n\n    /**\n     * @notice Unwrap converts ERC20 UtBase to base coin.\n     *\n     * @dev This contract's base coin balance must always be greater than\n     *       amount.\n     *\n     * @param _amount Amount of ERC20 UtBase token to convert to base coin.\n     *\n     * \\pre Satisfies all conditions of UtBase::unwrapInternal.\n     *\n     * \\post Satisfies all conditions of UtBase::unwrapInternal.\n     *\n     */\n    function unwrap(\n        uint256 _amount\n    )\n        external\n    {\n        unwrapInternal(msg.sender, _amount);\n    }\n\n    /**\n     * @notice Wrap converts base coin to ERC20 UtBase.\n     *\n     * @dev The ERC20 OST balance of contract should always be greater than the\n     *      received payable amount.\n     *\n     * \\pre msg.value should be non-zero.\n     * \\pre UtBase ERC20 token balance must be greater than\n     *      amount to be wrapped.\n     *\n     * \\post Increases ERC20 UtBase token balance of the caller by `msg.value`\n     *        amount.\n     * \\post Decreases ERC20 UtBase token balance of the UtBase contract by\n     *       `msg.value` amount.\n     */\n    function wrap()\n        external\n        payable\n    {\n        uint256 amount = msg.value;\n        address account = msg.sender;\n\n        require(\n            amount > 0,\n            \"Payable amount should not be zero.\"\n        );\n\n        assert(balances[address(this)] >= amount);\n\n        transferBalance(address(this), account, amount);\n    }\n\n    /**\n     * @notice It allows to burn UtBase tokens for an account.\n     *\n     * @param _value The amount that will be burnt.\n     *\n     * \\pre msg.value should be non-zero.\n     * \\pre Caller must have atleast `_value` amount of ERC20 UtBase tokens.\n     *\n     * \\post Decreases total token supply of the token by `_value` amount.\n     * \\post Decreases caller's ERC20 UtBase token balance by `_value` amount.\n     *\n     */\n    function burn(uint256 _value)\n        external\n    {\n        _burn(msg.sender, _value);\n    }\n\n    /**\n     * @notice It allows to burn tokens of the spender.\n     *\n     * @param _account The account whose tokens will be burnt.\n     * @param _value The amount that will be burnt.\n     *\n     * \\pre `_account` must approve `_value` amount to the caller\n     *\n     * \\post Decreases total token supply of the token by `_value` amount.\n     * \\post Decreases `_account` ERC20 UtBase token balance by\n     *       `_value` amount.\n     */\n    function burnFrom(address _account, uint256 _value)\n        external\n    {\n        _burnFrom(_account, _value);\n    }\n\n\n    /* Public Functions */\n\n    /**\n     * @notice Gets the consensus cogateway contract address.\n     *\n     * @return Consensus cogateway contract address.\n     */\n    function getConsensusCogateway() public view returns(address) {\n        return consensusCogateway;\n    }\n\n    /**\n     * @notice Gets total token supply.\n     *\n     * @return Token token supply.\n     */\n    function getTotalTokenSupply() public view returns(uint256) {\n        return totalTokenSupply;\n    }\n\n\n    /* Internal Functions */\n\n    /**\n     * @notice Internal method to transfer the base coin equivalent amount to\n     *         beneficiary address.\n     *\n     * @param _beneficiary Beneficairy address which will receive base coin.\n     * @param _amount Amount of ERC20 UtBase tokens to be unwrapped.\n     *\n     * \\pre `amount` must be less than or equal to beneficiary token balance.\n     * \\pre UtBase contract base token balance must be greater than or\n     *      equal to `amount`.\n     *\n     * \\post UtBase contract receives `_amount` number of ERC20 UtBase tokens.\n     * \\post `_beneficiary` address receives `_amount` number of base coins.\n     *\n     */\n    function unwrapInternal(\n        address payable _beneficiary,\n        uint256 _amount\n    )\n        internal\n    {\n        require(\n            _amount <= balances[_beneficiary],\n            \"Insufficient balance.\"\n        );\n\n        assert(address(this).balance >= _amount);\n\n        transferBalance(_beneficiary, address(this), _amount);\n\n        _beneficiary.transfer(_amount);\n    }\n}\n",
  "sourcePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/UtBase.sol",
  "ast": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/UtBase.sol",
    "exportedSymbols": {
      "UtBase": [
        11487
      ]
    },
    "id": 11488,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11256,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:45"
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/GenesisUtBase.sol",
        "file": "./GenesisUtBase.sol",
        "id": 11257,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 11232,
        "src": "621:29:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus/CoconsensusModule.sol",
        "file": "../consensus/CoconsensusModule.sol",
        "id": 11258,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 3813,
        "src": "651:44:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/MasterCopyNonUpgradable.sol",
        "file": "../proxies/MasterCopyNonUpgradable.sol",
        "id": 11259,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 12955,
        "src": "696:48:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/utility-token/ERC20Token.sol",
        "file": "../utility-token/ERC20Token.sol",
        "id": 11260,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 18314,
        "src": "745:41:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11261,
              "name": "MasterCopyNonUpgradable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12954,
              "src": "950:23:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MasterCopyNonUpgradable_$12954",
                "typeString": "contract MasterCopyNonUpgradable"
              }
            },
            "id": 11262,
            "nodeType": "InheritanceSpecifier",
            "src": "950:23:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11263,
              "name": "GenesisUtBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11231,
              "src": "975:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenesisUtBase_$11231",
                "typeString": "contract GenesisUtBase"
              }
            },
            "id": 11264,
            "nodeType": "InheritanceSpecifier",
            "src": "975:13:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11265,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18313,
              "src": "990:10:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$18313",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 11266,
            "nodeType": "InheritanceSpecifier",
            "src": "990:10:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11267,
              "name": "CoconsensusModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3812,
              "src": "1002:17:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoconsensusModule_$3812",
                "typeString": "contract CoconsensusModule"
              }
            },
            "id": 11268,
            "nodeType": "InheritanceSpecifier",
            "src": "1002:17:45"
          }
        ],
        "contractDependencies": [
          83,
          3812,
          11231,
          12954,
          18313
        ],
        "contractKind": "contract",
        "documentation": "@title UtBase is an ERC20 token wrapper for the base coin that is used to\n       pay for gas consumption on the auxiliary chain.",
        "fullyImplemented": true,
        "id": 11487,
        "linearizedBaseContracts": [
          11487,
          3812,
          18313,
          83,
          11231,
          12954
        ],
        "name": "UtBase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 11271,
            "name": "TOKEN_SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1072:42:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 11269,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1072:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5542",
              "id": 11270,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:4:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e569bcaed2bd6a126a6ca553cafafe666a9158ad07b10e37d497ad9defe13573",
                "typeString": "literal_string \"UB\""
              },
              "value": "UB"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 11274,
            "name": "TOKEN_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1143:44:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 11272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1143:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "557442617365",
              "id": 11273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1179:8:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4a9e6675ebd7f00f655b68b1139da4c99e064dee644b8fa1729b9baff89885d9",
                "typeString": "literal_string \"UtBase\""
              },
              "value": "UtBase"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 11277,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1219:41:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 11275,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1219:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 11276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1258:2:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11282,
            "name": "consensusCogateway",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1346:88:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11278,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1346:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303034643032",
                  "id": 11280,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1391:42:45",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x0000000000000000000000000000000000004d02"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 11279,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1383:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 11281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1383:51:45",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11294,
              "nodeType": "Block",
              "src": "1501:173:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11285,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19576,
                            "src": "1532:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1532:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11287,
                            "name": "getConsensusCogateway",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11438,
                            "src": "1546:21:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 11288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1532:37:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6e73656e73757320636f6761746577617920636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 11290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1583:63:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac451c1365e608a5348f85f9baca7c0e9b969a7cdde95aa4020d2cd70876e7f",
                          "typeString": "literal_string \"Only the consensus cogateway contract can call this function.\""
                        },
                        "value": "Only the consensus cogateway contract can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac451c1365e608a5348f85f9baca7c0e9b969a7cdde95aa4020d2cd70876e7f",
                          "typeString": "literal_string \"Only the consensus cogateway contract can call this function.\""
                        }
                      ],
                      "id": 11284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "1511:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:145:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11292,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:145:45"
                },
                {
                  "id": 11293,
                  "nodeType": "PlaceholderStatement",
                  "src": "1666:1:45"
                }
              ]
            },
            "documentation": null,
            "id": 11295,
            "name": "onlyConsensusCogateway",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:45"
            },
            "src": "1463:211:45",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11333,
              "nodeType": "Block",
              "src": "2434:855:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11301,
                          "name": "totalTokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17972,
                          "src": "2465:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 11303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2493:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2485:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 11304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2485:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2465:30:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "55746261736520636f6e747261637420697320616c726561647920696e697469616c697a65642e",
                        "id": 11306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2509:41:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a2a16e882baa28e1203c0ab3ba89a3a8acaa396a935f67eb9d0dc212e2532ed",
                          "typeString": "literal_string \"Utbase contract is already initialized.\""
                        },
                        "value": "Utbase contract is already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a2a16e882baa28e1203c0ab3ba89a3a8acaa396a935f67eb9d0dc212e2532ed",
                          "typeString": "literal_string \"Utbase contract is already initialized.\""
                        }
                      ],
                      "id": 11300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2444:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:116:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11308,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:116:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11309,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17968,
                      "src": "2571:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11310,
                      "name": "TOKEN_SYMBOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11271,
                      "src": "2585:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2571:26:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11312,
                  "nodeType": "ExpressionStatement",
                  "src": "2571:26:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11313,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17966,
                      "src": "2607:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11314,
                      "name": "TOKEN_NAME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11274,
                      "src": "2619:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2607:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11316,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:22:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11317,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17970,
                      "src": "2639:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11318,
                      "name": "TOKEN_DECIMALS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11277,
                      "src": "2655:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2639:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 11320,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:30:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11321,
                      "name": "totalTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17972,
                      "src": "2679:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11322,
                      "name": "genesisTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11230,
                      "src": "2698:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2679:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11324,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:37:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 11325,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17976,
                        "src": "3238:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11329,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11327,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19708,
                            "src": "3255:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          ],
                          "id": 11326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3238:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11330,
                      "name": "genesisTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11230,
                      "src": "3264:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3238:44:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11332,
                  "nodeType": "ExpressionStatement",
                  "src": "3238:44:45"
                }
              ]
            },
            "documentation": "@notice Initializes the UtBase contract.\n     * \\pre Can be called only once by consensus cogateway contract\n     * \\post Sets the `tokenSymbol` storage variable with `TOKEN_SYMBOL`\n      constant value.\n\\post Sets the `tokenName` storage variable with `TOKEN_NAME`\n      constant value.\n\\post Sets the `tokenDecimals` storage variable with `TOKEN_DECIMALS`\n      constant value.\n\\post Sets the `totalTokenSupply` storage variable to genesis total\n      supply value.\n\\post Adds the balance for the (self) contract address with genesis\n      total supply value.     ",
            "id": 11334,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11298,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11297,
                  "name": "onlyCoconsensus",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3801,
                  "src": "2414:15:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2414:15:45"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:45"
            },
            "returnParameters": {
              "id": 11299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:0:45"
            },
            "scope": 11487,
            "src": "2372:917:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11353,
              "nodeType": "Block",
              "src": "4012:92:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11344,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11336,
                        "src": "4028:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11345,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11338,
                        "src": "4042:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11343,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18227,
                      "src": "4022:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:28:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11347,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:28:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11349,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11336,
                        "src": "4075:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11350,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11338,
                        "src": "4089:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11348,
                      "name": "unwrapInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11486,
                      "src": "4060:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 11351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11352,
                  "nodeType": "ExpressionStatement",
                  "src": "4060:37:45"
                }
              ]
            },
            "documentation": "@notice Mints the ERC20 token for the beneficiary address and\n        unwraps its to base coin.\n     * @param _beneficiary Beneficairy address which will receive base coin.\n@param _amount Amount of UtBase tokens to be minted.\n     * \\pre Caller must be Consensus cogateway contract.\n     * \\post Increases total token supply by `_amount `.\n\\post Increase ERC20 UtBase token balance of the beneficiary\n      by `_amount`.\n\\post It satisfies all post conditions of UtBase::unwrapInternal().\n     *",
            "id": 11354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11340,
                  "name": "onlyConsensusCogateway",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11295,
                  "src": "3985:22:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3985:22:45"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11336,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "3900:28:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3900:15:45",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11338,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "3938:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3890:69:45"
            },
            "returnParameters": {
              "id": 11342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4012:0:45"
            },
            "scope": 11487,
            "src": "3877:227:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11365,
              "nodeType": "Block",
              "src": "4587:52:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11360,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19576,
                          "src": "4612:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4612:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11362,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11356,
                        "src": "4624:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11359,
                      "name": "unwrapInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11486,
                      "src": "4597:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 11363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11364,
                  "nodeType": "ExpressionStatement",
                  "src": "4597:35:45"
                }
              ]
            },
            "documentation": "@notice Unwrap converts ERC20 UtBase to base coin.\n     * @dev This contract's base coin balance must always be greater than\n      amount.\n     * @param _amount Amount of ERC20 UtBase token to convert to base coin.\n     * \\pre Satisfies all conditions of UtBase::unwrapInternal.\n     * \\post Satisfies all conditions of UtBase::unwrapInternal.\n     ",
            "id": 11366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11356,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11366,
                  "src": "4544:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4534:31:45"
            },
            "returnParameters": {
              "id": 11358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4587:0:45"
            },
            "scope": 11487,
            "src": "4519:120:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11404,
              "nodeType": "Block",
              "src": "5254:293:45",
              "statements": [
                {
                  "assignments": [
                    11370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11370,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 11404,
                      "src": "5264:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5264:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11373,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 11371,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19576,
                      "src": "5281:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 11372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5281:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5264:26:45"
                },
                {
                  "assignments": [
                    11375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11375,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 11404,
                      "src": "5300:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5300:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11378,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 11376,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19576,
                      "src": "5318:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 11377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5318:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5300:28:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11380,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11370,
                          "src": "5360:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5369:1:45",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5360:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50617961626c6520616d6f756e742073686f756c64206e6f74206265207a65726f2e",
                        "id": 11383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5384:36:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d4df76d6debd612a9e17ab2beebfa387abfd5d0ede9c7c735f1e03f93b020cf",
                          "typeString": "literal_string \"Payable amount should not be zero.\""
                        },
                        "value": "Payable amount should not be zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d4df76d6debd612a9e17ab2beebfa387abfd5d0ede9c7c735f1e03f93b020cf",
                          "typeString": "literal_string \"Payable amount should not be zero.\""
                        }
                      ],
                      "id": 11379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "5339:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:91:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11385,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:91:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 11387,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17976,
                            "src": "5448:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 11391,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11389,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19708,
                                "src": "5465:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              ],
                              "id": 11388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5457:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 11390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5457:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5448:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11392,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11370,
                          "src": "5475:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5448:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11386,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19565,
                      "src": "5441:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5441:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11395,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:41:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11398,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19708,
                            "src": "5517:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          ],
                          "id": 11397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5509:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5509:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11400,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11375,
                        "src": "5524:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11401,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11370,
                        "src": "5533:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11396,
                      "name": "transferBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18184,
                      "src": "5493:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 11402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5493:47:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11403,
                  "nodeType": "ExpressionStatement",
                  "src": "5493:47:45"
                }
              ]
            },
            "documentation": "@notice Wrap converts base coin to ERC20 UtBase.\n     * @dev The ERC20 OST balance of contract should always be greater than the\n     received payable amount.\n     * \\pre msg.value should be non-zero.\n\\pre UtBase ERC20 token balance must be greater than\n     amount to be wrapped.\n     * \\post Increases ERC20 UtBase token balance of the caller by `msg.value`\n       amount.\n\\post Decreases ERC20 UtBase token balance of the UtBase contract by\n      `msg.value` amount.",
            "id": 11405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5214:2:45"
            },
            "returnParameters": {
              "id": 11368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5254:0:45"
            },
            "scope": 11487,
            "src": "5201:346:45",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11416,
              "nodeType": "Block",
              "src": "6036:42:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19576,
                          "src": "6052:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6052:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11413,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11407,
                        "src": "6064:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11410,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18270,
                      "src": "6046:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6046:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11415,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:25:45"
                }
              ]
            },
            "documentation": "@notice It allows to burn UtBase tokens for an account.\n     * @param _value The amount that will be burnt.\n     * \\pre msg.value should be non-zero.\n\\pre Caller must have atleast `_value` amount of ERC20 UtBase tokens.\n     * \\post Decreases total token supply of the token by `_value` amount.\n\\post Decreases caller's ERC20 UtBase token balance by `_value` amount.\n     ",
            "id": 11417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11407,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11417,
                  "src": "5999:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5999:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5998:16:45"
            },
            "returnParameters": {
              "id": 11409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6036:0:45"
            },
            "scope": 11487,
            "src": "5985:93:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11429,
              "nodeType": "Block",
              "src": "6600:44:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11425,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11419,
                        "src": "6620:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11426,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11421,
                        "src": "6630:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11424,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18312,
                      "src": "6610:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6610:27:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11428,
                  "nodeType": "ExpressionStatement",
                  "src": "6610:27:45"
                }
              ]
            },
            "documentation": "@notice It allows to burn tokens of the spender.\n     * @param _account The account whose tokens will be burnt.\n@param _value The amount that will be burnt.\n     * \\pre `_account` must approve `_value` amount to the caller\n     * \\post Decreases total token supply of the token by `_value` amount.\n\\post Decreases `_account` ERC20 UtBase token balance by\n      `_value` amount.",
            "id": 11430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11419,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 11430,
                  "src": "6545:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6545:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11421,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11430,
                  "src": "6563:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6544:34:45"
            },
            "returnParameters": {
              "id": 11423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6600:0:45"
            },
            "scope": 11487,
            "src": "6527:117:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11437,
              "nodeType": "Block",
              "src": "6879:42:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11435,
                    "name": "consensusCogateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11282,
                    "src": "6896:18:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11434,
                  "id": 11436,
                  "nodeType": "Return",
                  "src": "6889:25:45"
                }
              ]
            },
            "documentation": "@notice Gets the consensus cogateway contract address.\n     * @return Consensus cogateway contract address.",
            "id": 11438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConsensusCogateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6847:2:45"
            },
            "returnParameters": {
              "id": 11434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11433,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11438,
                  "src": "6870:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6870:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6869:9:45"
            },
            "scope": 11487,
            "src": "6817:104:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11445,
              "nodeType": "Block",
              "src": "7085:40:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11443,
                    "name": "totalTokenSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17972,
                    "src": "7102:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11442,
                  "id": 11444,
                  "nodeType": "Return",
                  "src": "7095:23:45"
                }
              ]
            },
            "documentation": "@notice Gets total token supply.\n     * @return Token token supply.",
            "id": 11446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalTokenSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7053:2:45"
            },
            "returnParameters": {
              "id": 11442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11446,
                  "src": "7076:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7076:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7075:9:45"
            },
            "scope": 11487,
            "src": "7025:100:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11485,
              "nodeType": "Block",
              "src": "7916:274:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11454,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11450,
                          "src": "7947:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 11455,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17976,
                            "src": "7958:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 11457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 11456,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11448,
                            "src": "7967:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7958:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7947:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 11459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7994:23:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 11453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "7926:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7926:101:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11461,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:101:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11464,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19708,
                                "src": "8053:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              ],
                              "id": 11463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8045:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 11465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8045:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 11466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8045:21:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11467,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11450,
                          "src": "8070:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8045:32:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11462,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19565,
                      "src": "8038:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8038:40:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11470,
                  "nodeType": "ExpressionStatement",
                  "src": "8038:40:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11472,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11448,
                        "src": "8105:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19708,
                            "src": "8127:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          ],
                          "id": 11473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8119:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8119:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11476,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11450,
                        "src": "8134:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11471,
                      "name": "transferBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18184,
                      "src": "8089:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 11477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8089:53:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11478,
                  "nodeType": "ExpressionStatement",
                  "src": "8089:53:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11482,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11450,
                        "src": "8175:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11479,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11448,
                        "src": "8153:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 11481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8153:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8153:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11484,
                  "nodeType": "ExpressionStatement",
                  "src": "8153:30:45"
                }
              ]
            },
            "documentation": "@notice Internal method to transfer the base coin equivalent amount to\n        beneficiary address.\n     * @param _beneficiary Beneficairy address which will receive base coin.\n@param _amount Amount of ERC20 UtBase tokens to be unwrapped.\n     * \\pre `amount` must be less than or equal to beneficiary token balance.\n\\pre UtBase contract base token balance must be greater than or\n     equal to `amount`.\n     * \\post UtBase contract receives `_amount` number of ERC20 UtBase tokens.\n\\post `_beneficiary` address receives `_amount` number of base coins.\n     ",
            "id": 11486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapInternal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11448,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 11486,
                  "src": "7835:28:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7835:15:45",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11450,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11486,
                  "src": "7873:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7873:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7825:69:45"
            },
            "returnParameters": {
              "id": 11452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7916:0:45"
            },
            "scope": 11487,
            "src": "7802:388:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 11488,
        "src": "931:7261:45"
      }
    ],
    "src": "0:8193:45"
  },
  "legacyAST": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/UtBase.sol",
    "exportedSymbols": {
      "UtBase": [
        11487
      ]
    },
    "id": 11488,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11256,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:45"
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/most/GenesisUtBase.sol",
        "file": "./GenesisUtBase.sol",
        "id": 11257,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 11232,
        "src": "621:29:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus/CoconsensusModule.sol",
        "file": "../consensus/CoconsensusModule.sol",
        "id": 11258,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 3813,
        "src": "651:44:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/MasterCopyNonUpgradable.sol",
        "file": "../proxies/MasterCopyNonUpgradable.sol",
        "id": 11259,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 12955,
        "src": "696:48:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/utility-token/ERC20Token.sol",
        "file": "../utility-token/ERC20Token.sol",
        "id": 11260,
        "nodeType": "ImportDirective",
        "scope": 11488,
        "sourceUnit": 18314,
        "src": "745:41:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11261,
              "name": "MasterCopyNonUpgradable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12954,
              "src": "950:23:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MasterCopyNonUpgradable_$12954",
                "typeString": "contract MasterCopyNonUpgradable"
              }
            },
            "id": 11262,
            "nodeType": "InheritanceSpecifier",
            "src": "950:23:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11263,
              "name": "GenesisUtBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11231,
              "src": "975:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GenesisUtBase_$11231",
                "typeString": "contract GenesisUtBase"
              }
            },
            "id": 11264,
            "nodeType": "InheritanceSpecifier",
            "src": "975:13:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11265,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18313,
              "src": "990:10:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$18313",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 11266,
            "nodeType": "InheritanceSpecifier",
            "src": "990:10:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11267,
              "name": "CoconsensusModule",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3812,
              "src": "1002:17:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CoconsensusModule_$3812",
                "typeString": "contract CoconsensusModule"
              }
            },
            "id": 11268,
            "nodeType": "InheritanceSpecifier",
            "src": "1002:17:45"
          }
        ],
        "contractDependencies": [
          83,
          3812,
          11231,
          12954,
          18313
        ],
        "contractKind": "contract",
        "documentation": "@title UtBase is an ERC20 token wrapper for the base coin that is used to\n       pay for gas consumption on the auxiliary chain.",
        "fullyImplemented": true,
        "id": 11487,
        "linearizedBaseContracts": [
          11487,
          3812,
          18313,
          83,
          11231,
          12954
        ],
        "name": "UtBase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 11271,
            "name": "TOKEN_SYMBOL",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1072:42:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 11269,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1072:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5542",
              "id": 11270,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:4:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e569bcaed2bd6a126a6ca553cafafe666a9158ad07b10e37d497ad9defe13573",
                "typeString": "literal_string \"UB\""
              },
              "value": "UB"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 11274,
            "name": "TOKEN_NAME",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1143:44:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 11272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1143:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "557442617365",
              "id": 11273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1179:8:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4a9e6675ebd7f00f655b68b1139da4c99e064dee644b8fa1729b9baff89885d9",
                "typeString": "literal_string \"UtBase\""
              },
              "value": "UtBase"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 11277,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1219:41:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 11275,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1219:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 11276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1258:2:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11282,
            "name": "consensusCogateway",
            "nodeType": "VariableDeclaration",
            "scope": 11487,
            "src": "1346:88:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11278,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1346:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303034643032",
                  "id": 11280,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1391:42:45",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x0000000000000000000000000000000000004d02"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 11279,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1383:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": "address"
              },
              "id": 11281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1383:51:45",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11294,
              "nodeType": "Block",
              "src": "1501:173:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11285,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19576,
                            "src": "1532:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1532:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11287,
                            "name": "getConsensusCogateway",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11438,
                            "src": "1546:21:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 11288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1546:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1532:37:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c792074686520636f6e73656e73757320636f6761746577617920636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 11290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1583:63:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ac451c1365e608a5348f85f9baca7c0e9b969a7cdde95aa4020d2cd70876e7f",
                          "typeString": "literal_string \"Only the consensus cogateway contract can call this function.\""
                        },
                        "value": "Only the consensus cogateway contract can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ac451c1365e608a5348f85f9baca7c0e9b969a7cdde95aa4020d2cd70876e7f",
                          "typeString": "literal_string \"Only the consensus cogateway contract can call this function.\""
                        }
                      ],
                      "id": 11284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "1511:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:145:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11292,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:145:45"
                },
                {
                  "id": 11293,
                  "nodeType": "PlaceholderStatement",
                  "src": "1666:1:45"
                }
              ]
            },
            "documentation": null,
            "id": 11295,
            "name": "onlyConsensusCogateway",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:2:45"
            },
            "src": "1463:211:45",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11333,
              "nodeType": "Block",
              "src": "2434:855:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11301,
                          "name": "totalTokenSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17972,
                          "src": "2465:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 11303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2493:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2485:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 11304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2485:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2465:30:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "55746261736520636f6e747261637420697320616c726561647920696e697469616c697a65642e",
                        "id": 11306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2509:41:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a2a16e882baa28e1203c0ab3ba89a3a8acaa396a935f67eb9d0dc212e2532ed",
                          "typeString": "literal_string \"Utbase contract is already initialized.\""
                        },
                        "value": "Utbase contract is already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a2a16e882baa28e1203c0ab3ba89a3a8acaa396a935f67eb9d0dc212e2532ed",
                          "typeString": "literal_string \"Utbase contract is already initialized.\""
                        }
                      ],
                      "id": 11300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2444:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:116:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11308,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:116:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11309,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17968,
                      "src": "2571:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11310,
                      "name": "TOKEN_SYMBOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11271,
                      "src": "2585:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2571:26:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11312,
                  "nodeType": "ExpressionStatement",
                  "src": "2571:26:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11313,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17966,
                      "src": "2607:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11314,
                      "name": "TOKEN_NAME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11274,
                      "src": "2619:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2607:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 11316,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:22:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11317,
                      "name": "tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17970,
                      "src": "2639:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11318,
                      "name": "TOKEN_DECIMALS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11277,
                      "src": "2655:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2639:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 11320,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:30:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11321,
                      "name": "totalTokenSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17972,
                      "src": "2679:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11322,
                      "name": "genesisTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11230,
                      "src": "2698:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2679:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11324,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:37:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 11325,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17976,
                        "src": "3238:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11329,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11327,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19708,
                            "src": "3255:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          ],
                          "id": 11326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3238:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11330,
                      "name": "genesisTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11230,
                      "src": "3264:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3238:44:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11332,
                  "nodeType": "ExpressionStatement",
                  "src": "3238:44:45"
                }
              ]
            },
            "documentation": "@notice Initializes the UtBase contract.\n     * \\pre Can be called only once by consensus cogateway contract\n     * \\post Sets the `tokenSymbol` storage variable with `TOKEN_SYMBOL`\n      constant value.\n\\post Sets the `tokenName` storage variable with `TOKEN_NAME`\n      constant value.\n\\post Sets the `tokenDecimals` storage variable with `TOKEN_DECIMALS`\n      constant value.\n\\post Sets the `totalTokenSupply` storage variable to genesis total\n      supply value.\n\\post Adds the balance for the (self) contract address with genesis\n      total supply value.     ",
            "id": 11334,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11298,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11297,
                  "name": "onlyCoconsensus",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3801,
                  "src": "2414:15:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2414:15:45"
              }
            ],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:45"
            },
            "returnParameters": {
              "id": 11299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:0:45"
            },
            "scope": 11487,
            "src": "2372:917:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11353,
              "nodeType": "Block",
              "src": "4012:92:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11344,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11336,
                        "src": "4028:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11345,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11338,
                        "src": "4042:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11343,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18227,
                      "src": "4022:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:28:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11347,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:28:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11349,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11336,
                        "src": "4075:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11350,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11338,
                        "src": "4089:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11348,
                      "name": "unwrapInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11486,
                      "src": "4060:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 11351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4060:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11352,
                  "nodeType": "ExpressionStatement",
                  "src": "4060:37:45"
                }
              ]
            },
            "documentation": "@notice Mints the ERC20 token for the beneficiary address and\n        unwraps its to base coin.\n     * @param _beneficiary Beneficairy address which will receive base coin.\n@param _amount Amount of UtBase tokens to be minted.\n     * \\pre Caller must be Consensus cogateway contract.\n     * \\post Increases total token supply by `_amount `.\n\\post Increase ERC20 UtBase token balance of the beneficiary\n      by `_amount`.\n\\post It satisfies all post conditions of UtBase::unwrapInternal().\n     *",
            "id": 11354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11340,
                  "name": "onlyConsensusCogateway",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 11295,
                  "src": "3985:22:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3985:22:45"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11336,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "3900:28:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3900:15:45",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11338,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11354,
                  "src": "3938:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3890:69:45"
            },
            "returnParameters": {
              "id": 11342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4012:0:45"
            },
            "scope": 11487,
            "src": "3877:227:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11365,
              "nodeType": "Block",
              "src": "4587:52:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11360,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19576,
                          "src": "4612:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4612:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11362,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11356,
                        "src": "4624:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11359,
                      "name": "unwrapInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11486,
                      "src": "4597:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 11363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11364,
                  "nodeType": "ExpressionStatement",
                  "src": "4597:35:45"
                }
              ]
            },
            "documentation": "@notice Unwrap converts ERC20 UtBase to base coin.\n     * @dev This contract's base coin balance must always be greater than\n      amount.\n     * @param _amount Amount of ERC20 UtBase token to convert to base coin.\n     * \\pre Satisfies all conditions of UtBase::unwrapInternal.\n     * \\post Satisfies all conditions of UtBase::unwrapInternal.\n     ",
            "id": 11366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11356,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11366,
                  "src": "4544:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4534:31:45"
            },
            "returnParameters": {
              "id": 11358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4587:0:45"
            },
            "scope": 11487,
            "src": "4519:120:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11404,
              "nodeType": "Block",
              "src": "5254:293:45",
              "statements": [
                {
                  "assignments": [
                    11370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11370,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 11404,
                      "src": "5264:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5264:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11373,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 11371,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19576,
                      "src": "5281:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 11372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5281:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5264:26:45"
                },
                {
                  "assignments": [
                    11375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11375,
                      "name": "account",
                      "nodeType": "VariableDeclaration",
                      "scope": 11404,
                      "src": "5300:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11374,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5300:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11378,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 11376,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19576,
                      "src": "5318:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 11377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5318:10:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5300:28:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11380,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11370,
                          "src": "5360:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5369:1:45",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5360:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50617961626c6520616d6f756e742073686f756c64206e6f74206265207a65726f2e",
                        "id": 11383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5384:36:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d4df76d6debd612a9e17ab2beebfa387abfd5d0ede9c7c735f1e03f93b020cf",
                          "typeString": "literal_string \"Payable amount should not be zero.\""
                        },
                        "value": "Payable amount should not be zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d4df76d6debd612a9e17ab2beebfa387abfd5d0ede9c7c735f1e03f93b020cf",
                          "typeString": "literal_string \"Payable amount should not be zero.\""
                        }
                      ],
                      "id": 11379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "5339:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:91:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11385,
                  "nodeType": "ExpressionStatement",
                  "src": "5339:91:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 11387,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17976,
                            "src": "5448:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 11391,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11389,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19708,
                                "src": "5465:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              ],
                              "id": 11388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5457:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 11390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5457:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5448:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11392,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11370,
                          "src": "5475:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5448:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11386,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19565,
                      "src": "5441:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5441:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11395,
                  "nodeType": "ExpressionStatement",
                  "src": "5441:41:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11398,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19708,
                            "src": "5517:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          ],
                          "id": 11397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5509:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5509:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11400,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11375,
                        "src": "5524:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11401,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11370,
                        "src": "5533:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11396,
                      "name": "transferBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18184,
                      "src": "5493:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 11402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5493:47:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11403,
                  "nodeType": "ExpressionStatement",
                  "src": "5493:47:45"
                }
              ]
            },
            "documentation": "@notice Wrap converts base coin to ERC20 UtBase.\n     * @dev The ERC20 OST balance of contract should always be greater than the\n     received payable amount.\n     * \\pre msg.value should be non-zero.\n\\pre UtBase ERC20 token balance must be greater than\n     amount to be wrapped.\n     * \\post Increases ERC20 UtBase token balance of the caller by `msg.value`\n       amount.\n\\post Decreases ERC20 UtBase token balance of the UtBase contract by\n      `msg.value` amount.",
            "id": 11405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5214:2:45"
            },
            "returnParameters": {
              "id": 11368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5254:0:45"
            },
            "scope": 11487,
            "src": "5201:346:45",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11416,
              "nodeType": "Block",
              "src": "6036:42:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19576,
                          "src": "6052:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6052:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11413,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11407,
                        "src": "6064:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11410,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18270,
                      "src": "6046:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6046:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11415,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:25:45"
                }
              ]
            },
            "documentation": "@notice It allows to burn UtBase tokens for an account.\n     * @param _value The amount that will be burnt.\n     * \\pre msg.value should be non-zero.\n\\pre Caller must have atleast `_value` amount of ERC20 UtBase tokens.\n     * \\post Decreases total token supply of the token by `_value` amount.\n\\post Decreases caller's ERC20 UtBase token balance by `_value` amount.\n     ",
            "id": 11417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11407,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11417,
                  "src": "5999:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5999:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5998:16:45"
            },
            "returnParameters": {
              "id": 11409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6036:0:45"
            },
            "scope": 11487,
            "src": "5985:93:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11429,
              "nodeType": "Block",
              "src": "6600:44:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11425,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11419,
                        "src": "6620:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11426,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11421,
                        "src": "6630:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11424,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18312,
                      "src": "6610:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6610:27:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11428,
                  "nodeType": "ExpressionStatement",
                  "src": "6610:27:45"
                }
              ]
            },
            "documentation": "@notice It allows to burn tokens of the spender.\n     * @param _account The account whose tokens will be burnt.\n@param _value The amount that will be burnt.\n     * \\pre `_account` must approve `_value` amount to the caller\n     * \\post Decreases total token supply of the token by `_value` amount.\n\\post Decreases `_account` ERC20 UtBase token balance by\n      `_value` amount.",
            "id": 11430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11419,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 11430,
                  "src": "6545:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6545:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11421,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 11430,
                  "src": "6563:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6563:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6544:34:45"
            },
            "returnParameters": {
              "id": 11423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6600:0:45"
            },
            "scope": 11487,
            "src": "6527:117:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11437,
              "nodeType": "Block",
              "src": "6879:42:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11435,
                    "name": "consensusCogateway",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11282,
                    "src": "6896:18:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11434,
                  "id": 11436,
                  "nodeType": "Return",
                  "src": "6889:25:45"
                }
              ]
            },
            "documentation": "@notice Gets the consensus cogateway contract address.\n     * @return Consensus cogateway contract address.",
            "id": 11438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConsensusCogateway",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6847:2:45"
            },
            "returnParameters": {
              "id": 11434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11433,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11438,
                  "src": "6870:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6870:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6869:9:45"
            },
            "scope": 11487,
            "src": "6817:104:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11445,
              "nodeType": "Block",
              "src": "7085:40:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11443,
                    "name": "totalTokenSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17972,
                    "src": "7102:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11442,
                  "id": 11444,
                  "nodeType": "Return",
                  "src": "7095:23:45"
                }
              ]
            },
            "documentation": "@notice Gets total token supply.\n     * @return Token token supply.",
            "id": 11446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalTokenSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7053:2:45"
            },
            "returnParameters": {
              "id": 11442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 11446,
                  "src": "7076:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7076:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7075:9:45"
            },
            "scope": 11487,
            "src": "7025:100:45",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11485,
              "nodeType": "Block",
              "src": "7916:274:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 11454,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11450,
                          "src": "7947:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 11455,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17976,
                            "src": "7958:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 11457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 11456,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11448,
                            "src": "7967:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7958:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7947:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e73756666696369656e742062616c616e63652e",
                        "id": 11459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7994:23:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        },
                        "value": "Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
                          "typeString": "literal_string \"Insufficient balance.\""
                        }
                      ],
                      "id": 11453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "7926:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7926:101:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11461,
                  "nodeType": "ExpressionStatement",
                  "src": "7926:101:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 11464,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19708,
                                "src": "8053:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UtBase_$11487",
                                  "typeString": "contract UtBase"
                                }
                              ],
                              "id": 11463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8045:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 11465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8045:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 11466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8045:21:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 11467,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11450,
                          "src": "8070:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8045:32:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11462,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19565,
                      "src": "8038:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8038:40:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11470,
                  "nodeType": "ExpressionStatement",
                  "src": "8038:40:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11472,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11448,
                        "src": "8105:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 11474,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19708,
                            "src": "8127:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UtBase_$11487",
                              "typeString": "contract UtBase"
                            }
                          ],
                          "id": 11473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8119:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 11475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8119:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11476,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11450,
                        "src": "8134:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11471,
                      "name": "transferBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18184,
                      "src": "8089:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 11477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8089:53:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11478,
                  "nodeType": "ExpressionStatement",
                  "src": "8089:53:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11482,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11450,
                        "src": "8175:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11479,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11448,
                        "src": "8153:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 11481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8153:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8153:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11484,
                  "nodeType": "ExpressionStatement",
                  "src": "8153:30:45"
                }
              ]
            },
            "documentation": "@notice Internal method to transfer the base coin equivalent amount to\n        beneficiary address.\n     * @param _beneficiary Beneficairy address which will receive base coin.\n@param _amount Amount of ERC20 UtBase tokens to be unwrapped.\n     * \\pre `amount` must be less than or equal to beneficiary token balance.\n\\pre UtBase contract base token balance must be greater than or\n     equal to `amount`.\n     * \\post UtBase contract receives `_amount` number of ERC20 UtBase tokens.\n\\post `_beneficiary` address receives `_amount` number of base coins.\n     ",
            "id": 11486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapInternal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11448,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 11486,
                  "src": "7835:28:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7835:15:45",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11450,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 11486,
                  "src": "7873:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7873:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7825:69:45"
            },
            "returnParameters": {
              "id": 11452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7916:0:45"
            },
            "scope": 11487,
            "src": "7802:388:45",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 11488,
        "src": "931:7261:45"
      }
    ],
    "src": "0:8193:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2020-03-21T06:48:34.741Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "Address of the owner account.",
          "_spender": "Address of the spender account."
        },
        "return": "allowance_ Remaining allowance for the spender to spend from                   owner's account."
      },
      "approve(address,uint256)": {
        "details": "Allows _spender address to withdraw from function caller's account,     multiple times up to the _value amount, if this function is called     again it overwrites the current allowance with _value.",
        "params": {
          "_spender": "Address authorized to spend from the function caller's                 address.",
          "_value": "Amount up to which spender is authorized to spend."
        },
        "return": "bool `true` for a successful approval, `false` otherwise."
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "Address of the owner account."
        },
        "return": "balance_ Account balance of the owner account."
      },
      "burn(uint256)": {
        "params": {
          "_value": "The amount that will be burnt.     * \\pre msg.value should be non-zero. \\pre Caller must have atleast `_value` amount of ERC20 UtBase tokens.     * \\post Decreases total token supply of the token by `_value` amount. \\post Decreases caller's ERC20 UtBase token balance by `_value` amount.     "
        }
      },
      "burnFrom(address,uint256)": {
        "params": {
          "_account": "The account whose tokens will be burnt.",
          "_value": "The amount that will be burnt.     * \\pre `_account` must approve `_value` amount to the caller     * \\post Decreases total token supply of the token by `_value` amount. \\post Decreases `_account` ERC20 UtBase token balance by      `_value` amount."
        }
      },
      "decimals()": {
        "return": "tokenDecimals Decimals of the token."
      },
      "getCoconsensus()": {
        "return": "Coconsensus contract address."
      },
      "getConsensusCogateway()": {
        "return": "Consensus cogateway contract address."
      },
      "getTotalTokenSupply()": {
        "return": "Token token supply."
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "Amount of UtBase tokens to be minted.     * \\pre Caller must be Consensus cogateway contract.     * \\post Increases total token supply by `_amount `. \\post Increase ERC20 UtBase token balance of the beneficiary      by `_amount`. \\post It satisfies all post conditions of UtBase::unwrapInternal().     *",
          "_beneficiary": "Beneficairy address which will receive base coin."
        }
      },
      "name()": {
        "return": "tokenName_ Name of the token."
      },
      "symbol()": {
        "return": "tokenSymbol_ Symbol of the token."
      },
      "totalSupply()": {
        "details": "Get totalTokenSupply as view so that child cannot edit.",
        "return": "totalTokenSupply_ Total token supply."
      },
      "transfer(address,uint256)": {
        "details": "Fires the transfer event, reverts if _from account does not have     enough tokens to transfer.",
        "params": {
          "_to": "Address to which tokens are transferred.",
          "_value": "Amount of tokens to be transferred."
        },
        "return": "success_ `true` for a successful transfer, `false` otherwise."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Allows a contract to transfer tokens on behalf of _from address     to _to address, the function caller has to be pre-authorized for     multiple transfers up to the total of _value amount by the _from     address.",
        "params": {
          "_from": "Address from which tokens are transferred.",
          "_to": "Address to which tokens are transferred.",
          "_value": "Amount of tokens transferred."
        },
        "return": "success_ `true` for a successful transfer, `false` otherwise."
      },
      "unwrap(uint256)": {
        "details": "This contract's base coin balance must always be greater than      amount.",
        "params": {
          "_amount": "Amount of ERC20 UtBase token to convert to base coin.     * \\pre Satisfies all conditions of UtBase::unwrapInternal.     * \\post Satisfies all conditions of UtBase::unwrapInternal.     "
        }
      },
      "wrap()": {
        "details": "The ERC20 OST balance of contract should always be greater than the     received payable amount.     * \\pre msg.value should be non-zero. \\pre UtBase ERC20 token balance must be greater than     amount to be wrapped.     * \\post Increases ERC20 UtBase token balance of the caller by `msg.value`       amount. \\post Decreases ERC20 UtBase token balance of the UtBase contract by      `msg.value` amount."
      }
    },
    "title": "UtBase is an ERC20 token wrapper for the base coin that is used to       pay for gas consumption on the auxiliary chain."
  },
  "userdoc": {
    "methods": {
      "allowance(address,address)": {
        "notice": "Public function to get the allowance."
      },
      "approve(address,uint256)": {
        "notice": "Public function to approve an account for transfer."
      },
      "balanceOf(address)": {
        "notice": "Get the balance of an account."
      },
      "burn(uint256)": {
        "notice": "It allows to burn UtBase tokens for an account."
      },
      "burnFrom(address,uint256)": {
        "notice": "It allows to burn tokens of the spender."
      },
      "decimals()": {
        "notice": "Public function to get the decimals of the token."
      },
      "getCoconsensus()": {
        "notice": "Gets the coconsensus contract address."
      },
      "getConsensusCogateway()": {
        "notice": "Gets the consensus cogateway contract address."
      },
      "getTotalTokenSupply()": {
        "notice": "Gets total token supply."
      },
      "mint(address,uint256)": {
        "notice": "Mints the ERC20 token for the beneficiary address and        unwraps its to base coin."
      },
      "name()": {
        "notice": "Public function to get the name of the token."
      },
      "setup()": {
        "notice": "Initializes the UtBase contract.     * \\pre Can be called only once by consensus cogateway contract     * \\post Sets the `tokenSymbol` storage variable with `TOKEN_SYMBOL`      constant value. \\post Sets the `tokenName` storage variable with `TOKEN_NAME`      constant value. \\post Sets the `tokenDecimals` storage variable with `TOKEN_DECIMALS`      constant value. \\post Sets the `totalTokenSupply` storage variable to genesis total      supply value. \\post Adds the balance for the (self) contract address with genesis      total supply value.     "
      },
      "symbol()": {
        "notice": "Public function to get the symbol of the token."
      },
      "totalSupply()": {
        "notice": "Public function to get the total supply of the tokens."
      },
      "transfer(address,uint256)": {
        "notice": "Public function to transfer the token."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Public function transferFrom."
      },
      "unwrap(uint256)": {
        "notice": "Unwrap converts ERC20 UtBase to base coin."
      },
      "wrap()": {
        "notice": "Wrap converts base coin to ERC20 UtBase."
      }
    }
  }
}