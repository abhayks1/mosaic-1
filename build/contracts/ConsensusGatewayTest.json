{
  "contractName": "ConsensusGatewayTest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "remoteGateway",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "GatewayProven",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEPOSIT_INTENT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INBOX_OFFSET",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "KERNEL_INTENT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MESSAGE_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_CHANNEL_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_DOMAIN_SEPARATOR_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_DOMAIN_SEPARATOR_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_DOMAIN_SEPARATOR_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OUTBOX_OFFSET",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "WITHDRAW_INTENT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_rlpParentNodes",
          "type": "bytes"
        }
      ],
      "name": "confirmWithdraw",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consensus",
      "outputs": [
        {
          "internalType": "contract ConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentMetablockHeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_core",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        }
      ],
      "name": "declareOpenKernel",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "encodedAccountPath",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRemoteGatewayLatestProvenBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_metachainId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_outbox",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_inbox",
          "type": "address"
        }
      ],
      "name": "hashChannelIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "channelIdentifier_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_valueToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "hashDepositIntent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "depositIntentHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_height",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_kernelHash",
          "type": "bytes32"
        }
      ],
      "name": "hashKernelIntent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "kernelIntentHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_valueToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_utilityToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "hashWithdrawIntent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "withdrawIntentHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "inboundChannelIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_intentHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "inboxMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "inboxNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "messageInbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "messageOutbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "most",
      "outputs": [
        {
          "internalType": "contract ERC20I",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outboundChannelIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "outbox",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_intentHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "outboxMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "outboxNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outboxStorageIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_metachainId",
          "type": "bytes32"
        },
        {
          "internalType": "contract ConsensusInterface",
          "name": "_consensus",
          "type": "address"
        },
        {
          "internalType": "contract ERC20I",
          "name": "_most",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_consensusCogateway",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxStorageRootItems",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_outboxStorageIndex",
          "type": "uint8"
        }
      ],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stateRootProvider",
      "outputs": [
        {
          "internalType": "contract StateRootInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "storageAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storageRoots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "utilityToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ConsensusInterface",
          "name": "_consensus",
          "type": "address"
        }
      ],
      "name": "setConsensus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"remoteGateway\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"GatewayProven\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEPOSIT_INTENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INBOX_OFFSET\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"KERNEL_INTENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MESSAGE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_CHANNEL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_DOMAIN_SEPARATOR_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_DOMAIN_SEPARATOR_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_DOMAIN_SEPARATOR_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OUTBOX_OFFSET\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_INTENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_rlpParentNodes\",\"type\":\"bytes\"}],\"name\":\"confirmWithdraw\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"consensus\",\"outputs\":[{\"internalType\":\"contract ConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentMetablockHeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_core\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"}],\"name\":\"declareOpenKernel\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"encodedAccountPath\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRemoteGatewayLatestProvenBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_metachainId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_outbox\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_inbox\",\"type\":\"address\"}],\"name\":\"hashChannelIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"channelIdentifier_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_valueToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"hashDepositIntent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositIntentHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_height\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_kernelHash\",\"type\":\"bytes32\"}],\"name\":\"hashKernelIntent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"kernelIntentHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_valueToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilityToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"hashWithdrawIntent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawIntentHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inboundChannelIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_intentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"inboxMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inboxNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messageInbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messageOutbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"most\",\"outputs\":[{\"internalType\":\"contract ERC20I\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outboundChannelIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"outbox\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_intentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"outboxMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"outboxNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outboxStorageIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ConsensusInterface\",\"name\":\"_consensus\",\"type\":\"address\"}],\"name\":\"setConsensus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_metachainId\",\"type\":\"bytes32\"},{\"internalType\":\"contract ConsensusInterface\",\"name\":\"_consensus\",\"type\":\"address\"},{\"internalType\":\"contract ERC20I\",\"name\":\"_most\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_consensusCogateway\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxStorageRootItems\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_outboxStorageIndex\",\"type\":\"uint8\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stateRootProvider\",\"outputs\":[{\"internalType\":\"contract StateRootInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"storageAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storageRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"utilityToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"confirmWithdraw(uint256,address,uint256,uint256,address,uint256,bytes)\":{\"params\":{\"_amount\":\"MOST token amount for withdrawal\",\"_beneficiary\":\"Address of beneficiary where tokens will be withdrawn.\",\"_blockNumber\":\"Block number of Aux chain against which storage proof is generated.\",\"_feeGasLimit\":\"Gas limit at which fee will be capped.\",\"_feeGasPrice\":\"Gas price at which fee will be calculated.\",\"_rlpParentNodes\":\"Storage merkle proof to verify message declaration on the origin chain.\",\"_withdrawer\":\"Address of the withdrawer account.\"},\"return\":\"messageHash_ Message Hash     * \\\\pre `_amount` is not 0. \\\\pre `_beneficiary` address is not 0. \\\\pre `_withdrawer` address is not 0. \\\\pre `_rlpParentNodes` is not 0     * \\\\post Adds a new entry in `inbox` mapping storage variable. The value is      set as `true` for `messagehash_` in `inbox` mapping. The      `messageHash_` is calculated by `MessageInbox.confirmMessage`. \\\\post Update the MessageInbox.inboxNonces storage mapping variable by      incrementing the value for `msg.sender` by one. \\\\post Transfers the `most` token to the `msg.sender` address as a fees.      The `fees` amount is calculated by `ERC20GatewayBase::reward()` \\\\post Transfer the `most` token to the `_beneficiary` address. The      transfer amount calculated as `_amount-fees`\"},\"declareOpenKernel(address,uint256,uint256)\":{\"details\":\"In case of chain halting when new Core is created, then new kernel     can be opened at the same height.     In normal cases, since this function is called by consensus, we can     trust that same height will not be passed.     *      Function requires:         - Only consensus can call         - Core address should not be 0         - Either Kernel height should equal currentMetablockHeight plus           one or kernel can be opened at same height in case of chain           halting.\",\"params\":{\"_core\":\"Core contract address.\",\"_feeGasLimit\":\"Fee gas limit.\",\"_feeGasPrice\":\"Fee gas price.\"},\"return\":\"messageHash_ Message hash.\"},\"deposit(uint256,address,uint256,uint256)\":{\"params\":{\"_amount\":\"MOST token deposit amount in atto.\",\"_beneficiary\":\"Address of beneficiary on auxiliary chain.\",\"_feeGasLimit\":\"Fee gas limit at which rewards will be calculated.\",\"_feeGasPrice\":\"Fee gas price at which rewards will be calculated.\"},\"return\":\"messageHash_ Message hash.\"},\"getRemoteGatewayLatestProvenBlockNumber()\":{\"return\":\"blockNumber_ Remote gateway latest proven block number.\"},\"hashChannelIdentifier(bytes32,address,address)\":{\"params\":{\"_inbox\":\"Inbox address.\",\"_metachainId\":\"Metachain identifier.\",\"_outbox\":\"Outbox address.\"}},\"hashDepositIntent(address,uint256,address)\":{\"params\":{\"_amount\":\"Amount of tokens.\",\"_beneficiary\":\"Beneficiary address.\",\"_valueToken\":\"Value token Address.\"},\"return\":\"depositIntentHash_ Hash of deposit intent.\"},\"hashKernelIntent(uint256,bytes32)\":{\"params\":{\"_height\":\"Height of metablock.\",\"_kernelHash\":\"Hash of kernel at given height.\"},\"return\":\"kernelIntentHash_ Kernel intent hash.\"},\"hashWithdrawIntent(address,address,uint256,address)\":{\"params\":{\"_amount\":\"Amount of tokens.\",\"_beneficiary\":\"Beneficiary address.\",\"_utilityToken\":\"Utility token address.\",\"_valueToken\":\"Value token address.\"},\"return\":\"withdrawIntentHash_ Hash of withdraw intent.\"},\"inboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"params\":{\"_feeGasLimit\":\"Fee gas limit.\",\"_feeGasPrice\":\"Fee gas price.\",\"_intentHash\":\"Intent hash of message.\",\"_nonce\":\"Nonce of sender.\",\"_sender\":\"Sender address.\"},\"return\":\"messageHash_ Message hash.\"},\"outboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"params\":{\"_feeGasLimit\":\"Fee gas limit.\",\"_feeGasPrice\":\"Fee gas price.\",\"_intentHash\":\"Intent hash of message.\",\"_nonce\":\"Nonce of sender.\",\"_sender\":\"Sender address.\"},\"return\":\"messageHash_ Message hash.\"},\"setup(bytes32,address,address,address,uint256,uint8)\":{\"details\":\"- Function can only be called once is ensured by setup function of       message box.     - Validations for input parameters are done in message box setup method.\",\"params\":{\"_consensus\":\"Address of consensus contract.\",\"_consensusCogateway\":\"Address of consensus cogateway contract.\",\"_maxStorageRootItems\":\"Maximum number of storage roots stored.\",\"_metachainId\":\"Metachain Id\",\"_most\":\"Address of MOST contract.\",\"_outboxStorageIndex\":\"Outbox storage index of consensus cogateway.\"}}}},\"userdoc\":{\"methods\":{\"confirmWithdraw(uint256,address,uint256,uint256,address,uint256,bytes)\":{\"notice\":\"Confirm withdraw in order to transfer most.\"},\"declareOpenKernel(address,uint256,uint256)\":{\"notice\":\"Function to declare open kernel in consensus gateway.\"},\"deposit(uint256,address,uint256,uint256)\":{\"notice\":\"Deposit funds to mint on auxiliary chain. Depositor needs to        approve this contract with the deposit amount.\"},\"getRemoteGatewayLatestProvenBlockNumber()\":{\"notice\":\"Gets the remote gateway latest proven block number.\"},\"hashChannelIdentifier(bytes32,address,address)\":{\"notice\":\"Generate channel identifier hash from the input params\"},\"hashDepositIntent(address,uint256,address)\":{\"notice\":\"It returns hash of deposit intent.\"},\"hashKernelIntent(uint256,bytes32)\":{\"notice\":\"Creates kernel intent hash.\"},\"hashWithdrawIntent(address,address,uint256,address)\":{\"notice\":\"It returns hash of withdraw intent.\"},\"inboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"notice\":\"Generate inbox message hash from the input params\"},\"outboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"notice\":\"Generate outbox message hash from the input params\"},\"setup(bytes32,address,address,address,uint256,uint8)\":{\"notice\":\"Setup function for consensus gateway.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/test/consensus_gateway/ConsensusGatewayTest.sol\":\"ConsensusGatewayTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/ERC20I.sol\":{\"keccak256\":\"0x66811f01b3f1cdb2bbbc6e0d9921c3989ec3f43544c5f68c11ea99fa9bfe0953\",\"urls\":[\"bzz-raw://9a2e4f5f704bcc883d892e5c8746119c88771c16e5ea662d53515207a2d37462\",\"dweb:/ipfs/QmWqv2PzyGA21rSNrzFNTqE6hxZDap2BvEoiB3Y7FrsHxo\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus-gateway/ConsensusGateway.sol\":{\"keccak256\":\"0x6e98056bd715552eec315c2666cc975879af987690723976662200aec936e7b9\",\"urls\":[\"bzz-raw://1b5f52dc2bf1eee920b099868ffbd96c8a81e5c68156ce704fb35d2aa37b7a89\",\"dweb:/ipfs/QmcFp9dnLXgkuygbikrQoRwktUDRkfqwdMRf9xaWaCqPXT\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus-gateway/ConsensusGatewayBase.sol\":{\"keccak256\":\"0xcf58c10c0a22d4b95bb1f8e8321c1de371ad91f71db4fee254ccdb41be31fc5f\",\"urls\":[\"bzz-raw://772aa8f0c5eefac056ba31e96d20e40e95ecf5a619152bfefce0cc049d847e1a\",\"dweb:/ipfs/QmaAZ2MFn5T1NC2nt8zqYe8c6SYFPX1BpWoEBMJ2t6xurJ\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus-gateway/ConsensusGatewayInterface.sol\":{\"keccak256\":\"0x8d9b64edcb090d7c7966da96cd55e51d5ce7db6d0ac5440baa25d806dea7e04e\",\"urls\":[\"bzz-raw://36e0e3eb9dfc853f1c3a2363d255de0163822cda3315dfdc5424465d205c2b18\",\"dweb:/ipfs/QmacfBvRD3144S54dphDi8KUAorEdceRcm4DZFMWMsXLjs\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus/ConsensusInterface.sol\":{\"keccak256\":\"0x1912e0e28034ce3e7acaae8b34e26e1875e9afab60c4777f9bd68323e0445dd4\",\"urls\":[\"bzz-raw://574a73c3b8d5ddfd8898cdae1e65052558902126ddcdedbe4f585077400d172d\",\"dweb:/ipfs/QmP9LNk3zFphmrbtmFmb3wsXVfSGK4udbz4A6J8dBzrJdv\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus/ConsensusModule.sol\":{\"keccak256\":\"0x7b6a76b998a80813b06bbd950d2037249a15e1d0c9fbba46cfc190c04d643de4\",\"urls\":[\"bzz-raw://ec6aa62754121b74b67ca7693fd60203cfc19487b579a54c7c437feef5d36d7b\",\"dweb:/ipfs/QmQKs1sCtsiFkjw2tjHmToC5ji8CKUUh2WJMqBq2qFsfGf\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/core/CoreInterface.sol\":{\"keccak256\":\"0xcc1fa8b4d6ab373761f72643f5d810e473ccfc8060d3e1d6ad6bb622dea6aec4\",\"urls\":[\"bzz-raw://d9d72083618dcf999a5d3da7f53fa4d6967286e22f8d725c9b6960aa4127eb9d\",\"dweb:/ipfs/QmWcyvQQpVNuytSpWft2eucDhqvPtwmvXkRZjA4pDGTfQ9\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/ERC20GatewayBase.sol\":{\"keccak256\":\"0x607f9a25822bebdb0841e1a526a0052d86554b78e1cbf2032b857614b078a383\",\"urls\":[\"bzz-raw://b3e19be410c3d1e9866a0d414743612ad5fccc8ee3b33523d3eae4aaeddbc36e\",\"dweb:/ipfs/QmWWBGUiYHYF8ry6UR7ToYcNwPC3Z4kwUAWEQXwHaFoDz1\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/BytesLib.sol\":{\"keccak256\":\"0xa86099cdff7d8a5b18047fc5008d7bf59608afde751578e0b045c3c27566be59\",\"urls\":[\"bzz-raw://98e8a275feab79dd6072fc7f6c763fa6bc540f20b4adcd4e7803a5b8db0dce23\",\"dweb:/ipfs/QmUB87X6nMTdrbEs7VYTmHcbckaqhvZhz3xJf28GyC1jE7\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/CircularBufferUint.sol\":{\"keccak256\":\"0xa9d4af0caacd760200028696a0e489ba170568fcfae0fc90d93aab1af88e8734\",\"urls\":[\"bzz-raw://7eead9e2e268db6f8144820c293e944420017df2c3caa65f3ce55cb27f3784f7\",\"dweb:/ipfs/QmNnLSJZXR7KLZ9SCTzWsyS8Z7DW4peaaf1f3b76rAJziV\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/MerklePatriciaProof.sol\":{\"keccak256\":\"0x1dee3ebfd376b49493b173bb770b67dd5de59efc1340928f776010c6f5743bbb\",\"urls\":[\"bzz-raw://da4dca85a0c70cb4ba29b74539c82ee91a87b9ce1293a6c20bdcfca0e0059756\",\"dweb:/ipfs/QmQzshWMRCXY1qhhqsaeCQE3yUfrfjxLcyiaU4rw4xzxGf\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/RLP.sol\":{\"keccak256\":\"0x771918fb6df7d35ceca7a040fea7c42a45180bcf9a08826e601587890d626942\",\"urls\":[\"bzz-raw://334cddd5dc47f25210244011532f775a0e55acda674c1ed6ebe71b39fa7005b8\",\"dweb:/ipfs/QmSafCKHyJzer8zWCSPeDRcJNdF9FnMzP4TLXHEHAjV6gz\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageBox.sol\":{\"keccak256\":\"0x927291436edee3b3e08b3621f21ea0f68e71d5f8c3399278524c46fda0e78516\",\"urls\":[\"bzz-raw://8e92a4db303b072fd4d4f9b81dfcdadb136ee57e6c0d1bfb5fb0a75e44d92f06\",\"dweb:/ipfs/QmPcamtsmPWK5zEQq744UvEihszJX1qzQn12v5FmyDbJpR\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageBus.sol\":{\"keccak256\":\"0x7993f6f43f88667c78a887f6d7fefc31bf56137e8f7d6efce4a8524c3039713d\",\"urls\":[\"bzz-raw://ef1f2bcc662d56082018dde3663aab05766d7571363e39bb19992014f18cc309\",\"dweb:/ipfs/QmcdtkHacaW4oSQsZc3mRsLGcsDVznF1YjTyUVabk6JKUU\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageInbox.sol\":{\"keccak256\":\"0x91fa0c1522b9cca52bc9f2f0c081bcb2684f63edc578a189ccab0db6cfa397f3\",\"urls\":[\"bzz-raw://c33639fdb91586cfcad00ebe3b6b102d1bafeae079f360ac28fdaaf5c47ee258\",\"dweb:/ipfs/QmNMLtjiGMSvrGJUrc18231UcXHsiKh6NEvr3r2dSb7jQe\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageOutbox.sol\":{\"keccak256\":\"0xd7e7b38166076e1008a01dee9c6aa7484b9806e41d531f0838a237a5947f2e6f\",\"urls\":[\"bzz-raw://b4ef328a798ad3ad196d1df454301772e0d813d0fbb565c8c9ebafe3dea19fb7\",\"dweb:/ipfs/QmYnwUFdPAcWyGochUFjvDxHdzmr46CPUQFxQTQGeT5SDJ\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/Proof.sol\":{\"keccak256\":\"0x24418a6fa2d6f8a7c3145fd9ab6683c6abf0d557468737fd2128d388b75ea2ee\",\"urls\":[\"bzz-raw://46398046027443a0eb16a73fe6e829cf492a839440cbab9a09656e248dd1471e\",\"dweb:/ipfs/QmWxoLbQcpRMaNsZ9s3HjfL8eRK7BfTZ1eHSvyFxR9b1SN\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/StateRootInterface.sol\":{\"keccak256\":\"0x608d1a23dc2c9b3c9b3b14a8792710b8e180001e93fb5c2541b8ac0d8d211592\",\"urls\":[\"bzz-raw://5a6daebf2096689a844b311cdd4ff8a6af57a8170d4d2093d31c47f17d9ace1f\",\"dweb:/ipfs/QmaMPVMmqdZu9AsaNpqK8W2q1nFYXnFDJDYWiNMvxPE9Wt\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/MasterCopyNonUpgradable.sol\":{\"keccak256\":\"0x675eaeceda96f0a2ac02345f61797c120bef572f362309ec58de3b21e321a434\",\"urls\":[\"bzz-raw://3dd3e80d5da6f94166f45b8b9f80fe08c29477ce0f0ee03d08b7b35558bc373e\",\"dweb:/ipfs/QmTkdRqRx8kicDK7GvWQsUK25PPLNE8fvotfhwpLJaECbR\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/reputation/ReputationInterface.sol\":{\"keccak256\":\"0x8f9b8e2e7fbecd6b401581fc4f951aa395b78227d455e1c52c91650f88f2ec52\",\"urls\":[\"bzz-raw://e6e737aad05f25171be0671c44d7e68ac06ee825030b2fc3b82a43bb8afbb191\",\"dweb:/ipfs/QmTqMGRc4iV3WeHibPGk9BsEBts7UPZqUWQM5sonQx1X9Y\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/test/consensus_gateway/ConsensusGatewayTest.sol\":{\"keccak256\":\"0xa70977403f2158dcd7c7f716eda9b05bc6434e5b9eda8bdae80e2fdda798b052\",\"urls\":[\"bzz-raw://1ad62e3293004d3c84060c27acee1e0098083a391c705779f31ac4064cef2908\",\"dweb:/ipfs/QmZ4XEPCE8bR7pYtsSGRwxuR1d3AL5n51C5EPA4iATYggp\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/utility-token/UtilityTokenInterface.sol\":{\"keccak256\":\"0x40e7b2c069cd9af8a2dc92728b5ee66a76d768aa77bbd36bea4f461a2a6198df\",\"urls\":[\"bzz-raw://4ad0c808199fbbb40a459fc46a781ffbde0fff8913baea405fd9075c5ffd7396\",\"dweb:/ipfs/QmUiYsgKb3U7jR2p8sz2Qc1ZXQdjHpZXYBsadW3AzE3GW6\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/version/MosaicVersion.sol\":{\"keccak256\":\"0x67b812c975e8c8425f3165b9d911700927100a0ab5a9153beff48dacdea5575f\",\"urls\":[\"bzz-raw://d142fbfbbf062f87c83108d9d074462d14c744658014dc092b5d1500e60e963e\",\"dweb:/ipfs/QmbcDWi6WTwTSs7BoygUXjosGgzMuM8gxmJu5XQFAyFfaQ\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]}},\"version\":1}",
  "bytecode": "0x6080604052601280546001600160a01b031916905534801561002057600080fd5b506131c3806100306000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c8063928a735a1161013b578063d31b5968116100b8578063efefe0eb1161007c578063efefe0eb14610710578063f02a0e9014610718578063f0df1e7314610720578063f732ecff14610728578063fe08d8181461073057610248565b8063d31b59681461066a578063d4d1118514610690578063ddd335eb14610698578063e5acd280146106d6578063efa9c7c91461070857610248565b8063b1c91e21116100ff578063b1c91e21146105e6578063b4907ddc146105e6578063bd362374146105ee578063befce88e1461060b578063c9a29f3c1461062e57610248565b8063928a735a14610592578063965ef01b1461059a5780639f0b7dfe146105a2578063ae640285146105d6578063ae86ed89146105de57610248565b8063523ce242116101c9578063610ebfe21161018d578063610ebfe2146105255780636f0372af146105425780637ddcca171461057a57806385248b8a146105825780638ef3f7611461058a57610248565b8063523ce2421461049857806358d7889c146104c95780635c1dc83a146104d15780635da7560c146104f75780635ecec5641461051d57610248565b806320e1855f1161021057806320e1855f1461040e5780632fe05ad9146104325780633b7f2f191461043a57806346e356b114610442578063506fba061461044a57610248565b806302369ae01461024d57806302de1ba9146102ff57806309bf5f38146103355780630e31eb601461035357806316ad76b814610391575b600080fd5b6102ed600480360360e081101561026357600080fd5b8135916001600160a01b0360208201358116926040830135926060810135926080820135169160a0820135919081019060e0810160c08201356401000000008111156102ae57600080fd5b8201836020820111156102c057600080fd5b803590602001918460018302840111640100000000831117156102e257600080fd5b509092509050610738565b60408051918252519081900360200190f35b6102ed6004803603606081101561031557600080fd5b506001600160a01b03813581169160208101359160409091013516610a91565b61033d610af6565b6040805160ff9092168252519081900360200190f35b6102ed600480360360a081101561036957600080fd5b50803590602081013590604081013590606081013590608001356001600160a01b0316610b06565b610399610b22565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103d35781810151838201526020016103bb565b50505050905090810190601f1680156104005780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610416610bb0565b604080516001600160a01b039092168252519081900360200190f35b6102ed610bbf565b6102ed610bda565b6102ed610be0565b610496600480360360c081101561046057600080fd5b5080359060208101356001600160a01b039081169160408101358216916060820135169060808101359060a0013560ff16610bfb565b005b6104b5600480360360208110156104ae57600080fd5b5035610ca5565b604080519115158252519081900360200190f35b610416610cba565b6102ed600480360360208110156104e757600080fd5b50356001600160a01b0316610cc9565b6104966004803603602081101561050d57600080fd5b50356001600160a01b0316610cdb565b6102ed610ce7565b6102ed6004803603602081101561053b57600080fd5b5035610ced565b6102ed6004803603608081101561055857600080fd5b508035906001600160a01b036020820135169060408101359060600135610cff565b6102ed610f15565b6102ed610f24565b610416610f3f565b61033d610f4e565b610416610f53565b6102ed600480360360608110156105b857600080fd5b508035906001600160a01b0360208201358116916040013516610f62565b610399611121565b610416611147565b610399611156565b6104b56004803603602081101561060457600080fd5b5035611173565b6102ed6004803603604081101561062157600080fd5b5080359060200135611188565b6102ed6004803603608081101561064457600080fd5b506001600160a01b038135811691602081013582169160408201359160600135166111d7565b6102ed6004803603602081101561068057600080fd5b50356001600160a01b0316611243565b610416611255565b6102ed600480360360a08110156106ae57600080fd5b50803590602081013590604081013590606081013590608001356001600160a01b0316611264565b6102ed600480360360608110156106ec57600080fd5b506001600160a01b038135169060208101359060400135611276565b6102ed611449565b610416611464565b6102ed611473565b6102ed611479565b6102ed611494565b61033d6114af565b6000805a90508961077a5760405162461bcd60e51b8152600401808060200182810382526029815260200180612e616029913960400191505060405180910390fd5b6001600160a01b0389166107bf5760405162461bcd60e51b8152600401808060200182810382526022815260200180612e8a6022913960400191505060405180910390fd5b6001600160a01b0386166108045760405162461bcd60e51b8152600401808060200182810382526021815260200180612fbf6021913960400191505060405180910390fd5b336000908152600e602052604090205461082581600163ffffffff6114b416565b336000908152600e6020526040902055600f5460125461089891610857916001600160a01b0391821691168e8e6111d7565b828b8b8b8b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506114cf92505050565b925060006108ad5a849063ffffffff6115aa16565b905060006108bc828c8c6115bf565b905060006108d08e8363ffffffff6115aa16565b600f546040805163a9059cbb60e01b81523360048201526024810186905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b505050506040513d602081101561095157600080fd5b50516109a4576040805162461bcd60e51b815260206004820152601d60248201527f526577617264207472616e73666572206d75737420737563636565642e000000604482015290519081900360640190fd5b600f60009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb8e836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050506040513d6020811015610a4357600080fd5b5051610a805760405162461bcd60e51b815260040180806020018281038252602f815260200180612f50602f913960400191505060405180910390fd5b505050505098975050505050505050565b60006040518080612f0c60449139604080519182900360440182206020808401919091526001600160a01b03978816838301526060830196909652959093166080808501919091528551808503909101815260a0909301909452508051910120919050565b600d54600160a01b900460ff1681565b6000610b1886868686866002546115fa565b9695505050505050565b6009805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610ba85780601f10610b7d57610100808354040283529160200191610ba8565b820191906000526020600020905b815481529060010190602001808311610b8b57829003601f168201915b505050505081565b6007546001600160a01b031681565b604051806036612ddf82396036019050604051809103902081565b60105481565b604051806060612eac82396060019050604051809103902081565b610c04856116ad565b610c0f84600061175c565b6000856001600160a01b0316637feb51d9886040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610c5757600080fd5b505af1158015610c6b573d6000803e3d6000fd5b505050506040513d6020811015610c8157600080fd5b50519050610c8f87856117dc565b610c9c8785848487611909565b50505050505050565b60016020526000908152604090205460ff1681565b600f546001600160a01b031681565b600e6020526000908152604090205481565b610ce4816116ad565b50565b600c5481565b600a6020526000908152604090205481565b600084610d3d5760405162461bcd60e51b8152600401808060200182810382526027815260200180612e156027913960400191505060405180910390fd5b6001600160a01b038416610d825760405162461bcd60e51b8152600401808060200182810382526022815260200180612e8a6022913960400191505060405180910390fd5b610d92838363ffffffff611a9116565b8511610dcf5760405162461bcd60e51b8152600401808060200182810382526031815260200180612d266031913960400191505060405180910390fd5b600f54600090610de9906001600160a01b03168787610a91565b33600090815260046020526040902054909150610e0d81600163ffffffff6114b416565b33600081815260046020526040902091909155610e31908390839088908890611ab8565b600f54604080516323b872dd60e01b8152336004820152306024820152604481018b905290519295506001600160a01b03909116916323b872dd916064808201926020929091908290030181600087803b158015610e8e57600080fd5b505af1158015610ea2573d6000803e3d6000fd5b505050506040513d6020811015610eb857600080fd5b5051610f0b576040805162461bcd60e51b815260206004820152601f60248201527f4d4f5354207472616e7366657246726f6d206d75737420737563636565642e00604482015290519081900360640190fd5b5050949350505050565b6000610f1f611b40565b905090565b60405180602f612d578239602f019050604051809103902081565b6011546001600160a01b031681565b600481565b6003546001600160a01b031681565b6000806040518080612ddf60369139604080519182900360360182206020808401919091526001600160a01b0380891684840152871660608085019190915282518085039091018152608090930191829052825192019190912092509050806059612d868239605901905060405180910390206040518060400160405280600a8152602001694d6f736169632d42757360b01b815250604051806040016040528060018152602001600360fc1b8152508784604051602001808681526020018060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b8381101561106a578181015183820152602001611052565b50505050905090810190601f1680156110975780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156110ca5781810151838201526020016110b2565b50505050905090810190601f1680156110f75780820380516001836020036101000a031916815260200191505b50975050505050505050604051602081830303815290604052805190602001209150509392505050565b6040518060400160405280600a8152602001694d6f736169632d42757360b01b81525081565b6012546001600160a01b031681565b604051806040016040528060018152602001600360fc1b81525081565b600b6020526000908152604090205460ff1681565b60006040518080612d57602f91396040805191829003602f0182206020808401919091528282019690965260608083019590955280518083039095018552608090910190525050805191012090565b60006040518080613028605a91396040805191829003605a0182206020808401919091526001600160a01b0398891683830152968816606083015260808201959095529590921660a0808701919091528351808703909101815260c09095019092525050815191012090565b60046020526000908152604090205481565b6008546001600160a01b031681565b6000610b188686868686600c546115fa565b6011546000906001600160a01b031633146112c25760405162461bcd60e51b81526004018080602001828103825260338152602001806130826033913960400191505060405180910390fd5b6001600160a01b038416611312576040805162461bcd60e51b815260206004820152601260248201527121b7b9329030b2323932b9b99034b990181760711b604482015290519081900360640190fd5b600080856001600160a01b031663823a89716040518163ffffffff1660e01b81526004016040805180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b505050506040513d604081101561137957600080fd5b508051602090910151601054919350915061139b90600163ffffffff6114b416565b8114806113a9575060105481145b6113e45760405162461bcd60e51b8152600401808060200182810382526040815260200180612f7f6040913960400191505060405180910390fd5b601081905560006113f58284611188565b3360009081526004602052604090205490915061141981600163ffffffff6114b416565b3360008181526004602052604090209190915561143d90839083908a908a90611ab8565b98975050505050505050565b604051806044612f0c82396044019050604051809103902081565b600d546001600160a01b031681565b60025481565b60405180605a6130288239605a019050604051809103902081565b604051806059612d8682396059019050604051809103902081565b600181565b6000828201838110156114c657600080fd5b90505b92915050565b60006114e18888888888600c546115fa565b6000818152600b602052604090205490915060ff16156115325760405162461bcd60e51b81526004018080602001828103825260248152602001806130f76024913960400191505060405180910390fd5b6000818152600b60205260409020805460ff19166001179055600d5460609061156590600160a01b900460ff1683611b61565b60408051600160f81b602080830191909152825180830360010181526021909201909252805191012090915061159e9082908686611c34565b50979650505050505050565b6000828211156115b957600080fd5b50900390565b6000818411156115e0576115d9838363ffffffff611a9116565b90506115f3565b6115f0838563ffffffff611a9116565b90505b9392505050565b6000806040518080612eac606091396040805191829003606090810183206020808501919091528383019c909c52820199909952608081019790975250505060a08401929092526001600160a01b031660c0808401919091528351808403909101815260e083018452805190850120601960f81b610100840152604d60f81b6101018401526101028301919091526101228083019190915282518083039091018152610142909101909152805191012090565b6011546001600160a01b0316156116f55760405162461bcd60e51b8152600401808060200182810382526025815260200180612e3c6025913960400191505060405180910390fd5b6001600160a01b03811661173a5760405162461bcd60e51b8152600401808060200182810382526023815260200180612fe06023913960400191505060405180910390fd5b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382166117b7576040805162461bcd60e51b815260206004820152601b60248201527f6d6f73742061646472657373206d757374206e6f7420626520302e0000000000604482015290519081900360640190fd5b601055600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60025415611831576040805162461bcd60e51b815260206004820181905260248201527f4d657373616765206f7574626f7820697320616c72656164792073657475702e604482015290519081900360640190fd5b81611878576040805162461bcd60e51b815260206004820152601260248201527126b2ba30b1b430b4b71034b21034b990181760711b604482015290519081900360640190fd5b6001600160a01b0381166118d3576040805162461bcd60e51b815260206004820152601b60248201527f4d65737361676520696e626f78206164647265737320697320302e0000000000604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b038381169190911791829055611902918491309116610f62565b6002555050565b600c541561195e576040805162461bcd60e51b815260206004820152601f60248201527f4d65737361676520696e626f7820697320616c72656164792073657475702e00604482015290519081900360640190fd5b846119a5576040805162461bcd60e51b815260206004820152601260248201527136b2ba30b1b430b4b71034b21034b990181760711b604482015290519081900360640190fd5b6001600160a01b0384166119f7576040805162461bcd60e51b815260206004820152601460248201527327baba3137bc1030b2323932b9b99034b990181760611b604482015290519081900360640190fd5b6001600160a01b038216611a3c5760405162461bcd60e51b81526004018080602001828103825260218152602001806130d66021913960400191505060405180910390fd5b600d80546001600160a01b0319166001600160a01b038681169190911760ff60a01b1916600160a01b60ff8716021791829055611a7c9187911630610f62565b600c55611a8a848383611d2f565b5050505050565b600082611aa0575060006114c9565b82820282848281611aad57fe5b04146114c657600080fd5b6000611aca86868686866002546115fa565b60008181526001602052604090205490915060ff1615611b1b5760405162461bcd60e51b81526004018080602001828103825260258152602001806130036025913960400191505060405180910390fd5b6000818152600160208190526040909120805460ff1916909117905595945050505050565b6000600560065481548110611b5157fe5b9060005260206000200154905090565b606080611b78611b7360ff8616611eba565b611ee4565b90506060611b88611b7385611eba565b90506060611b968284611f1f565b9050610b18816040516020018082805190602001908083835b60208310611bce5780518252601f199092019160209182019101611baf565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206040516020018082815260200191505060405160208183030381529060405280519060200120611eba565b8051611c87576040805162461bcd60e51b815260206004820181905260248201527f4c656e677468206f6620524c5020706172656e74206e6f64657320697320302e604482015290519081900360640190fd5b6000828152600a602052604090205480611ce8576040805162461bcd60e51b815260206004820152601d60248201527f53746f7261676520726f6f74206d757374206e6f74206265207a65726f000000604482015290519081900360640190fd5b611cf484868484611f97565b611a8a5760405162461bcd60e51b81526004018080602001828103825260218152602001806130b56021913960400191505060405180910390fd5b6008546001600160a01b031615611d86576040805162461bcd60e51b815260206004820152601660248201527529b2ba3ab81034b99030b63932b0b23c903237b7329760511b604482015290519081900360640190fd5b6001600160a01b038316611de1576040805162461bcd60e51b815260206004820152601d60248201527f53746f72616765206163636f756e74206164647265737320697320302e000000604482015290519081900360640190fd5b6001600160a01b038216611e265760405162461bcd60e51b81526004018080602001828103825260218152602001806130d66021913960400191505060405180910390fd5b611e2f81612316565b600780546001600160a01b038086166001600160a01b0319928316179092556008805492851692909116919091179055604080516bffffffffffffffffffffffff19606086901b166020808301919091528251808303601401815260349092019092528051910120611ea090611eba565b8051611eb491600991602090910190612c27565b50505050565b60408051602080825281830190925260609160208201818038833950505060208101929092525090565b60608082516020036040519080825280601f01601f191660200182016040528015611f16576020820181803883390190505b5090506115f381845b60606040519050825180825260208201818101602086015b81831015611f4f578051835260209283019201611f37565b50845184518101855292509050808201602085015b81831015611f7c578051835260209283019201611f64565b50601f19601f87518501158301011660405250505092915050565b6000611fa1612ca5565b611faa846123a4565b90506060611fb7826123ed565b905060608085600082611fc98b61249f565b9050805160001415611fe557600097505050505050505061230e565b60005b865181101561230557815183111561200b5760009850505050505050505061230e565b61202787828151811061201a57fe5b602002602001015161251a565b9550856040516020018082805190602001908083835b6020831061205c5780518252601f19909201916020918201910161203d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012084146120ae5760009850505050505050505061230e565b6120ca8782815181106120bd57fe5b60200260200101516123ed565b94508451601114156121e5578151831415612185578c6120f08660108151811061201a57fe5b6040516020018082805190602001908083835b602083106121225780518252601f199092019160209182019101612103565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156121745760019850505050505050505061230e565b60009850505050505050505061230e565b600082848151811061219357fe5b016020015160f81c905060108111156121b8576000995050505050505050505061230e565b6121d7868260ff16815181106121ca57fe5b602002602001015161256a565b9450600184019350506122fd565b8451600214156121745760006122186122118760008151811061220457fe5b6020026020010151612575565b84866125da565b9050825181850114156122cd578d6122368760018151811061220457fe5b6040516020018082805190602001908083835b602083106122685780518252601f199092019160209182019101612249565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156122bb576001995050505050505050505061230e565b6000995050505050505050505061230e565b806122e4576000995050505050505050505061230e565b80840193506122f9866001815181106121ca57fe5b9450505b600101611fe8565b50505050505050505b949350505050565b600081116123555760405162461bcd60e51b815260040180806020018281038252604d815260200180613142604d913960600191505060405180910390fd5b600554156123945760405162461bcd60e51b815260040180806020018281038252602781526020018061311b6027913960400191505060405180910390fd5b806123a0600582612cbf565b5050565b6123ac612ca5565b8151806123ce57505060408051808201909152600080825260208201526123e8565b604080518082019091526020848101825281019190915290505b919050565b60606123f88261276b565b61240157600080fd5b600061240c83612792565b90508060405190808252806020026020018201604052801561244857816020015b612435612ca5565b81526020019060019003908161242d5790505b509150612453612ce8565b61245c846127ec565b905060005b61246a82612823565b156124975761247882612842565b84828151811061248457fe5b6020908102919091010152600101612461565b505050919050565b606081516002026040519080825280601f01601f1916602001820160405280156124d0576020820181803883390190505b50905060005b8151811015612514576124e98184612886565b8282815181106124f557fe5b60200101906001600160f81b031916908160001a9053506001016124d6565b50919050565b60208101516060908061252d57506123e8565b806040519080825280601f01601f191660200182016040528015612558576020820181803883390190505b509150612514836000015183836128e3565b60006114c98261290a565b60606125808261295a565b61258957600080fd5b60008061259584612980565b60408051828152601f19601f840116810160200190915291935091508180156125c5576020820181803883390190505b5092506125d38284836128e3565b5050919050565b600060606125e7856129f0565b9050606081516040519080825280601f01601f191660200182016040528015612617576020820181803883390190505b509050835b8251850181101561267157600086828151811061263557fe5b602001015160f81c60f81b905080838784038151811061265157fe5b60200101906001600160f81b031916908160001a9053505060010161261c565b50806040516020018082805190602001908083835b602083106126a55780518252601f199092019160209182019101612686565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120826040516020018082805190602001908083835b602083106127135780518252601f1990920191602091820191016126f4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561275d5781519250612762565b600092505b50509392505050565b6000816020015160001415612782575060006123e8565b50515160c060009190911a101590565b600061279d8261276b565b6127a9575060006123e8565b81518051600090811a91906127bd85612b1c565b6020860151908301915082016000190160005b818311610b18576127e083612b9a565b909201916001016127d0565b6127f4612ce8565b6127fd8261276b565b61280657600080fd5b600061281183612b1c565b83519383529092016020820152919050565b600061282d612ca5565b50508051602080820151915192015191011190565b61284a612ca5565b61285382612823565b61285c57600080fd5b6020820151600061286c82612b9a565b828452602080850182905292019390910192909252919050565b600060028306156128b75760108260028504815181106128a257fe5b016020015160f81c816128b157fe5b066128d9565b60108260028504815181106128c857fe5b016020015160f81c816128d757fe5b045b60f81b9392505050565b6000601f820184602085015b82841015610c9c5783820151848201526020840193506128ef565b60006129158261295a565b61291e57600080fd5b60008061292a84612980565b9092509050602081118061293c575080155b1561294657600080fd5b806020036101000a82510492505050919050565b6000816020015160001415612971575060006123e8565b50515160c060009190911a1090565b60008061298c8361295a565b61299557600080fd5b8251805160001a9060808210156129b3579250600191506129eb9050565b60b88210156129d157600185602001510392508060010193506129e8565b602085015182820160b51901945082900360b60192505b50505b915091565b8051606090156123e857600080612a08600085612886565b60f81c90506001811480612a1f57508060ff166003145b15612a975760018451600202036040519080825280601f01601f191660200182016040528015612a56576020820181803883390190505b5092506000612a66600186612886565b90508084600081518110612a7657fe5b60200101906001600160f81b031916908160001a9053506001925050612ad1565b60028451600202036040519080825280601f01601f191660200182016040528015612ac9576020820181803883390190505b509250600091505b60ff82165b835181101561249757612af18360ff16820360020186612886565b848281518110612afd57fe5b60200101906001600160f81b031916908160001a905350600101612ad6565b6000816020015160001415612b33575060006123e8565b8151805160001a906080821015612b4f576000925050506123e8565b60b8821080612b6a575060c08210158015612b6a575060f882105b15612b7a576001925050506123e8565b60c0821015612b8f575060b5190190506123e8565b5060f5190192915050565b8051600090811a6080811015612bb35760019150612514565b60b8811015612bc857607e1981019150612514565b60c0811015612bf157600183015160b76020839003016101000a9004810160b519019150612514565b60f8811015612c065760be1981019150612514565b6001929092015160f76020849003016101000a900490910160f51901919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c6857805160ff1916838001178555612c95565b82800160010185558215612c95579182015b82811115612c95578251825591602001919060010190612c7a565b50612ca1929150612d08565b5090565b604051806040016040528060008152602001600081525090565b815481835581811115612ce357600083815260209020612ce3918101908301612d08565b505050565b6040518060400160405280612cfb612ca5565b8152602001600081525090565b612d2291905b80821115612ca15760008155600101612d0e565b9056fe4465706f73697420616d6f756e742073686f756c642062652067726561746572207468616e206d6178207265776172642e4b65726e656c496e74656e742875696e74323536206865696768742c62797465733332206b65726e656c48617368294d6f736169634d65737361676542757328737472696e67206e616d652c737472696e672076657273696f6e2c62797465733332206d657461636861696e49642c62797465733332206368616e6e656c536570617261746f72294d6f736169634d6573736167654275734368616e6e656c2861646472657373206f7574626f782c206164647265737320696e626f78294465706f73697420616d6f756e742073686f756c642062652067726561746572207468616e2030436f6e73656e737573206164647265737320697320616c72656164792070726573656e742e576974686472617720616d6f756e742073686f756c642062652067726561746572207468616e20302e42656e65666963696172792061646472657373206d757374206e6f7420626520302e4d657373616765286279746573333220696e74656e74486173682c75696e74323536206e6f6e63652c75696e743235362066656547617350726963652c75696e74323536206665654761734c696d69742c616464726573732073656e646572294465706f736974496e74656e7428616464726573732076616c7565546f6b656e2c75696e7432353620616d6f756e742c616464726573732062656e656669636961727929546f6b656e207472616e7366657220746f207468652062656e6566696369617279206d75737420737563636565642e4b65726e656c2063616e206265206f70656e65642061742073616d6520686569676874206f722063757272656e744d657461626c6f636b4865696768742b312e576974686472617765722061646472657373206d757374206e6f7420626520302e436f6e73656e7375732061646472657373206d757374206e6f74206265206e756c6c2e4d65737361676520616c72656164792065786973747320696e20746865206f7574626f782e5769746864726177496e74656e7428616464726573732076616c7565546f6b656e2c61646472657373207574696c697479546f6b656e2c75696e7432353620616d6f756e742c616464726573732062656e6566696369617279294f6e6c792074686520636f6e73656e73757320636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e4d65726b6c652070726f6f6620766572696669636174696f6e206661696c65642e537461746520726f6f742070726f7669646572206164647265737320697320302e4d65737361676520616c72656164792065786973747320696e2074686520696e626f782e43697263756c6172206275666665722073697a652063616e206265207365747570206f6e63652e546865206d6178206e756d626572206f66206974656d7320746f2073746f726520696e20612063697263756c617220627566666572206d7573742062652067726561746572207468616e20302ea265627a7a7231582047b3e8a6d9ec19147d623308897651c50afc315dae6c2b78434132f6cb18a4e564736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102485760003560e01c8063928a735a1161013b578063d31b5968116100b8578063efefe0eb1161007c578063efefe0eb14610710578063f02a0e9014610718578063f0df1e7314610720578063f732ecff14610728578063fe08d8181461073057610248565b8063d31b59681461066a578063d4d1118514610690578063ddd335eb14610698578063e5acd280146106d6578063efa9c7c91461070857610248565b8063b1c91e21116100ff578063b1c91e21146105e6578063b4907ddc146105e6578063bd362374146105ee578063befce88e1461060b578063c9a29f3c1461062e57610248565b8063928a735a14610592578063965ef01b1461059a5780639f0b7dfe146105a2578063ae640285146105d6578063ae86ed89146105de57610248565b8063523ce242116101c9578063610ebfe21161018d578063610ebfe2146105255780636f0372af146105425780637ddcca171461057a57806385248b8a146105825780638ef3f7611461058a57610248565b8063523ce2421461049857806358d7889c146104c95780635c1dc83a146104d15780635da7560c146104f75780635ecec5641461051d57610248565b806320e1855f1161021057806320e1855f1461040e5780632fe05ad9146104325780633b7f2f191461043a57806346e356b114610442578063506fba061461044a57610248565b806302369ae01461024d57806302de1ba9146102ff57806309bf5f38146103355780630e31eb601461035357806316ad76b814610391575b600080fd5b6102ed600480360360e081101561026357600080fd5b8135916001600160a01b0360208201358116926040830135926060810135926080820135169160a0820135919081019060e0810160c08201356401000000008111156102ae57600080fd5b8201836020820111156102c057600080fd5b803590602001918460018302840111640100000000831117156102e257600080fd5b509092509050610738565b60408051918252519081900360200190f35b6102ed6004803603606081101561031557600080fd5b506001600160a01b03813581169160208101359160409091013516610a91565b61033d610af6565b6040805160ff9092168252519081900360200190f35b6102ed600480360360a081101561036957600080fd5b50803590602081013590604081013590606081013590608001356001600160a01b0316610b06565b610399610b22565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103d35781810151838201526020016103bb565b50505050905090810190601f1680156104005780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610416610bb0565b604080516001600160a01b039092168252519081900360200190f35b6102ed610bbf565b6102ed610bda565b6102ed610be0565b610496600480360360c081101561046057600080fd5b5080359060208101356001600160a01b039081169160408101358216916060820135169060808101359060a0013560ff16610bfb565b005b6104b5600480360360208110156104ae57600080fd5b5035610ca5565b604080519115158252519081900360200190f35b610416610cba565b6102ed600480360360208110156104e757600080fd5b50356001600160a01b0316610cc9565b6104966004803603602081101561050d57600080fd5b50356001600160a01b0316610cdb565b6102ed610ce7565b6102ed6004803603602081101561053b57600080fd5b5035610ced565b6102ed6004803603608081101561055857600080fd5b508035906001600160a01b036020820135169060408101359060600135610cff565b6102ed610f15565b6102ed610f24565b610416610f3f565b61033d610f4e565b610416610f53565b6102ed600480360360608110156105b857600080fd5b508035906001600160a01b0360208201358116916040013516610f62565b610399611121565b610416611147565b610399611156565b6104b56004803603602081101561060457600080fd5b5035611173565b6102ed6004803603604081101561062157600080fd5b5080359060200135611188565b6102ed6004803603608081101561064457600080fd5b506001600160a01b038135811691602081013582169160408201359160600135166111d7565b6102ed6004803603602081101561068057600080fd5b50356001600160a01b0316611243565b610416611255565b6102ed600480360360a08110156106ae57600080fd5b50803590602081013590604081013590606081013590608001356001600160a01b0316611264565b6102ed600480360360608110156106ec57600080fd5b506001600160a01b038135169060208101359060400135611276565b6102ed611449565b610416611464565b6102ed611473565b6102ed611479565b6102ed611494565b61033d6114af565b6000805a90508961077a5760405162461bcd60e51b8152600401808060200182810382526029815260200180612e616029913960400191505060405180910390fd5b6001600160a01b0389166107bf5760405162461bcd60e51b8152600401808060200182810382526022815260200180612e8a6022913960400191505060405180910390fd5b6001600160a01b0386166108045760405162461bcd60e51b8152600401808060200182810382526021815260200180612fbf6021913960400191505060405180910390fd5b336000908152600e602052604090205461082581600163ffffffff6114b416565b336000908152600e6020526040902055600f5460125461089891610857916001600160a01b0391821691168e8e6111d7565b828b8b8b8b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506114cf92505050565b925060006108ad5a849063ffffffff6115aa16565b905060006108bc828c8c6115bf565b905060006108d08e8363ffffffff6115aa16565b600f546040805163a9059cbb60e01b81523360048201526024810186905290519293506001600160a01b039091169163a9059cbb916044808201926020929091908290030181600087803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b505050506040513d602081101561095157600080fd5b50516109a4576040805162461bcd60e51b815260206004820152601d60248201527f526577617264207472616e73666572206d75737420737563636565642e000000604482015290519081900360640190fd5b600f60009054906101000a90046001600160a01b03166001600160a01b031663a9059cbb8e836040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610a1957600080fd5b505af1158015610a2d573d6000803e3d6000fd5b505050506040513d6020811015610a4357600080fd5b5051610a805760405162461bcd60e51b815260040180806020018281038252602f815260200180612f50602f913960400191505060405180910390fd5b505050505098975050505050505050565b60006040518080612f0c60449139604080519182900360440182206020808401919091526001600160a01b03978816838301526060830196909652959093166080808501919091528551808503909101815260a0909301909452508051910120919050565b600d54600160a01b900460ff1681565b6000610b1886868686866002546115fa565b9695505050505050565b6009805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610ba85780601f10610b7d57610100808354040283529160200191610ba8565b820191906000526020600020905b815481529060010190602001808311610b8b57829003601f168201915b505050505081565b6007546001600160a01b031681565b604051806036612ddf82396036019050604051809103902081565b60105481565b604051806060612eac82396060019050604051809103902081565b610c04856116ad565b610c0f84600061175c565b6000856001600160a01b0316637feb51d9886040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610c5757600080fd5b505af1158015610c6b573d6000803e3d6000fd5b505050506040513d6020811015610c8157600080fd5b50519050610c8f87856117dc565b610c9c8785848487611909565b50505050505050565b60016020526000908152604090205460ff1681565b600f546001600160a01b031681565b600e6020526000908152604090205481565b610ce4816116ad565b50565b600c5481565b600a6020526000908152604090205481565b600084610d3d5760405162461bcd60e51b8152600401808060200182810382526027815260200180612e156027913960400191505060405180910390fd5b6001600160a01b038416610d825760405162461bcd60e51b8152600401808060200182810382526022815260200180612e8a6022913960400191505060405180910390fd5b610d92838363ffffffff611a9116565b8511610dcf5760405162461bcd60e51b8152600401808060200182810382526031815260200180612d266031913960400191505060405180910390fd5b600f54600090610de9906001600160a01b03168787610a91565b33600090815260046020526040902054909150610e0d81600163ffffffff6114b416565b33600081815260046020526040902091909155610e31908390839088908890611ab8565b600f54604080516323b872dd60e01b8152336004820152306024820152604481018b905290519295506001600160a01b03909116916323b872dd916064808201926020929091908290030181600087803b158015610e8e57600080fd5b505af1158015610ea2573d6000803e3d6000fd5b505050506040513d6020811015610eb857600080fd5b5051610f0b576040805162461bcd60e51b815260206004820152601f60248201527f4d4f5354207472616e7366657246726f6d206d75737420737563636565642e00604482015290519081900360640190fd5b5050949350505050565b6000610f1f611b40565b905090565b60405180602f612d578239602f019050604051809103902081565b6011546001600160a01b031681565b600481565b6003546001600160a01b031681565b6000806040518080612ddf60369139604080519182900360360182206020808401919091526001600160a01b0380891684840152871660608085019190915282518085039091018152608090930191829052825192019190912092509050806059612d868239605901905060405180910390206040518060400160405280600a8152602001694d6f736169632d42757360b01b815250604051806040016040528060018152602001600360fc1b8152508784604051602001808681526020018060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b8381101561106a578181015183820152602001611052565b50505050905090810190601f1680156110975780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156110ca5781810151838201526020016110b2565b50505050905090810190601f1680156110f75780820380516001836020036101000a031916815260200191505b50975050505050505050604051602081830303815290604052805190602001209150509392505050565b6040518060400160405280600a8152602001694d6f736169632d42757360b01b81525081565b6012546001600160a01b031681565b604051806040016040528060018152602001600360fc1b81525081565b600b6020526000908152604090205460ff1681565b60006040518080612d57602f91396040805191829003602f0182206020808401919091528282019690965260608083019590955280518083039095018552608090910190525050805191012090565b60006040518080613028605a91396040805191829003605a0182206020808401919091526001600160a01b0398891683830152968816606083015260808201959095529590921660a0808701919091528351808703909101815260c09095019092525050815191012090565b60046020526000908152604090205481565b6008546001600160a01b031681565b6000610b188686868686600c546115fa565b6011546000906001600160a01b031633146112c25760405162461bcd60e51b81526004018080602001828103825260338152602001806130826033913960400191505060405180910390fd5b6001600160a01b038416611312576040805162461bcd60e51b815260206004820152601260248201527121b7b9329030b2323932b9b99034b990181760711b604482015290519081900360640190fd5b600080856001600160a01b031663823a89716040518163ffffffff1660e01b81526004016040805180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b505050506040513d604081101561137957600080fd5b508051602090910151601054919350915061139b90600163ffffffff6114b416565b8114806113a9575060105481145b6113e45760405162461bcd60e51b8152600401808060200182810382526040815260200180612f7f6040913960400191505060405180910390fd5b601081905560006113f58284611188565b3360009081526004602052604090205490915061141981600163ffffffff6114b416565b3360008181526004602052604090209190915561143d90839083908a908a90611ab8565b98975050505050505050565b604051806044612f0c82396044019050604051809103902081565b600d546001600160a01b031681565b60025481565b60405180605a6130288239605a019050604051809103902081565b604051806059612d8682396059019050604051809103902081565b600181565b6000828201838110156114c657600080fd5b90505b92915050565b60006114e18888888888600c546115fa565b6000818152600b602052604090205490915060ff16156115325760405162461bcd60e51b81526004018080602001828103825260248152602001806130f76024913960400191505060405180910390fd5b6000818152600b60205260409020805460ff19166001179055600d5460609061156590600160a01b900460ff1683611b61565b60408051600160f81b602080830191909152825180830360010181526021909201909252805191012090915061159e9082908686611c34565b50979650505050505050565b6000828211156115b957600080fd5b50900390565b6000818411156115e0576115d9838363ffffffff611a9116565b90506115f3565b6115f0838563ffffffff611a9116565b90505b9392505050565b6000806040518080612eac606091396040805191829003606090810183206020808501919091528383019c909c52820199909952608081019790975250505060a08401929092526001600160a01b031660c0808401919091528351808403909101815260e083018452805190850120601960f81b610100840152604d60f81b6101018401526101028301919091526101228083019190915282518083039091018152610142909101909152805191012090565b6011546001600160a01b0316156116f55760405162461bcd60e51b8152600401808060200182810382526025815260200180612e3c6025913960400191505060405180910390fd5b6001600160a01b03811661173a5760405162461bcd60e51b8152600401808060200182810382526023815260200180612fe06023913960400191505060405180910390fd5b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382166117b7576040805162461bcd60e51b815260206004820152601b60248201527f6d6f73742061646472657373206d757374206e6f7420626520302e0000000000604482015290519081900360640190fd5b601055600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60025415611831576040805162461bcd60e51b815260206004820181905260248201527f4d657373616765206f7574626f7820697320616c72656164792073657475702e604482015290519081900360640190fd5b81611878576040805162461bcd60e51b815260206004820152601260248201527126b2ba30b1b430b4b71034b21034b990181760711b604482015290519081900360640190fd5b6001600160a01b0381166118d3576040805162461bcd60e51b815260206004820152601b60248201527f4d65737361676520696e626f78206164647265737320697320302e0000000000604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b038381169190911791829055611902918491309116610f62565b6002555050565b600c541561195e576040805162461bcd60e51b815260206004820152601f60248201527f4d65737361676520696e626f7820697320616c72656164792073657475702e00604482015290519081900360640190fd5b846119a5576040805162461bcd60e51b815260206004820152601260248201527136b2ba30b1b430b4b71034b21034b990181760711b604482015290519081900360640190fd5b6001600160a01b0384166119f7576040805162461bcd60e51b815260206004820152601460248201527327baba3137bc1030b2323932b9b99034b990181760611b604482015290519081900360640190fd5b6001600160a01b038216611a3c5760405162461bcd60e51b81526004018080602001828103825260218152602001806130d66021913960400191505060405180910390fd5b600d80546001600160a01b0319166001600160a01b038681169190911760ff60a01b1916600160a01b60ff8716021791829055611a7c9187911630610f62565b600c55611a8a848383611d2f565b5050505050565b600082611aa0575060006114c9565b82820282848281611aad57fe5b04146114c657600080fd5b6000611aca86868686866002546115fa565b60008181526001602052604090205490915060ff1615611b1b5760405162461bcd60e51b81526004018080602001828103825260258152602001806130036025913960400191505060405180910390fd5b6000818152600160208190526040909120805460ff1916909117905595945050505050565b6000600560065481548110611b5157fe5b9060005260206000200154905090565b606080611b78611b7360ff8616611eba565b611ee4565b90506060611b88611b7385611eba565b90506060611b968284611f1f565b9050610b18816040516020018082805190602001908083835b60208310611bce5780518252601f199092019160209182019101611baf565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206040516020018082815260200191505060405160208183030381529060405280519060200120611eba565b8051611c87576040805162461bcd60e51b815260206004820181905260248201527f4c656e677468206f6620524c5020706172656e74206e6f64657320697320302e604482015290519081900360640190fd5b6000828152600a602052604090205480611ce8576040805162461bcd60e51b815260206004820152601d60248201527f53746f7261676520726f6f74206d757374206e6f74206265207a65726f000000604482015290519081900360640190fd5b611cf484868484611f97565b611a8a5760405162461bcd60e51b81526004018080602001828103825260218152602001806130b56021913960400191505060405180910390fd5b6008546001600160a01b031615611d86576040805162461bcd60e51b815260206004820152601660248201527529b2ba3ab81034b99030b63932b0b23c903237b7329760511b604482015290519081900360640190fd5b6001600160a01b038316611de1576040805162461bcd60e51b815260206004820152601d60248201527f53746f72616765206163636f756e74206164647265737320697320302e000000604482015290519081900360640190fd5b6001600160a01b038216611e265760405162461bcd60e51b81526004018080602001828103825260218152602001806130d66021913960400191505060405180910390fd5b611e2f81612316565b600780546001600160a01b038086166001600160a01b0319928316179092556008805492851692909116919091179055604080516bffffffffffffffffffffffff19606086901b166020808301919091528251808303601401815260349092019092528051910120611ea090611eba565b8051611eb491600991602090910190612c27565b50505050565b60408051602080825281830190925260609160208201818038833950505060208101929092525090565b60608082516020036040519080825280601f01601f191660200182016040528015611f16576020820181803883390190505b5090506115f381845b60606040519050825180825260208201818101602086015b81831015611f4f578051835260209283019201611f37565b50845184518101855292509050808201602085015b81831015611f7c578051835260209283019201611f64565b50601f19601f87518501158301011660405250505092915050565b6000611fa1612ca5565b611faa846123a4565b90506060611fb7826123ed565b905060608085600082611fc98b61249f565b9050805160001415611fe557600097505050505050505061230e565b60005b865181101561230557815183111561200b5760009850505050505050505061230e565b61202787828151811061201a57fe5b602002602001015161251a565b9550856040516020018082805190602001908083835b6020831061205c5780518252601f19909201916020918201910161203d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012084146120ae5760009850505050505050505061230e565b6120ca8782815181106120bd57fe5b60200260200101516123ed565b94508451601114156121e5578151831415612185578c6120f08660108151811061201a57fe5b6040516020018082805190602001908083835b602083106121225780518252601f199092019160209182019101612103565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156121745760019850505050505050505061230e565b60009850505050505050505061230e565b600082848151811061219357fe5b016020015160f81c905060108111156121b8576000995050505050505050505061230e565b6121d7868260ff16815181106121ca57fe5b602002602001015161256a565b9450600184019350506122fd565b8451600214156121745760006122186122118760008151811061220457fe5b6020026020010151612575565b84866125da565b9050825181850114156122cd578d6122368760018151811061220457fe5b6040516020018082805190602001908083835b602083106122685780518252601f199092019160209182019101612249565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156122bb576001995050505050505050505061230e565b6000995050505050505050505061230e565b806122e4576000995050505050505050505061230e565b80840193506122f9866001815181106121ca57fe5b9450505b600101611fe8565b50505050505050505b949350505050565b600081116123555760405162461bcd60e51b815260040180806020018281038252604d815260200180613142604d913960600191505060405180910390fd5b600554156123945760405162461bcd60e51b815260040180806020018281038252602781526020018061311b6027913960400191505060405180910390fd5b806123a0600582612cbf565b5050565b6123ac612ca5565b8151806123ce57505060408051808201909152600080825260208201526123e8565b604080518082019091526020848101825281019190915290505b919050565b60606123f88261276b565b61240157600080fd5b600061240c83612792565b90508060405190808252806020026020018201604052801561244857816020015b612435612ca5565b81526020019060019003908161242d5790505b509150612453612ce8565b61245c846127ec565b905060005b61246a82612823565b156124975761247882612842565b84828151811061248457fe5b6020908102919091010152600101612461565b505050919050565b606081516002026040519080825280601f01601f1916602001820160405280156124d0576020820181803883390190505b50905060005b8151811015612514576124e98184612886565b8282815181106124f557fe5b60200101906001600160f81b031916908160001a9053506001016124d6565b50919050565b60208101516060908061252d57506123e8565b806040519080825280601f01601f191660200182016040528015612558576020820181803883390190505b509150612514836000015183836128e3565b60006114c98261290a565b60606125808261295a565b61258957600080fd5b60008061259584612980565b60408051828152601f19601f840116810160200190915291935091508180156125c5576020820181803883390190505b5092506125d38284836128e3565b5050919050565b600060606125e7856129f0565b9050606081516040519080825280601f01601f191660200182016040528015612617576020820181803883390190505b509050835b8251850181101561267157600086828151811061263557fe5b602001015160f81c60f81b905080838784038151811061265157fe5b60200101906001600160f81b031916908160001a9053505060010161261c565b50806040516020018082805190602001908083835b602083106126a55780518252601f199092019160209182019101612686565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120826040516020018082805190602001908083835b602083106127135780518252601f1990920191602091820191016126f4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561275d5781519250612762565b600092505b50509392505050565b6000816020015160001415612782575060006123e8565b50515160c060009190911a101590565b600061279d8261276b565b6127a9575060006123e8565b81518051600090811a91906127bd85612b1c565b6020860151908301915082016000190160005b818311610b18576127e083612b9a565b909201916001016127d0565b6127f4612ce8565b6127fd8261276b565b61280657600080fd5b600061281183612b1c565b83519383529092016020820152919050565b600061282d612ca5565b50508051602080820151915192015191011190565b61284a612ca5565b61285382612823565b61285c57600080fd5b6020820151600061286c82612b9a565b828452602080850182905292019390910192909252919050565b600060028306156128b75760108260028504815181106128a257fe5b016020015160f81c816128b157fe5b066128d9565b60108260028504815181106128c857fe5b016020015160f81c816128d757fe5b045b60f81b9392505050565b6000601f820184602085015b82841015610c9c5783820151848201526020840193506128ef565b60006129158261295a565b61291e57600080fd5b60008061292a84612980565b9092509050602081118061293c575080155b1561294657600080fd5b806020036101000a82510492505050919050565b6000816020015160001415612971575060006123e8565b50515160c060009190911a1090565b60008061298c8361295a565b61299557600080fd5b8251805160001a9060808210156129b3579250600191506129eb9050565b60b88210156129d157600185602001510392508060010193506129e8565b602085015182820160b51901945082900360b60192505b50505b915091565b8051606090156123e857600080612a08600085612886565b60f81c90506001811480612a1f57508060ff166003145b15612a975760018451600202036040519080825280601f01601f191660200182016040528015612a56576020820181803883390190505b5092506000612a66600186612886565b90508084600081518110612a7657fe5b60200101906001600160f81b031916908160001a9053506001925050612ad1565b60028451600202036040519080825280601f01601f191660200182016040528015612ac9576020820181803883390190505b509250600091505b60ff82165b835181101561249757612af18360ff16820360020186612886565b848281518110612afd57fe5b60200101906001600160f81b031916908160001a905350600101612ad6565b6000816020015160001415612b33575060006123e8565b8151805160001a906080821015612b4f576000925050506123e8565b60b8821080612b6a575060c08210158015612b6a575060f882105b15612b7a576001925050506123e8565b60c0821015612b8f575060b5190190506123e8565b5060f5190192915050565b8051600090811a6080811015612bb35760019150612514565b60b8811015612bc857607e1981019150612514565b60c0811015612bf157600183015160b76020839003016101000a9004810160b519019150612514565b60f8811015612c065760be1981019150612514565b6001929092015160f76020849003016101000a900490910160f51901919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612c6857805160ff1916838001178555612c95565b82800160010185558215612c95579182015b82811115612c95578251825591602001919060010190612c7a565b50612ca1929150612d08565b5090565b604051806040016040528060008152602001600081525090565b815481835581811115612ce357600083815260209020612ce3918101908301612d08565b505050565b6040518060400160405280612cfb612ca5565b8152602001600081525090565b612d2291905b80821115612ca15760008155600101612d0e565b9056fe4465706f73697420616d6f756e742073686f756c642062652067726561746572207468616e206d6178207265776172642e4b65726e656c496e74656e742875696e74323536206865696768742c62797465733332206b65726e656c48617368294d6f736169634d65737361676542757328737472696e67206e616d652c737472696e672076657273696f6e2c62797465733332206d657461636861696e49642c62797465733332206368616e6e656c536570617261746f72294d6f736169634d6573736167654275734368616e6e656c2861646472657373206f7574626f782c206164647265737320696e626f78294465706f73697420616d6f756e742073686f756c642062652067726561746572207468616e2030436f6e73656e737573206164647265737320697320616c72656164792070726573656e742e576974686472617720616d6f756e742073686f756c642062652067726561746572207468616e20302e42656e65666963696172792061646472657373206d757374206e6f7420626520302e4d657373616765286279746573333220696e74656e74486173682c75696e74323536206e6f6e63652c75696e743235362066656547617350726963652c75696e74323536206665654761734c696d69742c616464726573732073656e646572294465706f736974496e74656e7428616464726573732076616c7565546f6b656e2c75696e7432353620616d6f756e742c616464726573732062656e656669636961727929546f6b656e207472616e7366657220746f207468652062656e6566696369617279206d75737420737563636565642e4b65726e656c2063616e206265206f70656e65642061742073616d6520686569676874206f722063757272656e744d657461626c6f636b4865696768742b312e576974686472617765722061646472657373206d757374206e6f7420626520302e436f6e73656e7375732061646472657373206d757374206e6f74206265206e756c6c2e4d65737361676520616c72656164792065786973747320696e20746865206f7574626f782e5769746864726177496e74656e7428616464726573732076616c7565546f6b656e2c61646472657373207574696c697479546f6b656e2c75696e7432353620616d6f756e742c616464726573732062656e6566696369617279294f6e6c792074686520636f6e73656e73757320636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e2e4d65726b6c652070726f6f6620766572696669636174696f6e206661696c65642e537461746520726f6f742070726f7669646572206164647265737320697320302e4d65737361676520616c72656164792065786973747320696e2074686520696e626f782e43697263756c6172206275666665722073697a652063616e206265207365747570206f6e63652e546865206d6178206e756d626572206f66206974656d7320746f2073746f726520696e20612063697263756c617220627566666572206d7573742062652067726561746572207468616e20302ea265627a7a7231582047b3e8a6d9ec19147d623308897651c50afc315dae6c2b78434132f6cb18a4e564736f6c634300050d0032",
  "sourceMap": "677:248:76:-;;;1575:40:14;;;-1:-1:-1;;;;;;1575:40:14;;;677:248:76;5:2:-1;;;;30:1;27;20:12;5:2;677:248:76;;;;;;;",
  "deployedSourceMap": "677:248:76:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;677:248:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8325:1752:14;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8325:1752:14;;;-1:-1:-1;;;;;8325:1752:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8325:1752:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8325:1752:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;8325:1752:14;;-1:-1:-1;8325:1752:14;-1:-1:-1;8325:1752:14;:::i;:::-;;;;;;;;;;;;;;;;1577:414:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1577:414:30;;;;;;;;;;;;;;;;;:::i;1250:31:39:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1638:465:40;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1638:465:40;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1638:465:40;;:::i;1150:31:41:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1150:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:29;;;:::i;:::-;;;;-1:-1:-1;;;;;991:29:41;;;;;;;;;;;;;;859:128:37;;;:::i;1060:37:15:-;;;:::i;1488:166:37:-;;;:::i;2298:856:14:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2298:856:14;;;;;;;-1:-1:-1;;;;;2298:856:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;972:38:40;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;972:38:40;;:::i;:::-;;;;;;;;;;;;;;;;;;996:18:15;;;:::i;1336:46:39:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1336:46:39;-1:-1:-1;;;;;1336:46:39;;:::i;734:189:76:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;734:189:76;-1:-1:-1;;;;;734:189:76;;:::i;1103:39:39:-;;;:::i;1232:47:41:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1232:47:41;;:::i;3653:1137:14:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;3653:1137:14;;;-1:-1:-1;;;;;3653:1137:14;;;;;;;;;;;;;;;:::i;10244:181::-;;;:::i;780:123:15:-;;;:::i;756:35:22:-;;;:::i;1470:45:14:-;;;:::i;1136:27:40:-;;;:::i;1899:694:37:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1899:694:37;;;-1:-1:-1;;;;;1899:694:37;;;;;;;;;;;;:::i;1289:63::-;;;:::i;1575:40:14:-;;;:::i;1395:57:37:-;;;:::i;1021:37:39:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1021:37:39;;:::i;1359:349:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1359:349:15;;;;;;;:::i;2325:480:30:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2325:480:30;;;;;;;;;;;;;;;;;;;;;;:::i;1218:47:40:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1218:47:40;-1:-1:-1;;;;;1218:47:40;;:::i;1067:43:41:-;;;:::i;1753:463:39:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1753:463:39;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1753:463:39;;:::i;5643:1132:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5643:1132:14;;;;;;;;;;;;;:::i;948:145:30:-;;;:::i;1183:28:39:-;;;:::i;1056:40:40:-;;;:::i;1100:168:30:-;;;:::i;1054:172:37:-;;;:::i;1374:46:14:-;;;:::i;8325:1752::-;8604:20;8640:18;8661:9;8640:30;-1:-1:-1;8701:12:14;8680:100;;;;-1:-1:-1;;;8680:100:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8811:26:14;;8790:107;;;;-1:-1:-1;;;8790:107:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8928:25:14;;8907:105;;;;-1:-1:-1;;;8907:105:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9064:10;9023:13;9039:36;;;:24;:36;;;;;;9124:12;9039:36;9134:1;9124:12;:9;:12;:::i;:::-;9110:10;9085:36;;;;:24;:36;;;;;:51;9264:4;;9287:12;;9162:367;;9203:165;;-1:-1:-1;;;;;9264:4:14;;;;9287:12;9317:7;9342:12;9203:35;:165::i;:::-;9382:5;9401:12;9427;9453:11;9478:12;9504:15;;9162:367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;9162:27:14;;-1:-1:-1;;;9162:367:14:i;:::-;9147:382;;9540:19;9562:25;9577:9;9562:10;;:25;:14;:25;:::i;:::-;9540:47;;9597:17;9617:110;9654:11;9679:12;9705;9617:23;:110::i;:::-;9597:130;-1:-1:-1;9737:22:14;9762;:7;9597:130;9762:22;:11;:22;:::i;:::-;9823:4;;9816:44;;;-1:-1:-1;;;9816:44:14;;9838:10;9816:44;;;;;;;;;;;;9737:47;;-1:-1:-1;;;;;;9823:4:14;;;;9816:21;;:44;;;;;;;;;;;;;;;9823:4;;9816:44;;;5:2:-1;;;;30:1;27;20:12;5:2;9816:44:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9816:44:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9816:44:14;9795:120;;;;;-1:-1:-1;;;9795:120:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;9953:4;;;;;;;;;-1:-1:-1;;;;;9953:4:14;-1:-1:-1;;;;;9946:21:14;;9968:12;9982:14;9946:51;;;;;;;;;;;;;-1:-1:-1;;;;;9946:51:14;-1:-1:-1;;;;;9946:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9946:51:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9946:51:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9946:51:14;9925:145;;;;-1:-1:-1;;;9925:145:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8325:1752;;;;;;;;;;;;;;;:::o;1577:414:30:-;1739:26;998:95;;;;;;;;;;;;;;;;;;;1825:149;;;;;;;;-1:-1:-1;;;;;1825:149:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1825:149:30;;;;;;;-1:-1:-1;1802:182:30;;;;;;1577:414;-1:-1:-1;1577:414:30:o;1250:31:39:-;;;-1:-1:-1;;;1250:31:39;;;;;:::o;1638:465:40:-;1856:20;1907:189;1943:11;1968:6;1988:12;2014;2040:7;2061:25;;1907:22;:189::i;:::-;1892:204;1638:465;-1:-1:-1;;;;;;1638:465:40:o;1150:31:41:-;;;;;;;;;;;;;;;-1:-1:-1;;1150:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;991:29::-;;;-1:-1:-1;;;;;991:29:41;;:::o;859:128:37:-;906:81;;;;;;;;;;;;;;;;;;859:128;:::o;1060:37:15:-;;;;:::o;1488:166:37:-;1531:123;;;;;;;;;;;;;;;;;;1488:166;:::o;2298:856:14:-;2551:64;2595:10;2551:30;:64::i;:::-;2626:108;2666:5;2693:1;2626:26;:108::i;:::-;2745:25;2773:10;-1:-1:-1;;;;;2773:20:14;;2794:12;2773:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2773:34:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2773:34:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2773:34:14;;-1:-1:-1;2818:101:14;2864:12;2890:19;2818:32;:101::i;:::-;2930:217;2974:12;3000:19;3033;3085:17;3117:20;2930:30;:217::i;:::-;2298:856;;;;;;;:::o;972:38:40:-;;;;;;;;;;;;;;;:::o;996:18:15:-;;;-1:-1:-1;;;;;996:18:15;;:::o;1336:46:39:-;;;;;;;;;;;;;:::o;734:189:76:-;832:84;895:10;832:30;:84::i;:::-;734:189;:::o;1103:39:39:-;;;;:::o;1232:47:41:-;;;;;;;;;;;;;:::o;3653:1137:14:-;3824:20;3881:12;3860:98;;;;-1:-1:-1;;;3860:98:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3989:26:14;;3968:107;;;;-1:-1:-1;;;3968:107:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4116:30;:12;4133;4116:30;:16;:30;:::i;:::-;4106:7;:40;4085:136;;;;-1:-1:-1;;;4085:136:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4286:4;;4232:25;;4260:55;;-1:-1:-1;;;;;4286:4:14;4293:7;4302:12;4260:17;:55::i;:::-;4369:10;4326:13;4342:38;;;:26;:38;;;;;;4232:83;;-1:-1:-1;4431:12:14;4342:38;4441:1;4431:12;:9;:12;:::i;:::-;4417:10;4390:38;;;;:26;:38;;;;;:53;;;;4469:164;;4511:17;;4542:5;;4561:12;;4587;;4469:28;:164::i;:::-;4672:4;;4665:61;;;-1:-1:-1;;;4665:61:14;;4691:10;4665:61;;;;4711:4;4665:61;;;;;;;;;;;;4454:179;;-1:-1:-1;;;;;;4672:4:14;;;;4665:25;;:61;;;;;;;;;;;;;;;4672:4;;4665:61;;;5:2:-1;;;;30:1;27;20:12;5:2;4665:61:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4665:61:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4665:61:14;4644:139;;;;;-1:-1:-1;;;4644:139:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:1137;;;;;;;;:::o;10244:181::-;10342:20;10393:25;:23;:25::i;:::-;10378:40;;10244:181;:::o;780:123:15:-;829:74;;;;;;;;;;;;;;;;;;780:123;:::o;756:35:22:-;;;-1:-1:-1;;;;;756:35:22;;:::o;1470:45:14:-;1513:1;1470:45;:::o;1136:27:40:-;;;-1:-1:-1;;;;;1136:27:40;;:::o;1899:694:37:-;2060:26;2102:24;906:81;;;;;;;;;;;;;;;;;;;2152:111;;;;;;;;-1:-1:-1;;;;;2152:111:37;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2152:111:37;;;;;;;;2129:144;;;;;;;;;-1:-1:-1;2152:111:37;-1:-1:-1;2152:111:37;1110:116;;2152:111;1110:116;;;;;;;;;;;;2411:25;;;;;;;;;;;;;-1:-1:-1;;;2411:25:37;;;2458:28;;;;;;;;;;;;;-1:-1:-1;;;2458:28:37;;;2508:12;2542:16;2328:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2328:248:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2328:248:37;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2328:248:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2328:248:37;;;2305:281;;;;;;2284:302;;1899:694;;;;;;:::o;1289:63::-;;;;;;;;;;;;;;-1:-1:-1;;;1289:63:37;;;;:::o;1575:40:14:-;;;-1:-1:-1;;;;;1575:40:14;;:::o;1395:57:37:-;;;;;;;;;;;;;;-1:-1:-1;;;1395:57:37;;;;:::o;1021:37:39:-;;;;;;;;;;;;;;;:::o;1359:349:15:-;1489:25;829:74;;;;;;;;;;;;;;;;;;;1573:118;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1573:118:15;;;;;;-1:-1:-1;;1550:151:15;;;;;;1359:349::o;2325:480:30:-;2519:27;1151:117;;;;;;;;;;;;;;;;;;;2607:181;;;;;;;;-1:-1:-1;;;;;2607:181:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2607:181:30;;;;;;;-1:-1:-1;;2584:214:30;;;;;;2325:480::o;1218:47:40:-;;;;;;;;;;;;;:::o;1067:43:41:-;;;-1:-1:-1;;;;;1067:43:41;;:::o;1753:463:39:-;1970:20;2021:188;2057:11;2082:6;2102:12;2128;2154:7;2175:24;;2021:22;:188::i;5643:1132:14:-;1367:9:22;;5815:20:14;;-1:-1:-1;;;;;1367:9:22;1345:10;:32;1324:130;;;;-1:-1:-1;;;1324:130:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5872:28:14;;5851:93;;;;;-1:-1:-1;;;5851:93:14;;;;;;;;;;;;-1:-1:-1;;;5851:93:14;;;;;;;;;;;;;;;5956:22;5980:24;6022:5;-1:-1:-1;;;;;6008:34:14;;:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6008:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6008:36:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6008:36:14;;;;;;;6097:22;;6008:36;;-1:-1:-1;6008:36:14;-1:-1:-1;6097:29:14;;6124:1;6097:29;:26;:29;:::i;:::-;6077:16;:49;6076:111;;;;6164:22;;6144:16;:42;6076:111;6055:222;;;;-1:-1:-1;;;6055:222:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6288:22;:41;;;6340:24;6367:84;6313:16;6427:14;6367:16;:84::i;:::-;6505:10;6462:13;6478:38;;;:26;:38;;;;;;6340:111;;-1:-1:-1;6567:12:14;6478:38;6577:1;6567:12;:9;:12;:::i;:::-;6553:10;6526:38;;;;:26;:38;;;;;:53;;;;6605:163;;6647:16;;6677:5;;6696:12;;6722;;6605:28;:163::i;:::-;6590:178;5643:1132;-1:-1:-1;;;;;;;;5643:1132:14:o;948:145:30:-;998:95;;;;;;;;;;;;;;;;;;948:145;:::o;1183:28:39:-;;;-1:-1:-1;;;;;1183:28:39;;:::o;1056:40:40:-;;;;:::o;1100:168:30:-;1151:117;;;;;;;;;;;;;;;;;;1100:168;:::o;1054:172:37:-;1110:116;;;;;;;;;;;;;;;;;;1054:172;:::o;1374:46:14:-;1418:1;1374:46;:::o;1431:145:106:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;-1:-1:-1;1431:145:106;;;;;:::o;6262:1008:39:-;6532:20;6583:188;6619:11;6644:6;6664:12;6690;6716:7;6737:24;;6583:22;:188::i;:::-;6803:19;;;;:5;:19;;;;;;6568:203;;-1:-1:-1;6803:19:39;;:28;6782:111;;;;-1:-1:-1;;;6782:111:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6904:19;;;;:5;:19;;;;;:26;;-1:-1:-1;;6904:26:39;6926:4;6904:26;;;7041:18;;6990:17;;7010:85;;-1:-1:-1;;;7041:18:39;;6904:26;7041:18;6910:12;7010:17;:85::i;:::-;7175:22;;;-1:-1:-1;;;7175:22:39;;;;;;;;;;26:21:-1;;;7192:4:39;22:32:-1;6:49;;7175:22:39;;;;;;;7165:33;;;;;6990:105;;-1:-1:-1;7106:157:39;;6990:105;;7212:12;7238:15;7106:27;:157::i;:::-;6262:1008;;;;;;;;;;:::o;1205:145:106:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:106;;;1205:145::o;3153:381:30:-;3311:21;3366:12;3351;:27;3348:180;;;3410:30;:12;3427;3410:30;:16;:30;:::i;:::-;3394:46;;3348:180;;;3487:30;:12;3504;3487:30;:16;:30;:::i;:::-;3471:46;;3348:180;3153:381;;;;;:::o;3010:788:37:-;3258:20;3294:24;1531:123;;;;;;;;;;;;;;;;;;;;;3344:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3344:196:37;;;;;;;-1:-1:-1;;;;;3344:196:37;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3344:196:37;;;;;3321:229;;;;;;-1:-1:-1;;;3599:182:37;;;;-1:-1:-1;;;3599:182:37;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3599:182:37;;;;;;;3576:215;;;;;;3010:788::o;925:354:22:-;1028:9;;-1:-1:-1;;;;;1028:9:22;1020:32;999:116;;;;-1:-1:-1;;;999:116:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1146:33:22;;1125:115;;;;-1:-1:-1;;;1125:115:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:9;:22;;-1:-1:-1;;;;;;1250:22:22;-1:-1:-1;;;;;1250:22:22;;;;;;;;;;925:354::o;1745:305:15:-;-1:-1:-1;;;;;1881:28:15;;1860:102;;;;;-1:-1:-1;;;1860:102:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:22;:48;2031:4;:12;;-1:-1:-1;;;;;;2031:12:15;-1:-1:-1;;;;;2031:12:15;;;;;;;;;;1745:305::o;2719:664:40:-;2866:25;;:39;2845:118;;;;;-1:-1:-1;;;2845:118:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2995:26;2974:91;;;;;-1:-1:-1;;;2974:91:40;;;;;;;;;;;;-1:-1:-1;;;2974:91:40;;;;;;;;;;;;;;;-1:-1:-1;;;;;3097:27:40;;3076:101;;;;;-1:-1:-1;;;3076:101:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:12;:28;;-1:-1:-1;;;;;;3188:28:40;-1:-1:-1;;;;;3188:28:40;;;;;;;;;;;3255:121;;3301:12;;3335:4;;3354:12;3255:32;:121::i;:::-;3227:25;:149;-1:-1:-1;;2719:664:40:o;3393:1319:39:-;3660:24;;:38;3639:116;;;;;-1:-1:-1;;;3639:116:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;3787:26;3766:91;;;;;-1:-1:-1;;;3766:91:39;;;;;;;;;;;;-1:-1:-1;;;3766:91:39;;;;;;;;;;;;;;;-1:-1:-1;;;;;3889:28:39;;3868:95;;;;;-1:-1:-1;;;3868:95:39;;;;;;;;;;;;-1:-1:-1;;;3868:95:39;;;;;;;;;;;;;;;-1:-1:-1;;;;;3995:41:39;;3974:121;;;;-1:-1:-1;;;3974:121:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4106:13;:30;;-1:-1:-1;;;;;;4106:30:39;-1:-1:-1;;;;;4106:30:39;;;;;;;-1:-1:-1;;;;4146:40:39;-1:-1:-1;;;4146:40:39;;;;;;;;;4224:122;;4270:12;;4296:13;4331:4;4224:32;:122::i;:::-;4197:24;:149;4585:120;4615:14;4643:18;4675:20;4585:16;:120::i;:::-;3393:1319;;;;;:::o;229:421:106:-;287:7;527:6;523:45;;-1:-1:-1;556:1:106;549:8;;523:45;590:5;;;594:1;590;:5;:1;613:5;;;;;:10;605:19;;;;;3888:611:40;4090:20;4141:189;4177:11;4202:6;4222:12;4248;4274:7;4295:25;;4141:22;:189::i;:::-;4362:20;;;;:6;:20;;;;;;4126:204;;-1:-1:-1;4362:20:40;;:29;4341:113;;;;-1:-1:-1;;;4341:113:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4465:20;;;;4488:4;4465:20;;;;;;;;:27;;-1:-1:-1;;4465:27:40;;;;;;4472:12;3888:611;-1:-1:-1;;;;;3888:611:40:o;3134:90:34:-;3172:13;3205:5;3211;;3205:12;;;;;;;;;;;;;;;;3197:20;;3134:90;:::o;6721:594:41:-;6838:25;;6905:89;6935:49;6967:15;;;6935:23;:49::i;:::-;6905:16;:89::i;:::-;6879:115;;7005:21;7029:47;7046:29;7070:4;7046:23;:29::i;7029:47::-;7005:71;;7086:17;7106:37;7122:8;7132:10;7106:15;:37::i;:::-;7086:57;;7169:139;7277:4;7260:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7260:22:41;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7260:22:41;;;7250:33;;;;;;7233:51;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7233:51:41;;;7206:92;;;;;;7169:23;:139::i;5626:833::-;5892:22;;5871:106;;;;;-1:-1:-1;;;5871:106:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:19;6039:26;;;:12;:26;;;;;;6096:25;6075:101;;;;;-1:-1:-1;;;6075:101:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;6244:149;6288:6;6312:5;6335:15;6368:11;6244:26;:149::i;:::-;6223:229;;;;-1:-1:-1;;;6223:229:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2271:870;2521:17;;-1:-1:-1;;;;;2521:17:41;2513:40;2492:109;;;;;-1:-1:-1;;;2492:109:41;;;;;;;;;;;;-1:-1:-1;;;2492:109:41;;;;;;;;;;;;;;;-1:-1:-1;;;;;2633:29:41;;2612:105;;;;;-1:-1:-1;;;2612:105:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2749:41:41;;2728:121;;;;-1:-1:-1;;;2728:121:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:60;2899:20;2860:38;:60::i;:::-;2931:14;:32;;-1:-1:-1;;;;;2931:32:41;;;-1:-1:-1;;;;;;2931:32:41;;;;;;;2973:17;:38;;;;;;;;;;;;;;;3090:33;;;-1:-1:-1;;3090:33:41;;;;;;;;;;;;;;;26:21:-1;;;3090:33:41;22:32:-1;6:49;;3090:33:41;;;;;;;3080:44;;;;;3043:91;;:23;:91::i;:::-;3022:112;;;;:18;;:112;;;;;;:::i;:::-;;2271:870;;;:::o;3966:272:33:-;4101:13;;;4111:2;4101:13;;;;;;;;;4057:19;;4101:13;;;21:6:-1;;104:10;4101:13:33;87:34:-1;-1:-1;;;4198:2:33;4194:15;;4187:35;;;;-1:-1:-1;4194:15:33;4173:59::o;3587:237::-;3686:20;3722;3760:6;:13;3755:2;:18;3745:29;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;3745:29:33;87:34:-1;135:17;;-1:-1;3745:29:33;;3722:52;;3794:23;3801:7;3810:6;644:2900;770:19;1010:4;1004:11;994:21;;1164:9;1158:16;1202:6;1194;1187:22;1441:4;1433:6;1429:17;1590:6;1586:2;1582:15;1784:4;1773:9;1769:20;1611:522;1811:3;1807:2;1804:11;1611:522;;;2109:9;;2098:21;;1918:4;1910:13;;;;1946;1611:522;;;-1:-1:-1;2338:17:33;;2395:13;;2383:26;;2368:42;;2338:17;-1:-1:-1;2554:3:33;-1:-1:-1;2691:15:33;;;2768:4;2752:21;;2720:221;2795:3;2791:2;2788:11;2720:221;;;2917:9;;2906:21;;2832:4;2824:13;;;;2860;2720:221;;;2724:63;3471:2;3467:7;3448:2;3433:9;3427:16;3419:6;3415:29;3408:37;3403:3;3399:47;3395:56;3376:151;3370:4;3363:165;853:2685;;;;;;;:::o;567:2344:35:-;752:4;772:23;;:::i;:::-;798:29;812:14;798:13;:29::i;:::-;772:55;;837:32;872:16;883:4;872:10;:16::i;:::-;837:51;-1:-1:-1;899:24:35;;998:4;980:15;899:24;1059:29;1076:11;1059:16;:29::i;:::-;1039:49;;1101:4;:11;1116:1;1101:16;1098:36;;;1127:5;1120:12;;;;;;;;;;;1098:36;1149:6;1144:1761;1165:11;:18;1161:1;:22;1144:1761;;;1217:4;:11;1207:7;:21;1204:41;;;1238:5;1231:12;;;;;;;;;;;;1204:41;1273:27;1285:11;1297:1;1285:14;;;;;;;;;;;;;;1273:11;:27::i;:::-;1259:41;;1355:11;1338:29;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1338:29:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1338:29:35;;;1328:40;;;;;;1317:7;:51;1314:71;;1378:5;1371:12;;;;;;;;;;;;1314:71;1416:26;1427:11;1439:1;1427:14;;;;;;;;;;;;;;1416:10;:26::i;:::-;1398:44;;1460:15;:22;1486:2;1460:28;1457:1438;;;1522:4;:11;1511:7;:22;1508:269;;;1625:5;1587:32;1599:15;1615:2;1599:19;;;;;;;1587:32;1570:50;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1570:50:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1570:50:35;;;1560:61;;;;;;:70;1557:202;;;1665:4;1658:11;;;;;;;;;;;;1557:202;1731:5;1724:12;;;;;;;;;;;;1557:202;1795:20;1824:4;1829:7;1824:13;;;;;;;;;;;;;;;-1:-1:-1;1876:2:35;1859:19;;1856:39;;;1888:5;1881:12;;;;;;;;;;;;;1856:39;1922:46;1936:15;1952:14;1936:31;;;;;;;;;;;;;;;;1922:13;:46::i;:::-;1912:56;;1997:1;1986:12;;;;1457:1438;;;;2022:15;:22;2048:1;2022:27;2019:876;;;2155:19;2177:65;2196:30;2207:15;2223:1;2207:18;;;;;;;;;;;;;;2196:10;:30::i;:::-;2228:4;2234:7;2177:18;:65::i;:::-;2155:87;;2292:4;:11;2274:14;2264:7;:24;:39;2261:568;;;2405:5;2369:30;2380:15;2396:1;2380:18;;;;;;;2369:30;2352:48;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2352:48:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2352:48:35;;;2342:59;;;;;;:68;2339:200;;;2445:4;2438:11;;;;;;;;;;;;;2339:200;2511:5;2504:12;;;;;;;;;;;;;2261:568;2567:19;2563:266;;2650:5;2643:12;;;;;;;;;;;;;2563:266;2731:14;2720:25;;;;2777:33;2791:15;2807:1;2791:18;;;;;;;2777:33;2767:43;;2019:876;;1185:3;;1144:1761;;;;567:2344;;;;;;;;;;;;;;:::o;1840:361:34:-;1941:1;1929:9;:13;1908:137;;;;-1:-1:-1;;;1908:137:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:5;:12;:17;2056:103;;;;-1:-1:-1;;;2056:103:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:9;2170:24;:5;2185:9;2170:24;:::i;:::-;;1840:361;:::o;1934:392:36:-;2033:14;;:::i;:::-;2074:11;;2099:8;2095:59;;-1:-1:-1;;2130:13:36;;;;;;;;;-1:-1:-1;2130:13:36;;;;;;;2123:20;;2095:59;2299:20;;;;;;;;;2267:4;2257:15;;;2299:20;;;;;;;;;-1:-1:-1;1934:392:36;;;;:::o;7102:402::-;7200:22;7246:12;7253:4;7246:6;:12::i;:::-;7238:21;;;;;;7269:13;7285:11;7291:4;7285:5;:11::i;:::-;7269:27;;7328:8;7314:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7306:31;;7347:18;;:::i;:::-;7368:14;7377:4;7368:8;:14::i;:::-;7347:35;-1:-1:-1;7392:8:36;7414:84;7420:11;7428:2;7420:7;:11::i;:::-;7414:84;;;7460:8;7465:2;7460:4;:8::i;:::-;7447:5;7453:3;7447:10;;;;;;;;;;;;;;;;;:21;7482:5;;7414:84;;;7102:402;;;;;;:::o;4707:295:35:-;4809:21;4867:1;:8;4876:1;4867:10;4857:21;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;4857:21:35;87:34:-1;135:17;;-1:-1;4857:21:35;-1:-1:-1;4846:32:35;-1:-1:-1;4893:6:35;4888:108;4909:8;:15;4905:1;:19;4888:108;;;4959:26;4980:1;4983;4959:20;:26::i;:::-;4945:8;4954:1;4945:11;;;;;;;;;;;:40;-1:-1:-1;;;;;4945:40:35;;;;;;;;-1:-1:-1;4926:3:35;;4888:108;;;;4707:295;;;:::o;6034:313:36:-;6177:19;;;;6133:17;;6210:8;6206:50;;-1:-1:-1;6234:11:36;;6206:50;6282:3;6272:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;6272:14:36;87:34:-1;135:17;;-1:-1;6272:14:36;;6265:21;;6296:44;6309:4;:19;;;6330:4;6336:3;6296:12;:44::i;10395:164::-;10496:12;10539;10546:4;10539:6;:12::i;6534:318::-;6632:17;6673:12;6680:4;6673:6;:12::i;:::-;6665:21;;;;;;6696:14;6720:8;6757:13;6765:4;6757:7;:13::i;:::-;6787:14;;;;;;-1:-1:-1;;6787:14:36;;;;;;;;;;;6738:32;;-1:-1:-1;6738:32:36;-1:-1:-1;6738:32:36;6787:14;;;;;;;21:6:-1;;104:10;6787:14:36;87:34:-1;135:17;;-1:-1;6787:14:36;;6780:21;;6811:34;6824:9;6835:4;6841:3;6811:12;:34::i;:::-;6534:318;;;;;:::o;2917:959:35:-;3087:9;3297:24;3324:35;3340:18;3324:15;:35::i;:::-;3297:62;;3369:23;3405:11;:18;3395:29;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;3395:29:35;87:34:-1;135:17;;-1:-1;3395:29:35;-1:-1:-1;3369:55:35;-1:-1:-1;3541:7:35;3530:153;3560:11;:18;3552:7;:26;3550:1;:28;3530:153;;;3599:15;3617:4;3622:1;3617:7;;;;;;;;;;;;;;;;3599:25;;3662:10;3638;3651:7;3649:1;:9;3638:21;;;;;;;;;;;:34;-1:-1:-1;;;;;3638:34:35;;;;;;;;-1:-1:-1;;3580:3:35;;3530:153;;;;3767:10;3750:28;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3750:28:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3750:28:35;;;3740:39;;;;;;3723:11;3706:29;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3706:29:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3706:29:35;;;3696:40;;;;;;:83;3693:177;;;3802:11;:18;3795:25;;3693:177;;;3858:1;3851:8;;3693:177;2917:959;;;;;;;:::o;3417:325:36:-;3477:8;3501:4;:19;;;3524:1;3501:24;3497:67;;;-1:-1:-1;3548:5:36;3541:12;;3497:67;-1:-1:-1;3587:19:36;3704:13;3720:4;3573:11;3696:22;;;;3693:32;3686:40;;3665:71::o;4921:543::-;4980:4;5001:12;5008:4;5001:6;:12::i;:::-;4996:52;;-1:-1:-1;5036:1:36;5029:8;;4996:52;5088:19;;5194:13;;5057:7;5186:22;;;;5088:19;5247:20;5088:4;5247:14;:20::i;:::-;5298:19;;;;5238:29;;;;-1:-1:-1;5289:28:36;;-1:-1:-1;;5289:32:36;5277:9;5350:87;5363:4;5356:3;:11;5350:87;;5390:16;5402:3;5390:11;:16::i;:::-;5383:23;;;;5420:6;;5350:87;;5606:295;5706:19;;:::i;:::-;5750:12;5757:4;5750:6;:12::i;:::-;5741:22;;;;;;5773:8;5806:20;5821:4;5806:14;:20::i;:::-;5784:19;;5836:23;;;5784:42;;;5869:19;;;:25;5836:3;5606:295;-1:-1:-1;5606:295:36:o;1540:205::-;1602:4;1618:19;;:::i;:::-;-1:-1:-1;;1640:17:36;;1719:19;;;;;1697;;1674:20;;;1697:41;;-1:-1:-1;;1540:205:36:o;907:384::-;1004:23;;:::i;:::-;1051:13;1059:4;1051:7;:13::i;:::-;1043:22;;;;;;1086:20;;;;1075:8;1134:16;1086:20;1134:11;:16::i;:::-;1160:29;;;1199:23;;;;:36;;;1268:16;;1245:20;;;;:39;;;;1160:8;907:384;-1:-1:-1;907:384:36:o;5008:208:35:-;5124:4;5158:1;5156;:3;:6;:52;;5204:4;5194:3;5200:1;5198;:3;5194:8;;;;;;;;;;;;;;5188:20;;;;;;5156:52;;;5181:4;5171:3;5177:1;5175;:3;5171:8;;;;;;;;;;;;;;5165:20;;;;;;5156:52;5151:58;;;5008:208;-1:-1:-1;;;5008:208:35:o;14671:698:36:-;15032:1;15103:2;15095:6;15091:15;15138:6;15185:2;15180:3;15176:12;15205:148;15218:10;15215:1;15212:17;15205:148;;;15331:1;15322:7;15318:15;15312:22;15308:1;15299:7;15295:15;15288:47;15244:2;15241:1;15237:10;15232:15;;15205:148;;8267:398;8327:10;8357:12;8364:4;8357:6;:12::i;:::-;8349:21;;;;;;8380:14;8404:8;8441:13;8449:4;8441:7;:13::i;:::-;8422:32;;-1:-1:-1;8422:32:36;-1:-1:-1;8474:2:36;8468:8;;;:20;;-1:-1:-1;8480:8:36;;8468:20;8464:59;;;8504:8;;;8464:59;8643:3;8639:2;8635:12;8630:3;8626:22;8614:9;8608:16;8604:45;8595:54;;8581:78;;;;;:::o;3894:317::-;3954:8;3978:4;:19;;;4001:1;3978:24;3974:67;;;-1:-1:-1;4025:5:36;4018:12;;3974:67;-1:-1:-1;4064:19:36;4174:13;4190:4;4050:11;4166:22;;;;4163:32;;4142:63::o;13540:861::-;13638:12;13652:9;13685:12;13692:4;13685:6;:12::i;:::-;13677:21;;;;;;13738:19;;13844:12;;13708:7;13836:21;;253:4;13880:21;;13876:126;;;13927:5;-1:-1:-1;13953:1:36;;-1:-1:-1;13969:22:36;;-1:-1:-1;13969:22:36;13876:126;295:4;14015:2;:20;14011:384;;;14080:1;14058:4;:19;;;:23;14051:30;;14105:5;14113:1;14105:9;14095:19;;14011:384;;;14314:19;;;;14368:12;;;-1:-1:-1;;14368:16:36;;-1:-1:-1;14314:30:36;;;;;;-1:-1:-1;14011:384:36;13540:861;;;;;;:::o;3916:742:35:-;4057:8;;4017:21;;4057:10;4054:598;;4083:12;4109:14;4132:25;4153:1;4155;4132:20;:25::i;:::-;4126:32;;;-1:-1:-1;4187:1:35;4175:13;;;:30;;;4192:8;:13;;4204:1;4192:13;4175:30;4172:332;;;4257:1;4246;:8;4255:1;4246:10;:12;4236:23;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;4236:23:35;87:34:-1;135:17;;-1:-1;4236:23:35;;4225:34;;4277:14;4294:25;4315:1;4317;4294:20;:25::i;:::-;4277:42;;4351:9;4337:8;4346:1;4337:11;;;;;;;;;;;:23;-1:-1:-1;;;;;4337:23:35;;;;;;;;;4387:1;4378:10;;4172:332;;;;4459:1;4448;:8;4457:1;4448:10;:12;4438:23;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;4438:23:35;87:34:-1;135:17;;-1:-1;4438:23:35;;4427:34;;4488:1;4479:10;;4172:332;4522:13;;;4518:124;4539:8;:15;4537:1;:17;4518:124;;;4593:34;4616:6;4614:8;;:1;:8;4623:1;4614:10;4625:1;4593:20;:34::i;:::-;4579:8;4588:1;4579:11;;;;;;;;;;;:48;-1:-1:-1;;;;;4579:48:35;;;;;;;;-1:-1:-1;4556:3:35;;4518:124;;11366:594:36;11433:4;11452;:19;;;11475:1;11452:24;11449:49;;;-1:-1:-1;11497:1:36;11490:8;;11449:49;11539:19;;11645:13;;11508:7;11637:22;;253:4;11681:21;;11678:46;;;11723:1;11716:8;;;;;;11678:46;295:4;11737:2;:20;:72;;;;338:4;11762:2;:22;;:46;;;;;380:4;11788:2;:20;11762:46;11734:97;;;11830:1;11823:8;;;;;;11734:97;338:4;11844:2;:21;11841:70;;;-1:-1:-1;;;11886:25:36;;-1:-1:-1;11879:32:36;;11841:70;-1:-1:-1;;;11928:25:36;;11366:594;-1:-1:-1;;11366:594:36:o;12185:1135::-;12355:13;;12241:8;;12347:22;;253:4;12392:21;;12388:926;;;12435:1;12429:7;;12388:926;;;295:4;12457:2;:20;12453:861;;;-1:-1:-1;;12499:25:36;;;-1:-1:-1;12453:861:36;;;338:4;12545:2;:21;12541:773;;;12763:1;12751:14;;12745:21;12672:4;12781:2;12777:13;;;;12772:3;12768:23;12741:51;;12838:15;;-1:-1:-1;;12831:23:36;;-1:-1:-1;12634:250:36;;;380:4;12904:2;:20;12900:414;;;-1:-1:-1;;12946:25:36;;;-1:-1:-1;12900:414:36;;;13183:1;13171:14;;;;13165:21;13092:4;13201:2;13197:13;;;;13192:3;13188:23;13161:51;;13258:15;;;-1:-1:-1;;13251:23:36;;12185:1135;-1:-1:-1;12185:1135:36:o;677:248:76:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;677:248:76;;;-1:-1:-1;677:248:76;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\n// Copyright 2019 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport \"../../consensus-gateway/ConsensusGateway.sol\";\n\ncontract ConsensusGatewayTest is ConsensusGateway {\n\n    function setConsensus(\n        ConsensusInterface _consensus\n    )\n        external\n    {\n        ConsensusModule.setupConsensus(\n            ConsensusInterface(_consensus)\n        );\n    }\n}\n",
  "sourcePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/test/consensus_gateway/ConsensusGatewayTest.sol",
  "ast": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/test/consensus_gateway/ConsensusGatewayTest.sol",
    "exportedSymbols": {
      "ConsensusGatewayTest": [
        15539
      ]
    },
    "id": 15540,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15521,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:76"
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus-gateway/ConsensusGateway.sol",
        "file": "../../consensus-gateway/ConsensusGateway.sol",
        "id": 15522,
        "nodeType": "ImportDirective",
        "scope": 15540,
        "sourceUnit": 2944,
        "src": "621:54:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15523,
              "name": "ConsensusGateway",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2943,
              "src": "710:16:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConsensusGateway_$2943",
                "typeString": "contract ConsensusGateway"
              }
            },
            "id": 15524,
            "nodeType": "InheritanceSpecifier",
            "src": "710:16:76"
          }
        ],
        "contractDependencies": [
          2943,
          3004,
          3018,
          5933,
          8616,
          8873,
          10509,
          10518,
          10736,
          10875,
          11211,
          12954,
          18876
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 15539,
        "linearizedBaseContracts": [
          15539,
          2943,
          3018,
          5933,
          8616,
          3004,
          10518,
          10736,
          11211,
          8873,
          10875,
          10509,
          18876,
          12954
        ],
        "name": "ConsensusGatewayTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15537,
              "nodeType": "Block",
              "src": "822:101:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15533,
                            "name": "_consensus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15526,
                            "src": "895:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                              "typeString": "contract ConsensusInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                              "typeString": "contract ConsensusInterface"
                            }
                          ],
                          "id": 15532,
                          "name": "ConsensusInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5881,
                          "src": "876:18:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ConsensusInterface_$5881_$",
                            "typeString": "type(contract ConsensusInterface)"
                          }
                        },
                        "id": 15534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "876:30:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                          "typeString": "contract ConsensusInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                          "typeString": "contract ConsensusInterface"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15529,
                        "name": "ConsensusModule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5933,
                        "src": "832:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConsensusModule_$5933_$",
                          "typeString": "type(contract ConsensusModule)"
                        }
                      },
                      "id": 15531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setupConsensus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5918,
                      "src": "832:30:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ConsensusInterface_$5881_$returns$__$",
                        "typeString": "function (contract ConsensusInterface)"
                      }
                    },
                    "id": 15535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:84:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15536,
                  "nodeType": "ExpressionStatement",
                  "src": "832:84:76"
                }
              ]
            },
            "documentation": null,
            "id": 15538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setConsensus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15526,
                  "name": "_consensus",
                  "nodeType": "VariableDeclaration",
                  "scope": 15538,
                  "src": "765:29:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                    "typeString": "contract ConsensusInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15525,
                    "name": "ConsensusInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5881,
                    "src": "765:18:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                      "typeString": "contract ConsensusInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "755:45:76"
            },
            "returnParameters": {
              "id": 15528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:76"
            },
            "scope": 15539,
            "src": "734:189:76",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 15540,
        "src": "677:248:76"
      }
    ],
    "src": "0:926:76"
  },
  "legacyAST": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/test/consensus_gateway/ConsensusGatewayTest.sol",
    "exportedSymbols": {
      "ConsensusGatewayTest": [
        15539
      ]
    },
    "id": 15540,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15521,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:76"
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/consensus-gateway/ConsensusGateway.sol",
        "file": "../../consensus-gateway/ConsensusGateway.sol",
        "id": 15522,
        "nodeType": "ImportDirective",
        "scope": 15540,
        "sourceUnit": 2944,
        "src": "621:54:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15523,
              "name": "ConsensusGateway",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2943,
              "src": "710:16:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConsensusGateway_$2943",
                "typeString": "contract ConsensusGateway"
              }
            },
            "id": 15524,
            "nodeType": "InheritanceSpecifier",
            "src": "710:16:76"
          }
        ],
        "contractDependencies": [
          2943,
          3004,
          3018,
          5933,
          8616,
          8873,
          10509,
          10518,
          10736,
          10875,
          11211,
          12954,
          18876
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 15539,
        "linearizedBaseContracts": [
          15539,
          2943,
          3018,
          5933,
          8616,
          3004,
          10518,
          10736,
          11211,
          8873,
          10875,
          10509,
          18876,
          12954
        ],
        "name": "ConsensusGatewayTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15537,
              "nodeType": "Block",
              "src": "822:101:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 15533,
                            "name": "_consensus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15526,
                            "src": "895:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                              "typeString": "contract ConsensusInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                              "typeString": "contract ConsensusInterface"
                            }
                          ],
                          "id": 15532,
                          "name": "ConsensusInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5881,
                          "src": "876:18:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ConsensusInterface_$5881_$",
                            "typeString": "type(contract ConsensusInterface)"
                          }
                        },
                        "id": 15534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "876:30:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                          "typeString": "contract ConsensusInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                          "typeString": "contract ConsensusInterface"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 15529,
                        "name": "ConsensusModule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5933,
                        "src": "832:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConsensusModule_$5933_$",
                          "typeString": "type(contract ConsensusModule)"
                        }
                      },
                      "id": 15531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setupConsensus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5918,
                      "src": "832:30:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ConsensusInterface_$5881_$returns$__$",
                        "typeString": "function (contract ConsensusInterface)"
                      }
                    },
                    "id": 15535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:84:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15536,
                  "nodeType": "ExpressionStatement",
                  "src": "832:84:76"
                }
              ]
            },
            "documentation": null,
            "id": 15538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setConsensus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15526,
                  "name": "_consensus",
                  "nodeType": "VariableDeclaration",
                  "scope": 15538,
                  "src": "765:29:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                    "typeString": "contract ConsensusInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15525,
                    "name": "ConsensusInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5881,
                    "src": "765:18:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConsensusInterface_$5881",
                      "typeString": "contract ConsensusInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "755:45:76"
            },
            "returnParameters": {
              "id": 15528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:0:76"
            },
            "scope": 15539,
            "src": "734:189:76",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 15540,
        "src": "677:248:76"
      }
    ],
    "src": "0:926:76"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2020-03-21T06:48:34.797Z",
  "devdoc": {
    "methods": {
      "confirmWithdraw(uint256,address,uint256,uint256,address,uint256,bytes)": {
        "params": {
          "_amount": "MOST token amount for withdrawal",
          "_beneficiary": "Address of beneficiary where tokens will be withdrawn.",
          "_blockNumber": "Block number of Aux chain against which storage proof is generated.",
          "_feeGasLimit": "Gas limit at which fee will be capped.",
          "_feeGasPrice": "Gas price at which fee will be calculated.",
          "_rlpParentNodes": "Storage merkle proof to verify message declaration on the origin chain.",
          "_withdrawer": "Address of the withdrawer account."
        },
        "return": "messageHash_ Message Hash     * \\pre `_amount` is not 0. \\pre `_beneficiary` address is not 0. \\pre `_withdrawer` address is not 0. \\pre `_rlpParentNodes` is not 0     * \\post Adds a new entry in `inbox` mapping storage variable. The value is      set as `true` for `messagehash_` in `inbox` mapping. The      `messageHash_` is calculated by `MessageInbox.confirmMessage`. \\post Update the MessageInbox.inboxNonces storage mapping variable by      incrementing the value for `msg.sender` by one. \\post Transfers the `most` token to the `msg.sender` address as a fees.      The `fees` amount is calculated by `ERC20GatewayBase::reward()` \\post Transfer the `most` token to the `_beneficiary` address. The      transfer amount calculated as `_amount-fees`"
      },
      "declareOpenKernel(address,uint256,uint256)": {
        "details": "In case of chain halting when new Core is created, then new kernel     can be opened at the same height.     In normal cases, since this function is called by consensus, we can     trust that same height will not be passed.     *      Function requires:         - Only consensus can call         - Core address should not be 0         - Either Kernel height should equal currentMetablockHeight plus           one or kernel can be opened at same height in case of chain           halting.",
        "params": {
          "_core": "Core contract address.",
          "_feeGasLimit": "Fee gas limit.",
          "_feeGasPrice": "Fee gas price."
        },
        "return": "messageHash_ Message hash."
      },
      "deposit(uint256,address,uint256,uint256)": {
        "params": {
          "_amount": "MOST token deposit amount in atto.",
          "_beneficiary": "Address of beneficiary on auxiliary chain.",
          "_feeGasLimit": "Fee gas limit at which rewards will be calculated.",
          "_feeGasPrice": "Fee gas price at which rewards will be calculated."
        },
        "return": "messageHash_ Message hash."
      },
      "getRemoteGatewayLatestProvenBlockNumber()": {
        "return": "blockNumber_ Remote gateway latest proven block number."
      },
      "hashChannelIdentifier(bytes32,address,address)": {
        "params": {
          "_inbox": "Inbox address.",
          "_metachainId": "Metachain identifier.",
          "_outbox": "Outbox address."
        }
      },
      "hashDepositIntent(address,uint256,address)": {
        "params": {
          "_amount": "Amount of tokens.",
          "_beneficiary": "Beneficiary address.",
          "_valueToken": "Value token Address."
        },
        "return": "depositIntentHash_ Hash of deposit intent."
      },
      "hashKernelIntent(uint256,bytes32)": {
        "params": {
          "_height": "Height of metablock.",
          "_kernelHash": "Hash of kernel at given height."
        },
        "return": "kernelIntentHash_ Kernel intent hash."
      },
      "hashWithdrawIntent(address,address,uint256,address)": {
        "params": {
          "_amount": "Amount of tokens.",
          "_beneficiary": "Beneficiary address.",
          "_utilityToken": "Utility token address.",
          "_valueToken": "Value token address."
        },
        "return": "withdrawIntentHash_ Hash of withdraw intent."
      },
      "inboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "params": {
          "_feeGasLimit": "Fee gas limit.",
          "_feeGasPrice": "Fee gas price.",
          "_intentHash": "Intent hash of message.",
          "_nonce": "Nonce of sender.",
          "_sender": "Sender address."
        },
        "return": "messageHash_ Message hash."
      },
      "outboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "params": {
          "_feeGasLimit": "Fee gas limit.",
          "_feeGasPrice": "Fee gas price.",
          "_intentHash": "Intent hash of message.",
          "_nonce": "Nonce of sender.",
          "_sender": "Sender address."
        },
        "return": "messageHash_ Message hash."
      },
      "setup(bytes32,address,address,address,uint256,uint8)": {
        "details": "- Function can only be called once is ensured by setup function of       message box.     - Validations for input parameters are done in message box setup method.",
        "params": {
          "_consensus": "Address of consensus contract.",
          "_consensusCogateway": "Address of consensus cogateway contract.",
          "_maxStorageRootItems": "Maximum number of storage roots stored.",
          "_metachainId": "Metachain Id",
          "_most": "Address of MOST contract.",
          "_outboxStorageIndex": "Outbox storage index of consensus cogateway."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "confirmWithdraw(uint256,address,uint256,uint256,address,uint256,bytes)": {
        "notice": "Confirm withdraw in order to transfer most."
      },
      "declareOpenKernel(address,uint256,uint256)": {
        "notice": "Function to declare open kernel in consensus gateway."
      },
      "deposit(uint256,address,uint256,uint256)": {
        "notice": "Deposit funds to mint on auxiliary chain. Depositor needs to        approve this contract with the deposit amount."
      },
      "getRemoteGatewayLatestProvenBlockNumber()": {
        "notice": "Gets the remote gateway latest proven block number."
      },
      "hashChannelIdentifier(bytes32,address,address)": {
        "notice": "Generate channel identifier hash from the input params"
      },
      "hashDepositIntent(address,uint256,address)": {
        "notice": "It returns hash of deposit intent."
      },
      "hashKernelIntent(uint256,bytes32)": {
        "notice": "Creates kernel intent hash."
      },
      "hashWithdrawIntent(address,address,uint256,address)": {
        "notice": "It returns hash of withdraw intent."
      },
      "inboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "notice": "Generate inbox message hash from the input params"
      },
      "outboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "notice": "Generate outbox message hash from the input params"
      },
      "setup(bytes32,address,address,address,uint256,uint8)": {
        "notice": "Setup function for consensus gateway."
      }
    }
  }
}