{
  "contractName": "ObserverInterface",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_stateRoot",
          "type": "bytes32"
        }
      ],
      "name": "anchorStateRoot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_stateRoot\",\"type\":\"bytes32\"}],\"name\":\"anchorStateRoot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"anchorStateRoot(uint256,bytes32)\":{\"params\":{\"_blockNumber\":\"Block number for which state root needs to                     update.\",\"_stateRoot\":\"State root of input block number.\"}}},\"title\":\"Observer Interface\"},\"userdoc\":{\"methods\":{\"anchorStateRoot(uint256,bytes32)\":{\"notice\":\"Anchor the state root for an (increasing) block number.\"},\"setup()\":{\"notice\":\"setup() function initializes the observer contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/anchor/ObserverInterface.sol\":\"ObserverInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/anchor/ObserverInterface.sol\":{\"keccak256\":\"0x10312d276a979772e7a50331c67f9e6f8cb602a7b4c357178c78fcc07369f708\",\"urls\":[\"bzz-raw://87bf819c3e994f96a79af275c317ca4f9abd399642d48abfb4fbd3be9cf3ab89\",\"dweb:/ipfs/QmZXZuKZubDtWM4YiCTwHSq7h25EX6LUMZP95AwNqMC23R\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\n// Copyright 2020 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @title Observer Interface\n */\ninterface ObserverInterface {\n\n    /**\n     * @notice setup() function initializes the observer contract.\n     */\n     function setup() external;\n\n    /**\n     * @notice Anchor the state root for an (increasing) block number.\n     *\n     * @param _blockNumber Block number for which state root needs to\n     *                      update.\n     * @param _stateRoot State root of input block number.\n     */\n    function anchorStateRoot(\n        uint256 _blockNumber,\n        bytes32 _stateRoot\n    )\n        external;\n}\n",
  "sourcePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/anchor/ObserverInterface.sol",
  "ast": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/anchor/ObserverInterface.sol",
    "exportedSymbols": {
      "ObserverInterface": [
        176
      ]
    },
    "id": 177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 165,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Observer Interface",
        "fullyImplemented": false,
        "id": 176,
        "linearizedBaseContracts": [
          176
        ],
        "name": "ObserverInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice setup() function initializes the observer contract.",
            "id": 168,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:2:4"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:4"
            },
            "scope": 176,
            "src": "777:26:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Anchor the state root for an (increasing) block number.\n     * @param _blockNumber Block number for which state root needs to\n                     update.\n@param _stateRoot State root of input block number.",
            "id": 175,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "anchorStateRoot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "name": "_blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1102:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "name": "_stateRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1132:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:64:4"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:0:4"
            },
            "scope": 176,
            "src": "1068:106:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 177,
        "src": "658:518:4"
      }
    ],
    "src": "0:1177:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/anchor/ObserverInterface.sol",
    "exportedSymbols": {
      "ObserverInterface": [
        176
      ]
    },
    "id": 177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 165,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Observer Interface",
        "fullyImplemented": false,
        "id": 176,
        "linearizedBaseContracts": [
          176
        ],
        "name": "ObserverInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice setup() function initializes the observer contract.",
            "id": 168,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "791:2:4"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "802:0:4"
            },
            "scope": 176,
            "src": "777:26:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Anchor the state root for an (increasing) block number.\n     * @param _blockNumber Block number for which state root needs to\n                     update.\n@param _stateRoot State root of input block number.",
            "id": 175,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "anchorStateRoot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "name": "_blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1102:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "name": "_stateRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "1132:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1092:64:4"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:0:4"
            },
            "scope": 176,
            "src": "1068:106:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 177,
        "src": "658:518:4"
      }
    ],
    "src": "0:1177:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2020-03-21T06:48:34.593Z",
  "devdoc": {
    "methods": {
      "anchorStateRoot(uint256,bytes32)": {
        "params": {
          "_blockNumber": "Block number for which state root needs to                     update.",
          "_stateRoot": "State root of input block number."
        }
      }
    },
    "title": "Observer Interface"
  },
  "userdoc": {
    "methods": {
      "anchorStateRoot(uint256,bytes32)": {
        "notice": "Anchor the state root for an (increasing) block number."
      },
      "setup()": {
        "notice": "setup() function initializes the observer contract."
      }
    }
  }
}