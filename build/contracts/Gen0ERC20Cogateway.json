{
  "contractName": "Gen0ERC20Cogateway",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "name": "DepositIntentConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "remoteGateway",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "GatewayProven",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract Proxy",
          "name": "proxy",
          "type": "address"
        }
      ],
      "name": "ProxyCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "valueToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "utilityToken",
          "type": "address"
        }
      ],
      "name": "UtilityTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeGasPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeGasLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "utilityToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "messageHash",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawIntentDeclared",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEPOSIT_INTENT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INBOX_OFFSET",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MESSAGE_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_CHANNEL_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_DOMAIN_SEPARATOR_NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_DOMAIN_SEPARATOR_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MMB_DOMAIN_SEPARATOR_VERSION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OUTBOX_OFFSET",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UTILITY_TOKEN_SETUP_CALLPREFIX",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "WITHDRAW_INTENT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_valueToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_depositor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_rlpParentNodes",
          "type": "bytes"
        }
      ],
      "name": "confirmDeposit",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "encodedAccountPath",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisERC20Gateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisMaxStorageRootItems",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisMetachainId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisOutboxStorageIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisStateRootProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "genesisUtilityTokenMastercopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRemoteGatewayLatestProvenBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_metachainId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_outbox",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_inbox",
          "type": "address"
        }
      ],
      "name": "hashChannelIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "channelIdentifier_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_valueToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "hashDepositIntent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "depositIntentHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_valueToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_utilityToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "hashWithdrawIntent",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "withdrawIntentHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "inboundChannelIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "inbox",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_intentHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "inboxMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "inboxNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "messageInbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "messageOutbox",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outboundChannelIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "outbox",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_intentHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "outboxMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "outboxNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "outboxStorageIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_rlpAccount",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_rlpParentNodes",
          "type": "bytes"
        }
      ],
      "name": "proveGateway",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stateRootProvider",
      "outputs": [
        {
          "internalType": "contract StateRootInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "storageAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storageRoots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "utilityTokenMasterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "utilityTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_feeGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "contract UtilityTokenInterface",
          "name": "_utilityToken",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "messageHash_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_metachainId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_erc20Gateway",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stateRootProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxStorageRootItems",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_outboxStorageIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_utilityTokenMastercopy",
          "type": "address"
        }
      ],
      "name": "activate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"DepositIntentConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"remoteGateway\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"GatewayProven\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract Proxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"valueToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"utilityToken\",\"type\":\"address\"}],\"name\":\"UtilityTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeGasPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeGasLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"utilityToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"WithdrawIntentDeclared\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEPOSIT_INTENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INBOX_OFFSET\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MESSAGE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_CHANNEL_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_DOMAIN_SEPARATOR_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_DOMAIN_SEPARATOR_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MMB_DOMAIN_SEPARATOR_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OUTBOX_OFFSET\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"UTILITY_TOKEN_SETUP_CALLPREFIX\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WITHDRAW_INTENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_metachainId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_erc20Gateway\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stateRootProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxStorageRootItems\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_outboxStorageIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_utilityTokenMastercopy\",\"type\":\"address\"}],\"name\":\"activate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_valueToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_rlpParentNodes\",\"type\":\"bytes\"}],\"name\":\"confirmDeposit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"encodedAccountPath\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisERC20Gateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisMaxStorageRootItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisMetachainId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisOutboxStorageIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisStateRootProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"genesisUtilityTokenMastercopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRemoteGatewayLatestProvenBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_metachainId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_outbox\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_inbox\",\"type\":\"address\"}],\"name\":\"hashChannelIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"channelIdentifier_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_valueToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"hashDepositIntent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"depositIntentHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_valueToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_utilityToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"hashWithdrawIntent\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"withdrawIntentHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inboundChannelIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"inbox\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_intentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"inboxMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"inboxNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messageInbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"messageOutbox\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outboundChannelIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"outbox\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_intentHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"outboxMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"outboxNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"outboxStorageIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_rlpAccount\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_rlpParentNodes\",\"type\":\"bytes\"}],\"name\":\"proveGateway\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stateRootProvider\",\"outputs\":[{\"internalType\":\"contract StateRootInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"storageAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storageRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"utilityTokenMasterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"utilityTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"contract UtilityTokenInterface\",\"name\":\"_utilityToken\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"activate(bytes32,address,address,uint256,uint8,address)\":{\"details\":\"The function sets corresponding genesis* variables inherited     from GenesisERC20Cogateway contract and calls the parent class     ERC20Cogateway::setup() function to activate the gateway.     * \\\\pre `_metachainId` is not 0. \\\\pre `_erc20Gateway` is not 0. \\\\pre `_stateRootProvider` is not 0. \\\\pre `_maxStorageRootItems` is not 0. \\\\pre `_utilityTokenMastercopy` is not 0.     * \\\\post Sets the `genesisMetachainId` storage variable to `_metachainId`. \\\\post Sets the `genesisERC20Gateway` storage variable to `_erc20Gateway`. \\\\post Sets the `genesisStateRootProvider` storage variable      to `_stateRootProvider`. \\\\post Sets the `genesisMaxStorageRootItems` storage variable      to `_maxStorageRootItems`. \\\\post Sets the `genesisOutboxStorageIndex` storage variable      to `_outboxStorageIndex`. \\\\post Sets the `genesisUtilityTokenMastercopy` storage variable to      `_utilityTokenMastercopy`. \\\\post Calls ERC20Cogateway::setup() function to activate the gateway,      which in its turn calls MessageOutbox::setupMessageOutbox()      function which assures that activate() function can be called      only once.\"},\"confirmDeposit(address,uint256,address,uint256,uint256,address,uint256,bytes)\":{\"params\":{\"_amount\":\"ERC20 token deposit amount in atto.\",\"_beneficiary\":\"Address of beneficiary on the target chain.\",\"_blockNumber\":\"Block number of origin chain against which storage proof is generated.\",\"_depositor\":\"Address of depositor on the origin chain.\",\"_feeGasLimit\":\"Gas limit at which fee will be capped.\",\"_feeGasPrice\":\"Gas price at which fee will be calculated.\",\"_rlpParentNodes\":\"Storage merkle proof to verify message declaration                       on the origin chain.\",\"_valueToken\":\"ERC20 token address on the origin chain.\"},\"return\":\"messageHash_ Message hash.     * \\\\pre `_valueToken` address is not 0. \\\\pre `_amount` is not 0. \\\\pre `_beneficiary` address is not 0. \\\\pre `_depositor` address is not 0. \\\\pre `_rlpParentNodes` is not 0.     * \\\\post Adds a new entry in `inbox` mapping storage variable. The value is      set as `true` for `messagehash_` in `inbox` mapping. The      `messageHash_` is calculated by calling `MessageInbox.confirmMessage`      function with parameters `depositIntentHash`, `nonce`,      `_feeGasPrice`, `_feeGasLimit`, `_depositor`, `_blockNumber` and      `_rlpParentNodes`. `depositIntentHash` is calculated by calling      `ERC20GatewayBase.hashDepositIntent` functions with the parameters      `_valueToken`, `_amount` and `_beneficiary`. \\\\post Deploys a new utility token contract by calling      `deployUtilityToken()` with parameter `_valueToken`. \\\\post Transfers the tokens to the `msg.sender` address as a fees.      The `fees` amount is calculated by calling      `ERC20GatewayBase::reward()` with parameters `gasConsumed`,      `_feeGasPrice` and `_feeGasLimit`. `gasConsumed` is the approximate      gas used in this transaction. \\\\post Transfer the `_amount-fees` amount of token to the `_beneficiary`      address. \\\\post Update the MessageInbox.inboxNonces storage mapping variable by      incrementing the      value for `_withdrawer` by one. \\\\post Emits `DepositIntentConfirmed` event with the `messageHash_` as a      parameter.\"},\"getRemoteGatewayLatestProvenBlockNumber()\":{\"return\":\"blockNumber_ Remote gateway latest proven block number.\"},\"hashChannelIdentifier(bytes32,address,address)\":{\"params\":{\"_inbox\":\"Inbox address.\",\"_metachainId\":\"Metachain identifier.\",\"_outbox\":\"Outbox address.\"}},\"hashDepositIntent(address,uint256,address)\":{\"params\":{\"_amount\":\"Amount of tokens.\",\"_beneficiary\":\"Beneficiary address.\",\"_valueToken\":\"Value token Address.\"},\"return\":\"depositIntentHash_ Hash of deposit intent.\"},\"hashWithdrawIntent(address,address,uint256,address)\":{\"params\":{\"_amount\":\"Amount of tokens.\",\"_beneficiary\":\"Beneficiary address.\",\"_utilityToken\":\"Utility token address.\",\"_valueToken\":\"Value token address.\"},\"return\":\"withdrawIntentHash_ Hash of withdraw intent.\"},\"inboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"params\":{\"_feeGasLimit\":\"Fee gas limit.\",\"_feeGasPrice\":\"Fee gas price.\",\"_intentHash\":\"Intent hash of message.\",\"_nonce\":\"Nonce of sender.\",\"_sender\":\"Sender address.\"},\"return\":\"messageHash_ Message hash.\"},\"outboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"params\":{\"_feeGasLimit\":\"Fee gas limit.\",\"_feeGasPrice\":\"Fee gas price.\",\"_intentHash\":\"Intent hash of message.\",\"_nonce\":\"Nonce of sender.\",\"_sender\":\"Sender address.\"},\"return\":\"messageHash_ Message hash.\"},\"proveGateway(uint256,bytes,bytes)\":{\"params\":{\"_blockNumber\":\"Block number at which ERC20Gateway contract is to                    be proven.\",\"_rlpAccount\":\"RLP encoded account node object.\",\"_rlpParentNodes\":\"RLP encoded value of account proof node array.     * \\\\post Calls `MessageInbox.proveStorageAccount()` function with      `_blockNumber`, `_rlpAccount`, `_rlpParentNodes` as input      parameters. \\\\post Emits `GatewayProven` event with the address of `messageInbox`      and `_blockNumber` parameters.\"}},\"setup()\":{\"details\":\"Implementation does not mark the contract as private (as it has     dummy implementation, it makes sense), because components     accepting ERC20Cogateway interface might require this function     to be there.\"},\"withdraw(uint256,address,uint256,uint256,address)\":{\"params\":{\"_amount\":\"Amount of tokens to be withdrawn.\",\"_beneficiary\":\"The address in the origin chain where the value                    where the tokens will be withdrawn.\",\"_feeGasLimit\":\"Gas limit at which fee will be capped.\",\"_feeGasPrice\":\"Gas price at which fee will be calculated.\",\"_utilityToken\":\"Address of utility token.\"},\"return\":\"messageHash_ Message hash.     * \\\\pre `_utilityToken` is not 0. \\\\pre `_amount` is not 0. \\\\pre `_beneficiary` is not 0. \\\\pre `_amount` should be greater than maximum reward. \\\\pre `msg.sender` should approve erc20 cogateway contract.     * \\\\post Adds a new entry in `outbox` mapping storage variable. The value is      set as `true` for `messagehash_` in `outbox` mapping. The      `messageHash_` is obtained by calling `MessageOutbox.declareMessage`      with the parameters `withdrawIntentHash`,      `MessageOutbox.outboxNonces[msg.sender]`, `_feeGasPrice`,      `_feeGasLimit` and `msg.sender`. `withdrawIntentHash` is calculated      by calling `ERC20GatewayBase.hashWithdrawIntent` with parameters      `valueToken`, `_utilityToken`, `_amount`, `_beneficiary`. \\\\post `_amount` number of utility tokens will be burned from `msg.sender`      account by erc20 cogateway. \\\\post Update the `MessageOutbox.outboxNonces` storage mapping variable      by incrementing the value for `msg.sender` by one. \\\\post Emits `WithdrawIntentDeclared` event with the `_amount`, address of      `_beneficiary`, `_feeGasPrice`, `_feeGasLimit`, address of      `msg.sender`, address of `_utilityToken` and `messageHash_`.\"}},\"title\":\"Implements ERC20Cogateway contract for gen0 chains.\"},\"userdoc\":{\"methods\":{\"activate(bytes32,address,address,uint256,uint8,address)\":{\"notice\":\"activate() function activates the contract.\"},\"confirmDeposit(address,uint256,address,uint256,uint256,address,uint256,bytes)\":{\"notice\":\"Confirm deposit in order to mint tokens.\"},\"getRemoteGatewayLatestProvenBlockNumber()\":{\"notice\":\"Gets the remote gateway latest proven block number.\"},\"hashChannelIdentifier(bytes32,address,address)\":{\"notice\":\"Generate channel identifier hash from the input params\"},\"hashDepositIntent(address,uint256,address)\":{\"notice\":\"It returns hash of deposit intent.\"},\"hashWithdrawIntent(address,address,uint256,address)\":{\"notice\":\"It returns hash of withdraw intent.\"},\"inboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"notice\":\"Generate inbox message hash from the input params\"},\"outboxMessageHash(bytes32,uint256,uint256,uint256,address)\":{\"notice\":\"Generate outbox message hash from the input params\"},\"proveGateway(uint256,bytes,bytes)\":{\"notice\":\"It verifies that ERC20Gateway contract exists on origin chain        using merkle account proof.\"},\"setup()\":{\"notice\":\"setup() function is a dummy function for this contract.\"},\"withdraw(uint256,address,uint256,uint256,address)\":{\"notice\":\"It allows withdrawing Utility tokens. Withdrawer needs to      approve erc20 cogateway contract for the amount to be      withdrawn.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/Gen0ERC20Cogateway.sol\":\"Gen0ERC20Cogateway\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/ERC20Cogateway.sol\":{\"keccak256\":\"0xb5e72bd3c39f8badd8495860c9a8be910bf5a7526b8c36badf74a3ccf8732340\",\"urls\":[\"bzz-raw://dff28238e10eb7872c8819605b5b6ef58ac427328c6351f1fa4d99f1d4ce1db6\",\"dweb:/ipfs/QmW3z9SBD3Qa3hCnnVZCzzw8r5WdQNctqZ8N99UnLw6HV5\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/ERC20GatewayBase.sol\":{\"keccak256\":\"0x607f9a25822bebdb0841e1a526a0052d86554b78e1cbf2032b857614b078a383\",\"urls\":[\"bzz-raw://b3e19be410c3d1e9866a0d414743612ad5fccc8ee3b33523d3eae4aaeddbc36e\",\"dweb:/ipfs/QmWWBGUiYHYF8ry6UR7ToYcNwPC3Z4kwUAWEQXwHaFoDz1\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/Gen0ERC20Cogateway.sol\":{\"keccak256\":\"0x119fbfd6cf9c1cdc5c2b390c78c747cc29bd426ba1e6e30516388a11d21483db\",\"urls\":[\"bzz-raw://a48f5657489f7992fb3ecc8388a11225d3956c35ec22247ee63fe0894e6064ac\",\"dweb:/ipfs/QmTQnDV4ThZKUviSohYxTGAWH17x1m7PDjqZXHoZfK8tKD\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/GenesisERC20Cogateway.sol\":{\"keccak256\":\"0x43a2194087bbb6d9a57f406eba5f62ad6dc6aa949353391ae1ff9331a8f7ef83\",\"urls\":[\"bzz-raw://e69f71ec4acff00647b9d3d672d2c47cce9d15ff882967e27385eab4877d18db\",\"dweb:/ipfs/QmbcMeWpf6WgDuzLcuSGvPfW1tMp8cuC8eyDwcmsoJaBdA\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/BytesLib.sol\":{\"keccak256\":\"0xa86099cdff7d8a5b18047fc5008d7bf59608afde751578e0b045c3c27566be59\",\"urls\":[\"bzz-raw://98e8a275feab79dd6072fc7f6c763fa6bc540f20b4adcd4e7803a5b8db0dce23\",\"dweb:/ipfs/QmUB87X6nMTdrbEs7VYTmHcbckaqhvZhz3xJf28GyC1jE7\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/CircularBufferUint.sol\":{\"keccak256\":\"0xa9d4af0caacd760200028696a0e489ba170568fcfae0fc90d93aab1af88e8734\",\"urls\":[\"bzz-raw://7eead9e2e268db6f8144820c293e944420017df2c3caa65f3ce55cb27f3784f7\",\"dweb:/ipfs/QmNnLSJZXR7KLZ9SCTzWsyS8Z7DW4peaaf1f3b76rAJziV\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/MerklePatriciaProof.sol\":{\"keccak256\":\"0x1dee3ebfd376b49493b173bb770b67dd5de59efc1340928f776010c6f5743bbb\",\"urls\":[\"bzz-raw://da4dca85a0c70cb4ba29b74539c82ee91a87b9ce1293a6c20bdcfca0e0059756\",\"dweb:/ipfs/QmQzshWMRCXY1qhhqsaeCQE3yUfrfjxLcyiaU4rw4xzxGf\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/lib/RLP.sol\":{\"keccak256\":\"0x771918fb6df7d35ceca7a040fea7c42a45180bcf9a08826e601587890d626942\",\"urls\":[\"bzz-raw://334cddd5dc47f25210244011532f775a0e55acda674c1ed6ebe71b39fa7005b8\",\"dweb:/ipfs/QmSafCKHyJzer8zWCSPeDRcJNdF9FnMzP4TLXHEHAjV6gz\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageBox.sol\":{\"keccak256\":\"0x927291436edee3b3e08b3621f21ea0f68e71d5f8c3399278524c46fda0e78516\",\"urls\":[\"bzz-raw://8e92a4db303b072fd4d4f9b81dfcdadb136ee57e6c0d1bfb5fb0a75e44d92f06\",\"dweb:/ipfs/QmPcamtsmPWK5zEQq744UvEihszJX1qzQn12v5FmyDbJpR\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageBus.sol\":{\"keccak256\":\"0x7993f6f43f88667c78a887f6d7fefc31bf56137e8f7d6efce4a8524c3039713d\",\"urls\":[\"bzz-raw://ef1f2bcc662d56082018dde3663aab05766d7571363e39bb19992014f18cc309\",\"dweb:/ipfs/QmcdtkHacaW4oSQsZc3mRsLGcsDVznF1YjTyUVabk6JKUU\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageInbox.sol\":{\"keccak256\":\"0x91fa0c1522b9cca52bc9f2f0c081bcb2684f63edc578a189ccab0db6cfa397f3\",\"urls\":[\"bzz-raw://c33639fdb91586cfcad00ebe3b6b102d1bafeae079f360ac28fdaaf5c47ee258\",\"dweb:/ipfs/QmNMLtjiGMSvrGJUrc18231UcXHsiKh6NEvr3r2dSb7jQe\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/MessageOutbox.sol\":{\"keccak256\":\"0xd7e7b38166076e1008a01dee9c6aa7484b9806e41d531f0838a237a5947f2e6f\",\"urls\":[\"bzz-raw://b4ef328a798ad3ad196d1df454301772e0d813d0fbb565c8c9ebafe3dea19fb7\",\"dweb:/ipfs/QmYnwUFdPAcWyGochUFjvDxHdzmr46CPUQFxQTQGeT5SDJ\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/Proof.sol\":{\"keccak256\":\"0x24418a6fa2d6f8a7c3145fd9ab6683c6abf0d557468737fd2128d388b75ea2ee\",\"urls\":[\"bzz-raw://46398046027443a0eb16a73fe6e829cf492a839440cbab9a09656e248dd1471e\",\"dweb:/ipfs/QmWxoLbQcpRMaNsZ9s3HjfL8eRK7BfTZ1eHSvyFxR9b1SN\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/message-bus/StateRootInterface.sol\":{\"keccak256\":\"0x608d1a23dc2c9b3c9b3b14a8792710b8e180001e93fb5c2541b8ac0d8d211592\",\"urls\":[\"bzz-raw://5a6daebf2096689a844b311cdd4ff8a6af57a8170d4d2093d31c47f17d9ace1f\",\"dweb:/ipfs/QmaMPVMmqdZu9AsaNpqK8W2q1nFYXnFDJDYWiNMvxPE9Wt\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/MasterCopyNonUpgradable.sol\":{\"keccak256\":\"0x675eaeceda96f0a2ac02345f61797c120bef572f362309ec58de3b21e321a434\",\"urls\":[\"bzz-raw://3dd3e80d5da6f94166f45b8b9f80fe08c29477ce0f0ee03d08b7b35558bc373e\",\"dweb:/ipfs/QmTkdRqRx8kicDK7GvWQsUK25PPLNE8fvotfhwpLJaECbR\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/Proxy.sol\":{\"keccak256\":\"0x894205a69638f0aa16a7138be257cc360d259e0b768456896dfef14c088013c3\",\"urls\":[\"bzz-raw://01cea74775bb22ff01b1bb4af320cb5984a32955a0952fea1ef92924efcb842a\",\"dweb:/ipfs/QmSx66QbdZfxvRifDQJfo3wAW3G6gHz7TryHKNrXVSsff1\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/proxies/ProxyFactory.sol\":{\"keccak256\":\"0x12d05158dd352937234394ee6c2d7908b652564b821db5b81988cbb1b1d12d88\",\"urls\":[\"bzz-raw://43a8d64d6d9bdd59ccbd0dd18fccf0c8ca380dedf55f37799e2163df447dc0c6\",\"dweb:/ipfs/QmYhHuEdfdgvzsfXqqJd8MXwCjyT49A68pPhmeF4aSJXGW\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/utility-token/UtilityTokenInterface.sol\":{\"keccak256\":\"0x40e7b2c069cd9af8a2dc92728b5ee66a76d768aa77bbd36bea4f461a2a6198df\",\"urls\":[\"bzz-raw://4ad0c808199fbbb40a459fc46a781ffbde0fff8913baea405fd9075c5ffd7396\",\"dweb:/ipfs/QmUiYsgKb3U7jR2p8sz2Qc1ZXQdjHpZXYBsadW3AzE3GW6\"]},\"/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/version/MosaicVersion.sol\":{\"keccak256\":\"0x67b812c975e8c8425f3165b9d911700927100a0ab5a9153beff48dacdea5575f\",\"urls\":[\"bzz-raw://d142fbfbbf062f87c83108d9d074462d14c744658014dc092b5d1500e60e963e\",\"dweb:/ipfs/QmbcDWi6WTwTSs7BoygUXjosGgzMuM8gxmJu5XQFAyFfaQ\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "723:3029:31:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;723:3029:31;;;;;;;",
  "deployedSourceMap": "723:3029:31:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;723:3029:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:414:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1577:414:30;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1250:31:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1638:465:40;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1638:465:40;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1638:465:40;;:::i;1150:31:41:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1150:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:29;;;:::i;:::-;;;;-1:-1:-1;;;;;991:29:41;;;;;;;;;;;;;;4336:351:28;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4336:351:28;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4336:351:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4336:351:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4336:351:28;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4336:351:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4336:351:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;4336:351:28;;-1:-1:-1;4336:351:28;-1:-1:-1;4336:351:28;:::i;:::-;;2421:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2421:49:28;-1:-1:-1;;;;;2421:49:28;;:::i;859:128:37:-;;;:::i;10920:2004:28:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;10920:2004:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10920:2004:28;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10920:2004:28;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;10920:2004:28;;-1:-1:-1;10920:2004:28;-1:-1:-1;10920:2004:28;:::i;1319:44:32:-;;;:::i;6990:1519:28:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;6990:1519:28;;;-1:-1:-1;;;;;6990:1519:28;;;;;;;;;;;;;;;;;;;;;;:::i;1488:166:37:-;;;:::i;972:38:40:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;972:38:40;;:::i;:::-;;;;;;;;;;;;;;;;;;1336:46:39;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1336:46:39;-1:-1:-1;;;;;1336:46:39;;:::i;1103:39::-;;;:::i;1230:38:32:-;;;:::i;1232:47:41:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1232:47:41;;:::i;984:34:32:-;;;:::i;2083:163:28:-;;;:::i;:::-;;;;-1:-1:-1;;;;;;2083:163:28;;;;;;;;;;;;;;1062:39:32;;;:::i;4854:181:28:-;;;:::i;2331:37::-;;;:::i;1975:45::-;;;:::i;1136:27:40:-;;;:::i;1899:694:37:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1899:694:37;;;-1:-1:-1;;;;;1899:694:37;;;;;;;;;;;;:::i;1289:63::-;;;:::i;1395:57::-;;;:::i;3707:43:31:-;;;:::i;1021:37:39:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1021:37:39;;:::i;912:33:32:-;;;:::i;2325:480:30:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2325:480:30;;;;;;;;;;;;;;;;;;;;;;:::i;1218:47:40:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1218:47:40;-1:-1:-1;;;;;1218:47:40;;:::i;1067:43:41:-;;;:::i;2172:1160:31:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2172:1160:31;;;-1:-1:-1;;;;;2172:1160:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1753:463:39:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1753:463:39;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1753:463:39;;:::i;1150:41:32:-;;;:::i;948:145:30:-;;;:::i;1183:28:39:-;;;:::i;1056:40:40:-;;;:::i;1100:168:30:-;;;:::i;1054:172:37:-;;;:::i;1878:46:28:-;;;:::i;1577:414:30:-;1739:26;998:95;;;;;;;;;;;;;;;;;;;1825:149;;;;;;;;-1:-1:-1;;;;;1825:149:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1825:149:30;;;;;;;-1:-1:-1;1802:182:30;;;;;;1577:414;-1:-1:-1;1577:414:30:o;1250:31:39:-;;;-1:-1:-1;;;1250:31:39;;;;;:::o;1638:465:40:-;1856:20;1907:189;1943:11;1968:6;1988:12;2014;2040:7;2061:25;;1907:22;:189::i;:::-;1892:204;1638:465;-1:-1:-1;;;;;;1638:465:40:o;1150:31:41:-;;;;;;;;;;;;;;;-1:-1:-1;;1150:31:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;991:29::-;;;-1:-1:-1;;;;;991:29:41;;:::o;4336:351:28:-;4501:122;4547:12;4573:11;;4501:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4501:122:28;;;;137:4:-1;4501:122:28;;;;;;;;;;;;;;;;;;-1:-1:-1;4598:15:28;;-1:-1:-1;4598:15:28;;;;4501:122;;4598:15;;;;4501:122;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4501:32:28;;-1:-1:-1;;;4501:122:28:i;:::-;4653:12;;4639:41;;;-1:-1:-1;;;;;4653:12:28;;;4639:41;;;;;;;;;;;;;;;;;;;;4336:351;;;;;:::o;2421:49::-;;;;;;;;;;;;-1:-1:-1;;;;;2421:49:28;;:::o;859:128:37:-;906:81;;;;;;;;;;;;;;;;;;859:128;:::o;10920:2004:28:-;11235:20;11271:18;11292:9;11271:30;-1:-1:-1;;;;;;11333:25:28;;11312:106;;;;-1:-1:-1;;;11312:106:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11449:12;11428:88;;;;;-1:-1:-1;;;11428:88:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11547:26:28;;11526:107;;;;-1:-1:-1;;;11526:107:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11664:24:28;;11643:103;;;;;-1:-1:-1;;;11643:103:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11757:20;11780:28;11796:11;11780:15;:28::i;:::-;-1:-1:-1;;;;;11835:36:28;;11819:13;11835:36;;;:24;:36;;;;;;11757:51;;-1:-1:-1;11920:12:28;11835:36;11930:1;11920:12;:9;:12;:::i;:::-;-1:-1:-1;;;;;11881:36:28;;;;;;:24;:36;;;;;:51;11958:333;11999:132;12051:11;12080:7;12105:12;11999:34;:132::i;:::-;12145:5;12164:12;12190;12216:10;12240:12;12266:15;;11958:333;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;11958:27:28;;-1:-1:-1;;;11958:333:28:i;:::-;11943:348;;12516:17;12536:124;12573:25;12588:9;12573:10;;:25;:14;:25;:::i;:::-;12612:12;12638;12536:23;:124::i;:::-;12516:144;-1:-1:-1;12671:18:28;12692:22;:7;12516:144;12692:22;:11;:22;:::i;:::-;12725:63;;;-1:-1:-1;;;12725:63:28;;12766:10;12725:63;;;;;;;;;;;;12671:43;;-1:-1:-1;;;;;;12725:40:28;;;;;:63;;;;;-1:-1:-1;;12725:63:28;;;;;;;;-1:-1:-1;12725:40:28;:63;;;5:2:-1;;;;30:1;27;20:12;5:2;12725:63:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12725:63:28;;;;12821:12;-1:-1:-1;;;;;12799:40:28;;12840:12;12854:10;12799:66;;;;;;;;;;;;;-1:-1:-1;;;;;12799:66:28;-1:-1:-1;;;;;12799:66:28;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12799:66:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;12881:36:28;;;;;;;;;;-1:-1:-1;12881:36:28;;;;;;;-1:-1:-1;12881:36:28;10920:2004;;;;;;;;;;;;;;;;:::o;1319:44:32:-;;;;;;-1:-1:-1;;;;;1319:44:32;;:::o;6990:1519:28:-;7207:20;-1:-1:-1;;;;;7264:36:28;;7243:119;;;;-1:-1:-1;;;7243:119:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7393:26:28;;7372:107;;;;-1:-1:-1;;;7372:107:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7520:30;:12;7537;7520:30;:16;:30;:::i;:::-;7510:7;:40;7489:139;;;;-1:-1:-1;;;7489:139:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:18;7660:13;-1:-1:-1;;;;;7660:24:28;;:26;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7660:26:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7660:26:28;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7660:26:28;;-1:-1:-1;7696:26:28;7725:152;7660:26;7806:13;7834:7;7855:12;7725:35;:152::i;:::-;7931:10;7888:13;7904:38;;;:26;:38;;;;;;7696:181;;-1:-1:-1;7993:12:28;7904:38;8003:1;7993:12;:9;:12;:::i;:::-;7979:10;7952:38;;;;:26;:38;;;;;:53;;;;8031:165;;8073:18;;8105:5;;8124:12;;8150;;8031:28;:165::i;:::-;8207:43;;;-1:-1:-1;;;8207:43:28;;8230:10;8207:43;;;;;;;;;;;;8016:180;;-1:-1:-1;;;;;;8207:22:28;;;;;:43;;;;;-1:-1:-1;;8207:43:28;;;;;;;;-1:-1:-1;8207:22:28;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;8207:43:28;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;8266:236:28;;;;;;;;;;;;-1:-1:-1;;;;;8266:236:28;;;;;;;;;;;;;;;;;;;8420:10;8266:236;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8266:236:28;;;;;;;-1:-1:-1;8266:236:28;6990:1519;;;;;;;;;;:::o;1488:166:37:-;1531:123;;;;;;;;;;;;;;;;;;1488:166;:::o;972:38:40:-;;;;;;;;;;;;;;;:::o;1336:46:39:-;;;;;;;;;;;;;:::o;1103:39::-;;;;:::o;1230:38:32:-;;;;;;:::o;1232:47:41:-;;;;;;;;;;;;;:::o;984:34:32:-;;;-1:-1:-1;;;;;984:34:32;;:::o;2083:163:28:-;2155:85;;;;;;;;;;;;;;;;;;2083:163;:::o;1062:39:32:-;;;-1:-1:-1;;;;;1062:39:32;;:::o;4854:181:28:-;4952:20;5003:25;:23;:25::i;:::-;4988:40;;4854:181;:::o;2331:37::-;;;-1:-1:-1;;;;;2331:37:28;;:::o;1975:45::-;2018:1;1975:45;:::o;1136:27:40:-;;;-1:-1:-1;;;;;1136:27:40;;:::o;1899:694:37:-;2060:26;2102:24;906:81;;;;;;;;;;;;;;;;;;;2152:111;;;;;;;;-1:-1:-1;;;;;2152:111:37;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2152:111:37;;;;;;;;2129:144;;;;;;;;;-1:-1:-1;2152:111:37;-1:-1:-1;2152:111:37;1110:116;;2152:111;1110:116;;;;;;;;;;;;2411:25;;;;;;;;;;;;;-1:-1:-1;;;2411:25:37;;;2458:28;;;;;;;;;;;;;-1:-1:-1;;;2458:28:37;;;2508:12;2542:16;2328:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2328:248:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2328:248:37;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2328:248:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2328:248:37;;;2305:281;;;;;;2284:302;;1899:694;;;;;;:::o;1289:63::-;;;;;;;;;;;;;;-1:-1:-1;;;1289:63:37;;;;:::o;1395:57::-;;;;;;;;;;;;;;-1:-1:-1;;;1395:57:37;;;;:::o;3707:43:31:-;:::o;1021:37:39:-;;;;;;;;;;;;;;;:::o;912:33:32:-;;;;:::o;2325:480:30:-;2519:27;1151:117;;;;;;;;;;;;;;;;;;;2607:181;;;;;;;;-1:-1:-1;;;;;2607:181:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2607:181:30;;;;;;;-1:-1:-1;;2584:214:30;;;;;;2325:480::o;1218:47:40:-;;;;;;;;;;;;;:::o;1067:43:41:-;;;-1:-1:-1;;;;;1067:43:41;;:::o;2172:1160:31:-;2446:26;2438:57;;;;;-1:-1:-1;;;2438:57:31;;;;;;;;;;;;-1:-1:-1;;;2438:57:31;;;;;;;;;;;;;;;-1:-1:-1;;;;;2513:27:31;;2505:70;;;;;-1:-1:-1;;;2505:70:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2606:32:31;;2585:114;;;;-1:-1:-1;;;2585:114:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:34;2709:114;;;;-1:-1:-1;;;2709:114:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:37:31;;2833:134;;;;-1:-1:-1;;;2833:134:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2978:18;:33;;;3021:19;:35;;-1:-1:-1;;;;;;3021:35:31;;;-1:-1:-1;;;;;3021:35:31;;;;;;;;;;3066:24;:45;;;;;;;;;;;3121:26;:49;;;3180:25;:47;;-1:-1:-1;;3180:47:31;;;;;-1:-1:-1;;;;;;3237:55:31;3021:35;3237:55;;;;;;;;;;;;;3303:22;:20;:22::i;:::-;2172:1160;;;;;;:::o;1753:463:39:-;1970:20;2021:188;2057:11;2082:6;2102:12;2128;2154:7;2175:24;;2021:22;:188::i;1150:41:32:-;;;;:::o;948:145:30:-;998:95;;;;;;;;;;;;;;;;;;948:145;:::o;1183:28:39:-;;;-1:-1:-1;;;;;1183:28:39;;:::o;1056:40:40:-;;;;:::o;1100:168:30:-;1151:117;;;;;;;;;;;;;;;;;;1100:168;:::o;1054:172:37:-;1110:116;;;;;;;;;;;;;;;;;;1054:172;:::o;1878:46:28:-;1922:1;1878:46;:::o;3010:788:37:-;3258:20;3294:24;1531:123;;;;;;;;;;;;;;;;;;;;;3344:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3344:196:37;;;;;;;-1:-1:-1;;;;;3344:196:37;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3344:196:37;;;;;3321:229;;;;;;-1:-1:-1;;;3599:182:37;;;;-1:-1:-1;;;3599:182:37;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3599:182:37;;;;;;;3576:215;;;;;;3010:788::o;5171:290:39:-;5339:115;5378:12;5404:11;5429:15;5339:25;:115::i;:::-;5171:290;;;:::o;13632:885:28:-;-1:-1:-1;;;;;13778:26:28;;;13725:21;13778:26;;;:13;:26;;;;;;;13818:27;13815:696;;13861:38;2155:85;;;;;;;;;;;;;;;;;;;14036:1;13902:238;;;;;;;;;;;;14092:4;13902:238;;;;-1:-1:-1;;;;;13902:238:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;13902:238:28;22:32:-1;6:49;;13902:238:28;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;13902:238:28;;;179:29:-1;;;;160:49;;14229:22:28;;13902:238;;-1:-1:-1;14196:120:28;;-1:-1:-1;14229:22:28;13902:238;14196:11;:120::i;:::-;-1:-1:-1;;;;;14345:26:28;;;;;;;:13;:26;;;;;;;;;:42;;-1:-1:-1;;;;;;14345:42:28;;;;;;;;;14407:93;;;;;;;;;;;;;14345:42;;-1:-1:-1;14407:93:28;;;;;;;;;;;13815:696;;13632:885;;;:::o;1431:145:106:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;-1:-1:-1;1431:145:106;;;;;:::o;6262:1008:39:-;6532:20;6583:188;6619:11;6644:6;6664:12;6690;6716:7;6737:24;;6583:22;:188::i;:::-;6803:19;;;;:5;:19;;;;;;6568:203;;-1:-1:-1;6803:19:39;;:28;6782:111;;;;-1:-1:-1;;;6782:111:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6904:19;;;;:5;:19;;;;;:26;;-1:-1:-1;;6904:26:39;6926:4;6904:26;;;7041:18;;6990:17;;7010:85;;-1:-1:-1;;;7041:18:39;;6904:26;7041:18;6910:12;7010:17;:85::i;:::-;7175:22;;;-1:-1:-1;;;7175:22:39;;;;;;;;;;26:21:-1;;;7192:4:39;22:32:-1;6:49;;7175:22:39;;;;;;;7165:33;;;;;6990:105;;-1:-1:-1;7106:157:39;;6990:105;;7212:12;7238:15;7106:27;:157::i;:::-;6262:1008;;;;;;;;;;:::o;1205:145:106:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:106;;;1205:145::o;3153:381:30:-;3311:21;3366:12;3351;:27;3348:180;;;3410:30;:12;3427;3410:30;:16;:30;:::i;:::-;3394:46;;3348:180;;;3487:30;:12;3504;3487:30;:16;:30;:::i;:::-;3471:46;;3348:180;3153:381;;;;;:::o;229:421:106:-;287:7;527:6;523:45;;-1:-1:-1;556:1:106;549:8;;523:45;590:5;;;594:1;590;:5;:1;613:5;;;;;:10;605:19;;;;;3888:611:40;4090:20;4141:189;4177:11;4202:6;4222:12;4248;4274:7;4295:25;;4141:22;:189::i;:::-;4362:20;;;;:6;:20;;;;;;4126:204;;-1:-1:-1;4362:20:40;;:29;4341:113;;;;-1:-1:-1;;;4341:113:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4465:20;;;;:6;:20;;;;;:27;;-1:-1:-1;;4465:27:40;4488:4;4465:27;;;4472:12;3888:611;-1:-1:-1;;;;;3888:611:40:o;3134:90:34:-;3172:13;3205:5;3211;;3205:12;;;;;;;;;;;;;;;;3197:20;;3134:90;:::o;:478:28:-;3226:18;;3258:19;;3180:107;;3226:18;-1:-1:-1;;;;;3258:19:28;3180:32;:107::i;:::-;3342:18;;3374:19;;3407:25;;3465:24;;3504:26;;3298:242;;3342:18;-1:-1:-1;;;;;3374:19:28;;;;3407:25;;;3465:24;;3298:30;:242::i;:::-;3576:29;;3551:22;:54;;3576:29;;;;-1:-1:-1;;;;;3576:29:28;-1:-1:-1;;;;;;3551:54:28;;;;;;;;;3134:478::o;3852:1286:41:-;4080:18;;4059:106;;;;-1:-1:-1;;;4059:106:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4240:22;;4219:105;;;;;-1:-1:-1;;;4219:105:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;4355:17;;:44;;;-1:-1:-1;;;4355:44:41;;;;;;;;;;4335:17;;-1:-1:-1;;;;;4355:17:41;;:30;;:44;;;;;;;;;;;;;;:17;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;4355:44:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4355:44:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4355:44:41;;-1:-1:-1;4492:23:41;4471:97;;;;;-1:-1:-1;;;4471:97:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;4633:25;4661:26;;;:12;:26;;;;;;4702:31;4698:434;;4863:18;4771:151;;;;;;;;;;;;;-1:-1:-1;;4771:151:41;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4771:151:41;;4801:11;;4830:15;;4771:151;4863:18;4771:151;;4863:18;4771:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:9;4771:12;:151::i;:::-;4937:26;;;;:12;:26;;;;;:40;;;4749:173;;-1:-1:-1;5025:38:41;4950:12;5025:24;:38::i;:::-;5084:37;;;;:12;:37;;;;;5077:44;-1:-1:-1;;4698:434:41;3852:1286;;;;;:::o;663:425:56:-;757:11;802:10;792:21;;;;;:::i;:::-;-1:-1:-1;;;;;792:21:56;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;827:11:56;;784:29;;-1:-1:-1;827:15:56;823:224;;1014:1;1010;1007;1000:4;994:11;987:4;981;977:15;974:1;967:5;962:3;957:55;954:62;951:2;;;1029:1;1026;1019:12;951:2;1061:20;;;-1:-1:-1;;;;;1061:20:56;;;;;;;;;;;;;;;663:425;;;;:::o;6721:594:41:-;6838:25;;6905:89;6935:49;6967:15;;;6935:23;:49::i;:::-;6905:16;:89::i;:::-;6879:115;;7005:21;7029:47;7046:29;7070:4;7046:23;:29::i;7029:47::-;7005:71;;7086:17;7106:37;7122:8;7132:10;7106:15;:37::i;:::-;7086:57;;7169:139;7277:4;7260:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7260:22:41;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7260:22:41;;;7250:33;;;;;;7233:51;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7233:51:41;;;7206:92;;;;;;7169:23;:139::i;5626:833::-;5892:22;;5871:106;;;;;-1:-1:-1;;;5871:106:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:19;6039:26;;;:12;:26;;;;;;6096:25;6075:101;;;;;-1:-1:-1;;;6075:101:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;6244:149;6288:6;6312:5;6335:15;6368:11;6244:26;:149::i;:::-;6223:229;;;;-1:-1:-1;;;6223:229:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2719:664:40;2866:25;;:39;2845:118;;;;;-1:-1:-1;;;2845:118:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2995:26;2974:91;;;;;-1:-1:-1;;;2974:91:40;;;;;;;;;;;;-1:-1:-1;;;2974:91:40;;;;;;;;;;;;;;;-1:-1:-1;;;;;3097:27:40;;3076:101;;;;;-1:-1:-1;;;3076:101:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:12;:28;;-1:-1:-1;;;;;;3188:28:40;-1:-1:-1;;;;;3188:28:40;;;;;;;;;;;3255:121;;3301:12;;3335:4;;3354:12;3255:32;:121::i;:::-;3227:25;:149;-1:-1:-1;;2719:664:40:o;3393:1319:39:-;3660:24;;:38;3639:116;;;;;-1:-1:-1;;;3639:116:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;3787:26;3766:91;;;;;-1:-1:-1;;;3766:91:39;;;;;;;;;;;;-1:-1:-1;;;3766:91:39;;;;;;;;;;;;;;;-1:-1:-1;;;;;3889:28:39;;3868:95;;;;;-1:-1:-1;;;3868:95:39;;;;;;;;;;;;-1:-1:-1;;;3868:95:39;;;;;;;;;;;;;;;-1:-1:-1;;;;;3995:41:39;;3974:121;;;;-1:-1:-1;;;3974:121:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4106:13;:30;;-1:-1:-1;;;;;;4106:30:39;-1:-1:-1;;;;;4106:30:39;;;;;;;-1:-1:-1;;;;4146:40:39;-1:-1:-1;;;4146:40:39;;;;;;;;;4224:122;;4270:12;;4296:13;4331:4;4224:32;:122::i;:::-;4197:24;:149;4585:120;4615:14;4643:18;4675:20;4585:16;:120::i;7741:1086:41:-;7950:20;8031:30;;:::i;:::-;8064:26;8078:11;8064:13;:26::i;:::-;8031:59;;8129:33;8165:23;8176:11;8165:10;:23::i;:::-;8129:59;;8261:30;8275:12;8288:1;8275:15;;;;;;;;;;;;;;8261:13;:30::i;:::-;8246:45;;8338:21;8402:11;8385:29;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8385:29:41;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8385:29:41;;;8362:62;;;;;;8338:86;;8602:162;8646:13;8677:12;8707:15;8740:10;8602:26;:162::i;:::-;8581:239;;;;;-1:-1:-1;;;8581:239:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;7741:1086;;;;;;;;;:::o;2667:306:34:-;2714:24;2750:11;:9;:11::i;:::-;2924:5;2930;;2924:12;;;;;;;;;;;;;;;;2905:31;;2961:5;2946;2952;;2946:12;;;;;;;;;;;;;;;;;:20;2667:306;;-1:-1:-1;2667:306:34:o;3966:272:33:-;4101:13;;;4111:2;4101:13;;;;;;;;;4057:19;;4101:13;;;21:6:-1;;104:10;4101:13:33;87:34:-1;-1:-1;;;4198:2:33;4194:15;;4187:35;;;;-1:-1:-1;4194:15:33;4173:59::o;3587:237::-;3686:20;3722;3760:6;:13;3755:2;:18;3745:29;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;3745:29:33;87:34:-1;135:17;;-1:-1;3745:29:33;;3722:52;;3794:23;3801:7;3810:6;644:2900;770:19;1010:4;1004:11;994:21;;1164:9;1158:16;1202:6;1194;1187:22;1441:4;1433:6;1429:17;1590:6;1586:2;1582:15;1784:4;1773:9;1769:20;1611:522;1811:3;1807:2;1804:11;1611:522;;;2109:9;;2098:21;;1918:4;1910:13;;;;1946;1611:522;;;-1:-1:-1;2338:17:33;;2395:13;;2383:26;;2368:42;;2338:17;-1:-1:-1;2554:3:33;-1:-1:-1;2691:15:33;;;2768:4;2752:21;;2720:221;2795:3;2791:2;2788:11;2720:221;;;2917:9;;2906:21;;2832:4;2824:13;;;;2860;2720:221;;;2724:63;3471:2;3467:7;3448:2;3433:9;3427:16;3419:6;3415:29;3408:37;3403:3;3399:47;3395:56;3376:151;3370:4;3363:165;853:2685;;;;;;;:::o;567:2344:35:-;752:4;772:23;;:::i;:::-;798:29;812:14;798:13;:29::i;:::-;772:55;;837:32;872:16;883:4;872:10;:16::i;:::-;837:51;-1:-1:-1;899:24:35;;998:4;980:15;899:24;1059:29;1076:11;1059:16;:29::i;:::-;1039:49;;1101:4;:11;1116:1;1101:16;1098:36;;;1127:5;1120:12;;;;;;;;;;;1098:36;1149:6;1144:1761;1165:11;:18;1161:1;:22;1144:1761;;;1217:4;:11;1207:7;:21;1204:41;;;1238:5;1231:12;;;;;;;;;;;;1204:41;1273:27;1285:11;1297:1;1285:14;;;;;;;;;;;;;;1273:11;:27::i;:::-;1259:41;;1355:11;1338:29;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1338:29:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1338:29:35;;;1328:40;;;;;;1317:7;:51;1314:71;;1378:5;1371:12;;;;;;;;;;;;1314:71;1416:26;1427:11;1439:1;1427:14;;;;;;;;;;;;;;1416:10;:26::i;:::-;1398:44;;1460:15;:22;1486:2;1460:28;1457:1438;;;1522:4;:11;1511:7;:22;1508:269;;;1625:5;1587:32;1599:15;1615:2;1599:19;;;;;;;1587:32;1570:50;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1570:50:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1570:50:35;;;1560:61;;;;;;:70;1557:202;;;1665:4;1658:11;;;;;;;;;;;;1557:202;1731:5;1724:12;;;;;;;;;;;;1557:202;1795:20;1824:4;1829:7;1824:13;;;;;;;;;;;;;;;-1:-1:-1;1876:2:35;1859:19;;1856:39;;;1888:5;1881:12;;;;;;;;;;;;;1856:39;1922:46;1936:15;1952:14;1936:31;;;;;;;;;1922:46;1912:56;;1997:1;1986:12;;;;1457:1438;;;;2022:15;:22;2048:1;2022:27;2019:876;;;2155:19;2177:65;2196:30;2207:15;2223:1;2207:18;;;;;;;;;;;;;;2196:10;:30::i;:::-;2228:4;2234:7;2177:18;:65::i;:::-;2155:87;;2292:4;:11;2274:14;2264:7;:24;:39;2261:568;;;2405:5;2369:30;2380:15;2396:1;2380:18;;;;;;;2369:30;2352:48;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2352:48:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2352:48:35;;;2342:59;;;;;;:68;2339:200;;;2445:4;2438:11;;;;;;;;;;;;;2339:200;2511:5;2504:12;;;;;;;;;;;;;2261:568;2567:19;2563:266;;2650:5;2643:12;;;;;;;;;;;;;2563:266;2731:14;2720:25;;;;2777:33;2791:15;2807:1;2791:18;;;;;;;2777:33;2767:43;;2019:876;;1185:3;;1144:1761;;;;567:2344;;;;;;;;;;;;;;:::o;2271:870:41:-;2521:17;;-1:-1:-1;;;;;2521:17:41;2513:40;2492:109;;;;;-1:-1:-1;;;2492:109:41;;;;;;;;;;;;-1:-1:-1;;;2492:109:41;;;;;;;;;;;;;;;-1:-1:-1;;;;;2633:29:41;;2612:105;;;;;-1:-1:-1;;;2612:105:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2749:41:41;;2728:121;;;;-1:-1:-1;;;2728:121:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:60;2899:20;2860:38;:60::i;:::-;2931:14;:32;;-1:-1:-1;;;;;2931:32:41;;;-1:-1:-1;;;;;;2931:32:41;;;;;;;2973:17;:38;;;;;;;;;;;;;;;3090:33;;;-1:-1:-1;;3090:33:41;;;;;;;;;;;;;;;26:21:-1;;;3090:33:41;22:32:-1;6:49;;3090:33:41;;;;;;;3080:44;;;;;3043:91;;:23;:91::i;:::-;3022:112;;;;:18;;:112;;;;;;:::i;:::-;;2271:870;;;:::o;1934:392:36:-;2033:14;;:::i;:::-;2074:11;;2099:8;2095:59;;-1:-1:-1;;2130:13:36;;;;;;;;;-1:-1:-1;2130:13:36;;;;;;;2123:20;;2095:59;2299:20;;;;;;;;;2267:4;2257:15;;;2299:20;;;;;;-1:-1:-1;2299:20:36;1934:392::o;7102:402::-;7200:22;7246:12;7253:4;7246:6;:12::i;:::-;7238:21;;;;;;7269:13;7285:11;7291:4;7285:5;:11::i;:::-;7269:27;;7328:8;7314:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7306:31;;7347:18;;:::i;:::-;7368:14;7377:4;7368:8;:14::i;:::-;7347:35;-1:-1:-1;7392:8:36;7414:84;7420:11;7428:2;7420:7;:11::i;:::-;7414:84;;;7460:8;7465:2;7460:4;:8::i;:::-;7447:5;7453:3;7447:10;;;;;;;;;;;;;;;;;:21;7482:5;;7414:84;;;7102:402;;;;;;:::o;10395:164::-;10496:12;10539;10546:4;10539:6;:12::i;3495:123:34:-;3534:5;:7;;;;;;;;3564:5;:12;3555:21;3551:61;;;3600:1;3592:5;:9;3495:123::o;4707:295:35:-;4809:21;4867:1;:8;4876:1;4867:10;4857:21;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;4857:21:35;87:34:-1;135:17;;-1:-1;4857:21:35;-1:-1:-1;4846:32:35;-1:-1:-1;4893:6:35;4888:108;4909:8;:15;4905:1;:19;4888:108;;;4959:26;4980:1;4983;4959:20;:26::i;:::-;4945:8;4954:1;4945:11;;;;;;;;;;;:40;-1:-1:-1;;;;;4945:40:35;;;;;;;;-1:-1:-1;4926:3:35;;4888:108;;;;4707:295;;;:::o;6034:313:36:-;6177:19;;;;6133:17;;6210:8;6206:50;;-1:-1:-1;6234:11:36;;6206:50;6282:3;6272:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;6272:14:36;87:34:-1;135:17;;-1:-1;6272:14:36;;6265:21;;6296:44;6309:4;:19;;;6330:4;6336:3;6296:12;:44::i;6534:318::-;6632:17;6673:12;6680:4;6673:6;:12::i;:::-;6665:21;;;;;;6696:14;6720:8;6757:13;6765:4;6757:7;:13::i;:::-;6787:14;;;;;;-1:-1:-1;;6787:14:36;;;;;;;;;;;6738:32;;-1:-1:-1;6738:32:36;-1:-1:-1;6738:32:36;6787:14;;;;;;;21:6:-1;;104:10;6787:14:36;87:34:-1;135:17;;-1:-1;6787:14:36;;6780:21;;6811:34;6824:9;6835:4;6841:3;6811:12;:34::i;:::-;6534:318;;;;;:::o;2917:959:35:-;3087:9;3297:24;3324:35;3340:18;3324:15;:35::i;:::-;3297:62;;3369:23;3405:11;:18;3395:29;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;3395:29:35;87:34:-1;135:17;;-1:-1;3395:29:35;-1:-1:-1;3369:55:35;-1:-1:-1;3541:7:35;3530:153;3560:11;:18;3552:7;:26;3550:1;:28;3530:153;;;3599:15;3617:4;3622:1;3617:7;;;;;;;;;;;;;;;;3599:25;;3662:10;3638;3651:7;3649:1;:9;3638:21;;;;;;;;;;;:34;-1:-1:-1;;;;;3638:34:35;;;;;;;;-1:-1:-1;;3580:3:35;;3530:153;;;;3767:10;3750:28;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3750:28:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3750:28:35;;;3740:39;;;;;;3723:11;3706:29;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3706:29:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3706:29:35;;;3696:40;;;;;;:83;3693:177;;;3802:11;:18;3795:25;;3693:177;;;3858:1;3851:8;;3693:177;2917:959;;;;;;;:::o;1840:361:34:-;1941:1;1929:9;:13;1908:137;;;;-1:-1:-1;;;1908:137:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:5;:12;:17;2056:103;;;;-1:-1:-1;;;2056:103:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:9;2170:24;:5;2185:9;2170:24;:::i;:::-;;1840:361;:::o;3417:325:36:-;3477:8;3501:4;:19;;;3524:1;3501:24;3497:67;;;-1:-1:-1;3548:5:36;3541:12;;3497:67;-1:-1:-1;3587:19:36;3704:13;3720:4;3573:11;3696:22;;;;3693:32;3686:40;;3665:71::o;4921:543::-;4980:4;5001:12;5008:4;5001:6;:12::i;:::-;4996:52;;-1:-1:-1;5036:1:36;5029:8;;4996:52;5088:19;;5194:13;;5057:7;5186:22;;;;5088:19;5247:20;5088:4;5247:14;:20::i;:::-;5298:19;;;;5238:29;;;;-1:-1:-1;5289:28:36;;-1:-1:-1;;5289:32:36;5277:9;5350:87;5363:4;5356:3;:11;5350:87;;5390:16;5402:3;5390:11;:16::i;:::-;5383:23;;;;5420:6;;5350:87;;5606:295;5706:19;;:::i;:::-;5750:12;5757:4;5750:6;:12::i;:::-;5741:22;;;;;;5773:8;5806:20;5821:4;5806:14;:20::i;:::-;5784:19;;5836:23;;;5784:42;;;5869:19;;;:25;5836:3;5606:295;-1:-1:-1;5606:295:36:o;1540:205::-;1602:4;1618:19;;:::i;:::-;-1:-1:-1;;1640:17:36;;1719:19;;;;;1697;;1674:20;;;1697:41;;-1:-1:-1;;1540:205:36:o;907:384::-;1004:23;;:::i;:::-;1051:13;1059:4;1051:7;:13::i;:::-;1043:22;;;;;;1086:20;;;;1075:8;1134:16;1086:20;1134:11;:16::i;:::-;1160:29;;;1199:23;;;;:36;;;1268:16;;1245:20;;;;:39;;;;1160:8;907:384;-1:-1:-1;907:384:36:o;8267:398::-;8327:10;8357:12;8364:4;8357:6;:12::i;:::-;8349:21;;;;;;8380:14;8404:8;8441:13;8449:4;8441:7;:13::i;:::-;8422:32;;-1:-1:-1;8422:32:36;-1:-1:-1;8474:2:36;8468:8;;;:20;;-1:-1:-1;8480:8:36;;8468:20;8464:59;;;8504:8;;;8464:59;8643:3;8639:2;8635:12;8630:3;8626:22;8614:9;8608:16;8604:45;8595:54;;8581:78;;;;;:::o;5008:208:35:-;5124:4;5158:1;5156;:3;:6;:52;;5204:4;5194:3;5200:1;5198;:3;5194:8;;;;;;;;;;;;;;5188:20;;;;;;5156:52;;;5181:4;5171:3;5177:1;5175;:3;5171:8;;;;;;;;;;;;;;5165:20;;;;;;5156:52;5151:58;;;5008:208;-1:-1:-1;;;5008:208:35:o;14671:698:36:-;15032:1;15103:2;15095:6;15091:15;15138:6;15185:2;15180:3;15176:12;15205:148;15218:10;15215:1;15212:17;15205:148;;;15331:1;15322:7;15318:15;15312:22;15308:1;15299:7;15295:15;15288:47;15244:2;15241:1;15237:10;15232:15;;15205:148;;;15005:358;;;;;;;:::o;3894:317::-;3954:8;3978:4;:19;;;4001:1;3978:24;3974:67;;;-1:-1:-1;4025:5:36;4018:12;;3974:67;-1:-1:-1;4064:19:36;4174:13;4190:4;4050:11;4166:22;;;;4163:32;;4142:63::o;13540:861::-;13638:12;13652:9;13685:12;13692:4;13685:6;:12::i;:::-;13677:21;;;;;;13738:19;;13844:12;;13708:7;13836:21;;253:4;13880:21;;13876:126;;;13927:5;-1:-1:-1;13953:1:36;;-1:-1:-1;13969:22:36;;-1:-1:-1;13969:22:36;13876:126;295:4;14015:2;:20;14011:384;;;14080:1;14058:4;:19;;;:23;14051:30;;14105:5;14113:1;14105:9;14095:19;;14011:384;;;14314:19;;;;14368:12;;;-1:-1:-1;;14368:16:36;;-1:-1:-1;14314:30:36;;;;;;-1:-1:-1;14011:384:36;13540:861;;;;;;:::o;3916:742:35:-;4057:8;;4017:21;;4057:10;4054:598;;4083:12;4109:14;4132:25;4153:1;4155;4132:20;:25::i;:::-;4126:32;;;-1:-1:-1;4187:1:35;4175:13;;;:30;;;4192:8;:13;;4204:1;4192:13;4175:30;4172:332;;;4257:1;4246;:8;4255:1;4246:10;:12;4236:23;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;4236:23:35;87:34:-1;135:17;;-1:-1;4236:23:35;;4225:34;;4277:14;4294:25;4315:1;4317;4294:20;:25::i;:::-;4277:42;;4351:9;4337:8;4346:1;4337:11;;;;;;;;;;;:23;-1:-1:-1;;;;;4337:23:35;;;;;;;;;4387:1;4378:10;;4172:332;;;;4459:1;4448;:8;4457:1;4448:10;:12;4438:23;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;4438:23:35;87:34:-1;135:17;;-1:-1;4438:23:35;;4427:34;;4488:1;4479:10;;4172:332;4522:13;;;4518:124;4539:8;:15;4537:1;:17;4518:124;;;4593:34;4616:6;4614:8;;:1;:8;4623:1;4614:10;4625:1;4593:20;:34::i;:::-;4579:8;4588:1;4579:11;;;;;;;;;;;:48;-1:-1:-1;;;;;4579:48:35;;;;;;;;-1:-1:-1;4556:3:35;;4518:124;;11366:594:36;11433:4;11452;:19;;;11475:1;11452:24;11449:49;;;-1:-1:-1;11497:1:36;11490:8;;11449:49;11539:19;;11645:13;;11508:7;11637:22;;253:4;11681:21;;11678:46;;;11723:1;11716:8;;;;;;11678:46;295:4;11737:2;:20;:72;;;;338:4;11762:2;:22;;:46;;;;;380:4;11788:2;:20;11762:46;11734:97;;;11830:1;11823:8;;;;;;11734:97;338:4;11844:2;:21;11841:70;;;-1:-1:-1;;;11886:25:36;;-1:-1:-1;11879:32:36;;11841:70;-1:-1:-1;;;11928:25:36;;11366:594;-1:-1:-1;;11366:594:36:o;12185:1135::-;12355:13;;12241:8;;12347:22;;253:4;12392:21;;12388:926;;;12435:1;12429:7;;12388:926;;;295:4;12457:2;:20;12453:861;;;-1:-1:-1;;12499:25:36;;;-1:-1:-1;12453:861:36;;;338:4;12545:2;:21;12541:773;;;12763:1;12751:14;;12745:21;12672:4;12781:2;12777:13;;;;12772:3;12768:23;12741:51;;12838:15;;-1:-1:-1;;12831:23:36;;-1:-1:-1;12634:250:36;;;380:4;12904:2;:20;12900:414;;;-1:-1:-1;;12946:25:36;;;-1:-1:-1;12900:414:36;;;13183:1;13171:14;;;;13165:21;13092:4;13201:2;13197:13;;;;13192:3;13188:23;13161:51;;13258:15;;;-1:-1:-1;;13251:23:36;;12185:1135;-1:-1:-1;12185:1135:36:o;723:3029:31:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;723:3029:31;;;-1:-1:-1;723:3029:31;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\n// Copyright 2020 OpenST Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport \"./ERC20Cogateway.sol\";\n\n/**\n * @title Implements ERC20Cogateway contract for gen0 chains.\n */\ncontract Gen0ERC20Cogateway is ERC20Cogateway {\n\n    /* External Functions */\n\n    /**\n     * @notice activate() function activates the contract.\n     *\n     * @dev The function sets corresponding genesis* variables inherited\n     *      from GenesisERC20Cogateway contract and calls the parent class\n     *      ERC20Cogateway::setup() function to activate the gateway.\n     *\n     * \\pre `_metachainId` is not 0.\n     * \\pre `_erc20Gateway` is not 0.\n     * \\pre `_stateRootProvider` is not 0.\n     * \\pre `_maxStorageRootItems` is not 0.\n     * \\pre `_utilityTokenMastercopy` is not 0.\n     *\n     * \\post Sets the `genesisMetachainId` storage variable to `_metachainId`.\n     * \\post Sets the `genesisERC20Gateway` storage variable to `_erc20Gateway`.\n     * \\post Sets the `genesisStateRootProvider` storage variable\n     *       to `_stateRootProvider`.\n     * \\post Sets the `genesisMaxStorageRootItems` storage variable\n     *       to `_maxStorageRootItems`.\n     * \\post Sets the `genesisOutboxStorageIndex` storage variable\n     *       to `_outboxStorageIndex`.\n     * \\post Sets the `genesisUtilityTokenMastercopy` storage variable to\n     *       `_utilityTokenMastercopy`.\n     * \\post Calls ERC20Cogateway::setup() function to activate the gateway,\n     *       which in its turn calls MessageOutbox::setupMessageOutbox()\n     *       function which assures that activate() function can be called\n     *       only once.\n     */\n    function activate(\n        bytes32 _metachainId,\n        address _erc20Gateway,\n        address _stateRootProvider,\n        uint256 _maxStorageRootItems,\n        uint8 _outboxStorageIndex,\n        address _utilityTokenMastercopy\n    )\n        external\n    {\n        require(_metachainId != bytes32(0), \"Metachain id is 0.\");\n        require(_erc20Gateway != address(0), \"ERC20Cogateway's address is 0.\");\n        require(\n            _stateRootProvider != address(0),\n            \"State root provider's address is 0.\"\n        );\n        require(\n            _maxStorageRootItems != uint256(0),\n            \"Max storage root item count is 0.\"\n        );\n        require(\n            _utilityTokenMastercopy != address(0),\n            \"Utility token master copy contract's address is 0.\"\n        );\n\n        genesisMetachainId = _metachainId;\n        genesisERC20Gateway = _erc20Gateway;\n        genesisStateRootProvider = _stateRootProvider;\n        genesisMaxStorageRootItems = _maxStorageRootItems;\n        genesisOutboxStorageIndex = _outboxStorageIndex;\n        genesisUtilityTokenMastercopy = _utilityTokenMastercopy;\n\n        ERC20Cogateway.setup();\n    }\n\n\n    /* Public Functions */\n\n    /**\n     * @notice setup() function is a dummy function for this contract.\n     *\n     * @dev Implementation does not mark the contract as private (as it has\n     *      dummy implementation, it makes sense), because components\n     *      accepting ERC20Cogateway interface might require this function\n     *      to be there.\n     */\n    function setup()\n        public\n    {\n    }\n}\n",
  "sourcePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/Gen0ERC20Cogateway.sol",
  "ast": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/Gen0ERC20Cogateway.sol",
    "exportedSymbols": {
      "Gen0ERC20Cogateway": [
        8716
      ]
    },
    "id": 8717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8618,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:31"
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/ERC20Cogateway.sol",
        "file": "./ERC20Cogateway.sol",
        "id": 8619,
        "nodeType": "ImportDirective",
        "scope": 8717,
        "sourceUnit": 8125,
        "src": "621:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8620,
              "name": "ERC20Cogateway",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8124,
              "src": "754:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Cogateway_$8124",
                "typeString": "contract ERC20Cogateway"
              }
            },
            "id": 8621,
            "nodeType": "InheritanceSpecifier",
            "src": "754:14:31"
          }
        ],
        "contractDependencies": [
          8124,
          8616,
          8731,
          8873,
          10509,
          10518,
          10736,
          10875,
          11211,
          12954,
          13057,
          18876
        ],
        "contractKind": "contract",
        "documentation": "@title Implements ERC20Cogateway contract for gen0 chains.",
        "fullyImplemented": true,
        "id": 8716,
        "linearizedBaseContracts": [
          8716,
          8124,
          8616,
          13057,
          10518,
          10736,
          11211,
          8873,
          10875,
          10509,
          18876,
          8731,
          12954
        ],
        "name": "Gen0ERC20Cogateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8710,
              "nodeType": "Block",
              "src": "2428:904:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 8641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8637,
                          "name": "_metachainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8623,
                          "src": "2446:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2470:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2462:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 8640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2462:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2446:26:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461636861696e20696420697320302e",
                        "id": 8642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:20:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15e37dc9c04ad5f1981d4a8155514826703e2c706fe70af3a47b4dd146ff5a93",
                          "typeString": "literal_string \"Metachain id is 0.\""
                        },
                        "value": "Metachain id is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15e37dc9c04ad5f1981d4a8155514826703e2c706fe70af3a47b4dd146ff5a93",
                          "typeString": "literal_string \"Metachain id is 0.\""
                        }
                      ],
                      "id": 8636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2438:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:57:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8644,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:57:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8646,
                          "name": "_erc20Gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8625,
                          "src": "2513:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2538:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2530:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2530:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2513:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230436f676174657761792773206164647265737320697320302e",
                        "id": 8651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2542:32:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_761d6096a8c44936a6aad0f71d21a97cf13b8395e991bfbee4c604fcb28127e0",
                          "typeString": "literal_string \"ERC20Cogateway's address is 0.\""
                        },
                        "value": "ERC20Cogateway's address is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_761d6096a8c44936a6aad0f71d21a97cf13b8395e991bfbee4c604fcb28127e0",
                          "typeString": "literal_string \"ERC20Cogateway's address is 0.\""
                        }
                      ],
                      "id": 8645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2505:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:70:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8653,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:70:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8655,
                          "name": "_stateRootProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8627,
                          "src": "2606:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2636:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2628:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2628:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2606:32:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537461746520726f6f742070726f76696465722773206164647265737320697320302e",
                        "id": 8660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2652:37:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a19e6fc0ca1b6ef2bee12c7cb2ba217166ada2a92d313d2392d056629067de75",
                          "typeString": "literal_string \"State root provider's address is 0.\""
                        },
                        "value": "State root provider's address is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a19e6fc0ca1b6ef2bee12c7cb2ba217166ada2a92d313d2392d056629067de75",
                          "typeString": "literal_string \"State root provider's address is 0.\""
                        }
                      ],
                      "id": 8654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2585:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:114:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8662,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:114:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8664,
                          "name": "_maxStorageRootItems",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8629,
                          "src": "2730:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2762:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2754:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 8667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2754:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2730:34:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61782073746f7261676520726f6f74206974656d20636f756e7420697320302e",
                        "id": 8669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2778:35:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_887b77ad3ff4c3edcbcf24aab0905db35f2409ff8777ab0ae1b668c19486ea71",
                          "typeString": "literal_string \"Max storage root item count is 0.\""
                        },
                        "value": "Max storage root item count is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_887b77ad3ff4c3edcbcf24aab0905db35f2409ff8777ab0ae1b668c19486ea71",
                          "typeString": "literal_string \"Max storage root item count is 0.\""
                        }
                      ],
                      "id": 8663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2709:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2709:114:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8671,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:114:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8673,
                          "name": "_utilityTokenMastercopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8633,
                          "src": "2854:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2889:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2881:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2854:37:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5574696c69747920746f6b656e206d617374657220636f707920636f6e74726163742773206164647265737320697320302e",
                        "id": 8678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2905:52:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5a6423c157bd04ca664cfddcea2948e56fe0da7db00da96bec5c78d8f3e653f",
                          "typeString": "literal_string \"Utility token master copy contract's address is 0.\""
                        },
                        "value": "Utility token master copy contract's address is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5a6423c157bd04ca664cfddcea2948e56fe0da7db00da96bec5c78d8f3e653f",
                          "typeString": "literal_string \"Utility token master copy contract's address is 0.\""
                        }
                      ],
                      "id": 8672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2833:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:134:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8680,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:134:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8681,
                      "name": "genesisMetachainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8720,
                      "src": "2978:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8682,
                      "name": "_metachainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8623,
                      "src": "2999:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2978:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 8684,
                  "nodeType": "ExpressionStatement",
                  "src": "2978:33:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8685,
                      "name": "genesisERC20Gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8722,
                      "src": "3021:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8686,
                      "name": "_erc20Gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8625,
                      "src": "3043:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3021:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8688,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:35:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8689,
                      "name": "genesisStateRootProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8724,
                      "src": "3066:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8690,
                      "name": "_stateRootProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8627,
                      "src": "3093:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3066:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8692,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8693,
                      "name": "genesisMaxStorageRootItems",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8726,
                      "src": "3121:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8694,
                      "name": "_maxStorageRootItems",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8629,
                      "src": "3150:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3121:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8696,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:49:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8697,
                      "name": "genesisOutboxStorageIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8728,
                      "src": "3180:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8698,
                      "name": "_outboxStorageIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8631,
                      "src": "3208:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3180:47:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 8700,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:47:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8701,
                      "name": "genesisUtilityTokenMastercopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8730,
                      "src": "3237:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8702,
                      "name": "_utilityTokenMastercopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8633,
                      "src": "3269:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3237:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8704,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:55:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8705,
                        "name": "ERC20Cogateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8124,
                        "src": "3303:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Cogateway_$8124_$",
                          "typeString": "type(contract ERC20Cogateway)"
                        }
                      },
                      "id": 8707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7766,
                      "src": "3303:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8709,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:22:31"
                }
              ]
            },
            "documentation": "@notice activate() function activates the contract.\n     * @dev The function sets corresponding genesis* variables inherited\n     from GenesisERC20Cogateway contract and calls the parent class\n     ERC20Cogateway::setup() function to activate the gateway.\n     * \\pre `_metachainId` is not 0.\n\\pre `_erc20Gateway` is not 0.\n\\pre `_stateRootProvider` is not 0.\n\\pre `_maxStorageRootItems` is not 0.\n\\pre `_utilityTokenMastercopy` is not 0.\n     * \\post Sets the `genesisMetachainId` storage variable to `_metachainId`.\n\\post Sets the `genesisERC20Gateway` storage variable to `_erc20Gateway`.\n\\post Sets the `genesisStateRootProvider` storage variable\n      to `_stateRootProvider`.\n\\post Sets the `genesisMaxStorageRootItems` storage variable\n      to `_maxStorageRootItems`.\n\\post Sets the `genesisOutboxStorageIndex` storage variable\n      to `_outboxStorageIndex`.\n\\post Sets the `genesisUtilityTokenMastercopy` storage variable to\n      `_utilityTokenMastercopy`.\n\\post Calls ERC20Cogateway::setup() function to activate the gateway,\n      which in its turn calls MessageOutbox::setupMessageOutbox()\n      function which assures that activate() function can be called\n      only once.",
            "id": 8711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "activate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8623,
                  "name": "_metachainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2199:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8625,
                  "name": "_erc20Gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2229:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8627,
                  "name": "_stateRootProvider",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2260:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8629,
                  "name": "_maxStorageRootItems",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2296:28:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8631,
                  "name": "_outboxStorageIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2334:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8630,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8633,
                  "name": "_utilityTokenMastercopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2369:31:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2189:217:31"
            },
            "returnParameters": {
              "id": 8635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2428:0:31"
            },
            "scope": 8716,
            "src": "2172:1160:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8714,
              "nodeType": "Block",
              "src": "3743:7:31",
              "statements": []
            },
            "documentation": "@notice setup() function is a dummy function for this contract.\n     * @dev Implementation does not mark the contract as private (as it has\n     dummy implementation, it makes sense), because components\n     accepting ERC20Cogateway interface might require this function\n     to be there.",
            "id": 8715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:2:31"
            },
            "returnParameters": {
              "id": 8713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3743:0:31"
            },
            "scope": 8716,
            "src": "3707:43:31",
            "stateMutability": "nonpayable",
            "superFunction": 7766,
            "visibility": "public"
          }
        ],
        "scope": 8717,
        "src": "723:3029:31"
      }
    ],
    "src": "0:3753:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/Gen0ERC20Cogateway.sol",
    "exportedSymbols": {
      "Gen0ERC20Cogateway": [
        8716
      ]
    },
    "id": 8717,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8618,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:31"
      },
      {
        "absolutePath": "/Users/abhay/Documents/projects/abhayforks/mosaic-1/contracts/erc20-gateway/ERC20Cogateway.sol",
        "file": "./ERC20Cogateway.sol",
        "id": 8619,
        "nodeType": "ImportDirective",
        "scope": 8717,
        "sourceUnit": 8125,
        "src": "621:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8620,
              "name": "ERC20Cogateway",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8124,
              "src": "754:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Cogateway_$8124",
                "typeString": "contract ERC20Cogateway"
              }
            },
            "id": 8621,
            "nodeType": "InheritanceSpecifier",
            "src": "754:14:31"
          }
        ],
        "contractDependencies": [
          8124,
          8616,
          8731,
          8873,
          10509,
          10518,
          10736,
          10875,
          11211,
          12954,
          13057,
          18876
        ],
        "contractKind": "contract",
        "documentation": "@title Implements ERC20Cogateway contract for gen0 chains.",
        "fullyImplemented": true,
        "id": 8716,
        "linearizedBaseContracts": [
          8716,
          8124,
          8616,
          13057,
          10518,
          10736,
          11211,
          8873,
          10875,
          10509,
          18876,
          8731,
          12954
        ],
        "name": "Gen0ERC20Cogateway",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8710,
              "nodeType": "Block",
              "src": "2428:904:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 8641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8637,
                          "name": "_metachainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8623,
                          "src": "2446:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2470:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2462:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 8640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2462:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2446:26:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d657461636861696e20696420697320302e",
                        "id": 8642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:20:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15e37dc9c04ad5f1981d4a8155514826703e2c706fe70af3a47b4dd146ff5a93",
                          "typeString": "literal_string \"Metachain id is 0.\""
                        },
                        "value": "Metachain id is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15e37dc9c04ad5f1981d4a8155514826703e2c706fe70af3a47b4dd146ff5a93",
                          "typeString": "literal_string \"Metachain id is 0.\""
                        }
                      ],
                      "id": 8636,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2438:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:57:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8644,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:57:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8646,
                          "name": "_erc20Gateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8625,
                          "src": "2513:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2538:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2530:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2530:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2513:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433230436f676174657761792773206164647265737320697320302e",
                        "id": 8651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2542:32:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_761d6096a8c44936a6aad0f71d21a97cf13b8395e991bfbee4c604fcb28127e0",
                          "typeString": "literal_string \"ERC20Cogateway's address is 0.\""
                        },
                        "value": "ERC20Cogateway's address is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_761d6096a8c44936a6aad0f71d21a97cf13b8395e991bfbee4c604fcb28127e0",
                          "typeString": "literal_string \"ERC20Cogateway's address is 0.\""
                        }
                      ],
                      "id": 8645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2505:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:70:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8653,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:70:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8655,
                          "name": "_stateRootProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8627,
                          "src": "2606:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2636:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2628:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2628:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2606:32:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537461746520726f6f742070726f76696465722773206164647265737320697320302e",
                        "id": 8660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2652:37:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a19e6fc0ca1b6ef2bee12c7cb2ba217166ada2a92d313d2392d056629067de75",
                          "typeString": "literal_string \"State root provider's address is 0.\""
                        },
                        "value": "State root provider's address is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a19e6fc0ca1b6ef2bee12c7cb2ba217166ada2a92d313d2392d056629067de75",
                          "typeString": "literal_string \"State root provider's address is 0.\""
                        }
                      ],
                      "id": 8654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2585:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:114:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8662,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:114:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8664,
                          "name": "_maxStorageRootItems",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8629,
                          "src": "2730:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2762:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2754:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 8667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2754:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2730:34:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d61782073746f7261676520726f6f74206974656d20636f756e7420697320302e",
                        "id": 8669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2778:35:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_887b77ad3ff4c3edcbcf24aab0905db35f2409ff8777ab0ae1b668c19486ea71",
                          "typeString": "literal_string \"Max storage root item count is 0.\""
                        },
                        "value": "Max storage root item count is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_887b77ad3ff4c3edcbcf24aab0905db35f2409ff8777ab0ae1b668c19486ea71",
                          "typeString": "literal_string \"Max storage root item count is 0.\""
                        }
                      ],
                      "id": 8663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2709:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2709:114:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8671,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:114:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8673,
                          "name": "_utilityTokenMastercopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8633,
                          "src": "2854:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2889:1:31",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2881:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2854:37:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5574696c69747920746f6b656e206d617374657220636f707920636f6e74726163742773206164647265737320697320302e",
                        "id": 8678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2905:52:31",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5a6423c157bd04ca664cfddcea2948e56fe0da7db00da96bec5c78d8f3e653f",
                          "typeString": "literal_string \"Utility token master copy contract's address is 0.\""
                        },
                        "value": "Utility token master copy contract's address is 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5a6423c157bd04ca664cfddcea2948e56fe0da7db00da96bec5c78d8f3e653f",
                          "typeString": "literal_string \"Utility token master copy contract's address is 0.\""
                        }
                      ],
                      "id": 8672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19579,
                        19580
                      ],
                      "referencedDeclaration": 19580,
                      "src": "2833:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2833:134:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8680,
                  "nodeType": "ExpressionStatement",
                  "src": "2833:134:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8681,
                      "name": "genesisMetachainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8720,
                      "src": "2978:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8682,
                      "name": "_metachainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8623,
                      "src": "2999:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2978:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 8684,
                  "nodeType": "ExpressionStatement",
                  "src": "2978:33:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8685,
                      "name": "genesisERC20Gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8722,
                      "src": "3021:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8686,
                      "name": "_erc20Gateway",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8625,
                      "src": "3043:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3021:35:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8688,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:35:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8689,
                      "name": "genesisStateRootProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8724,
                      "src": "3066:24:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8690,
                      "name": "_stateRootProvider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8627,
                      "src": "3093:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3066:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8692,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:45:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8693,
                      "name": "genesisMaxStorageRootItems",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8726,
                      "src": "3121:26:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8694,
                      "name": "_maxStorageRootItems",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8629,
                      "src": "3150:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3121:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8696,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:49:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8697,
                      "name": "genesisOutboxStorageIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8728,
                      "src": "3180:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8698,
                      "name": "_outboxStorageIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8631,
                      "src": "3208:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3180:47:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 8700,
                  "nodeType": "ExpressionStatement",
                  "src": "3180:47:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8701,
                      "name": "genesisUtilityTokenMastercopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8730,
                      "src": "3237:29:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 8702,
                      "name": "_utilityTokenMastercopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8633,
                      "src": "3269:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3237:55:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 8704,
                  "nodeType": "ExpressionStatement",
                  "src": "3237:55:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8705,
                        "name": "ERC20Cogateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8124,
                        "src": "3303:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Cogateway_$8124_$",
                          "typeString": "type(contract ERC20Cogateway)"
                        }
                      },
                      "id": 8707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setup",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7766,
                      "src": "3303:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8709,
                  "nodeType": "ExpressionStatement",
                  "src": "3303:22:31"
                }
              ]
            },
            "documentation": "@notice activate() function activates the contract.\n     * @dev The function sets corresponding genesis* variables inherited\n     from GenesisERC20Cogateway contract and calls the parent class\n     ERC20Cogateway::setup() function to activate the gateway.\n     * \\pre `_metachainId` is not 0.\n\\pre `_erc20Gateway` is not 0.\n\\pre `_stateRootProvider` is not 0.\n\\pre `_maxStorageRootItems` is not 0.\n\\pre `_utilityTokenMastercopy` is not 0.\n     * \\post Sets the `genesisMetachainId` storage variable to `_metachainId`.\n\\post Sets the `genesisERC20Gateway` storage variable to `_erc20Gateway`.\n\\post Sets the `genesisStateRootProvider` storage variable\n      to `_stateRootProvider`.\n\\post Sets the `genesisMaxStorageRootItems` storage variable\n      to `_maxStorageRootItems`.\n\\post Sets the `genesisOutboxStorageIndex` storage variable\n      to `_outboxStorageIndex`.\n\\post Sets the `genesisUtilityTokenMastercopy` storage variable to\n      `_utilityTokenMastercopy`.\n\\post Calls ERC20Cogateway::setup() function to activate the gateway,\n      which in its turn calls MessageOutbox::setupMessageOutbox()\n      function which assures that activate() function can be called\n      only once.",
            "id": 8711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "activate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8623,
                  "name": "_metachainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2199:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8622,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8625,
                  "name": "_erc20Gateway",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2229:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8627,
                  "name": "_stateRootProvider",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2260:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8629,
                  "name": "_maxStorageRootItems",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2296:28:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2296:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8631,
                  "name": "_outboxStorageIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2334:25:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 8630,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2334:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8633,
                  "name": "_utilityTokenMastercopy",
                  "nodeType": "VariableDeclaration",
                  "scope": 8711,
                  "src": "2369:31:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2189:217:31"
            },
            "returnParameters": {
              "id": 8635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2428:0:31"
            },
            "scope": 8716,
            "src": "2172:1160:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8714,
              "nodeType": "Block",
              "src": "3743:7:31",
              "statements": []
            },
            "documentation": "@notice setup() function is a dummy function for this contract.\n     * @dev Implementation does not mark the contract as private (as it has\n     dummy implementation, it makes sense), because components\n     accepting ERC20Cogateway interface might require this function\n     to be there.",
            "id": 8715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:2:31"
            },
            "returnParameters": {
              "id": 8713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3743:0:31"
            },
            "scope": 8716,
            "src": "3707:43:31",
            "stateMutability": "nonpayable",
            "superFunction": 7766,
            "visibility": "public"
          }
        ],
        "scope": 8717,
        "src": "723:3029:31"
      }
    ],
    "src": "0:3753:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2020-03-21T06:48:34.708Z",
  "devdoc": {
    "methods": {
      "activate(bytes32,address,address,uint256,uint8,address)": {
        "details": "The function sets corresponding genesis* variables inherited     from GenesisERC20Cogateway contract and calls the parent class     ERC20Cogateway::setup() function to activate the gateway.     * \\pre `_metachainId` is not 0. \\pre `_erc20Gateway` is not 0. \\pre `_stateRootProvider` is not 0. \\pre `_maxStorageRootItems` is not 0. \\pre `_utilityTokenMastercopy` is not 0.     * \\post Sets the `genesisMetachainId` storage variable to `_metachainId`. \\post Sets the `genesisERC20Gateway` storage variable to `_erc20Gateway`. \\post Sets the `genesisStateRootProvider` storage variable      to `_stateRootProvider`. \\post Sets the `genesisMaxStorageRootItems` storage variable      to `_maxStorageRootItems`. \\post Sets the `genesisOutboxStorageIndex` storage variable      to `_outboxStorageIndex`. \\post Sets the `genesisUtilityTokenMastercopy` storage variable to      `_utilityTokenMastercopy`. \\post Calls ERC20Cogateway::setup() function to activate the gateway,      which in its turn calls MessageOutbox::setupMessageOutbox()      function which assures that activate() function can be called      only once."
      },
      "confirmDeposit(address,uint256,address,uint256,uint256,address,uint256,bytes)": {
        "params": {
          "_amount": "ERC20 token deposit amount in atto.",
          "_beneficiary": "Address of beneficiary on the target chain.",
          "_blockNumber": "Block number of origin chain against which storage proof is generated.",
          "_depositor": "Address of depositor on the origin chain.",
          "_feeGasLimit": "Gas limit at which fee will be capped.",
          "_feeGasPrice": "Gas price at which fee will be calculated.",
          "_rlpParentNodes": "Storage merkle proof to verify message declaration                       on the origin chain.",
          "_valueToken": "ERC20 token address on the origin chain."
        },
        "return": "messageHash_ Message hash.     * \\pre `_valueToken` address is not 0. \\pre `_amount` is not 0. \\pre `_beneficiary` address is not 0. \\pre `_depositor` address is not 0. \\pre `_rlpParentNodes` is not 0.     * \\post Adds a new entry in `inbox` mapping storage variable. The value is      set as `true` for `messagehash_` in `inbox` mapping. The      `messageHash_` is calculated by calling `MessageInbox.confirmMessage`      function with parameters `depositIntentHash`, `nonce`,      `_feeGasPrice`, `_feeGasLimit`, `_depositor`, `_blockNumber` and      `_rlpParentNodes`. `depositIntentHash` is calculated by calling      `ERC20GatewayBase.hashDepositIntent` functions with the parameters      `_valueToken`, `_amount` and `_beneficiary`. \\post Deploys a new utility token contract by calling      `deployUtilityToken()` with parameter `_valueToken`. \\post Transfers the tokens to the `msg.sender` address as a fees.      The `fees` amount is calculated by calling      `ERC20GatewayBase::reward()` with parameters `gasConsumed`,      `_feeGasPrice` and `_feeGasLimit`. `gasConsumed` is the approximate      gas used in this transaction. \\post Transfer the `_amount-fees` amount of token to the `_beneficiary`      address. \\post Update the MessageInbox.inboxNonces storage mapping variable by      incrementing the      value for `_withdrawer` by one. \\post Emits `DepositIntentConfirmed` event with the `messageHash_` as a      parameter."
      },
      "getRemoteGatewayLatestProvenBlockNumber()": {
        "return": "blockNumber_ Remote gateway latest proven block number."
      },
      "hashChannelIdentifier(bytes32,address,address)": {
        "params": {
          "_inbox": "Inbox address.",
          "_metachainId": "Metachain identifier.",
          "_outbox": "Outbox address."
        }
      },
      "hashDepositIntent(address,uint256,address)": {
        "params": {
          "_amount": "Amount of tokens.",
          "_beneficiary": "Beneficiary address.",
          "_valueToken": "Value token Address."
        },
        "return": "depositIntentHash_ Hash of deposit intent."
      },
      "hashWithdrawIntent(address,address,uint256,address)": {
        "params": {
          "_amount": "Amount of tokens.",
          "_beneficiary": "Beneficiary address.",
          "_utilityToken": "Utility token address.",
          "_valueToken": "Value token address."
        },
        "return": "withdrawIntentHash_ Hash of withdraw intent."
      },
      "inboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "params": {
          "_feeGasLimit": "Fee gas limit.",
          "_feeGasPrice": "Fee gas price.",
          "_intentHash": "Intent hash of message.",
          "_nonce": "Nonce of sender.",
          "_sender": "Sender address."
        },
        "return": "messageHash_ Message hash."
      },
      "outboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "params": {
          "_feeGasLimit": "Fee gas limit.",
          "_feeGasPrice": "Fee gas price.",
          "_intentHash": "Intent hash of message.",
          "_nonce": "Nonce of sender.",
          "_sender": "Sender address."
        },
        "return": "messageHash_ Message hash."
      },
      "proveGateway(uint256,bytes,bytes)": {
        "params": {
          "_blockNumber": "Block number at which ERC20Gateway contract is to                    be proven.",
          "_rlpAccount": "RLP encoded account node object.",
          "_rlpParentNodes": "RLP encoded value of account proof node array.     * \\post Calls `MessageInbox.proveStorageAccount()` function with      `_blockNumber`, `_rlpAccount`, `_rlpParentNodes` as input      parameters. \\post Emits `GatewayProven` event with the address of `messageInbox`      and `_blockNumber` parameters."
        }
      },
      "setup()": {
        "details": "Implementation does not mark the contract as private (as it has     dummy implementation, it makes sense), because components     accepting ERC20Cogateway interface might require this function     to be there."
      },
      "withdraw(uint256,address,uint256,uint256,address)": {
        "params": {
          "_amount": "Amount of tokens to be withdrawn.",
          "_beneficiary": "The address in the origin chain where the value                    where the tokens will be withdrawn.",
          "_feeGasLimit": "Gas limit at which fee will be capped.",
          "_feeGasPrice": "Gas price at which fee will be calculated.",
          "_utilityToken": "Address of utility token."
        },
        "return": "messageHash_ Message hash.     * \\pre `_utilityToken` is not 0. \\pre `_amount` is not 0. \\pre `_beneficiary` is not 0. \\pre `_amount` should be greater than maximum reward. \\pre `msg.sender` should approve erc20 cogateway contract.     * \\post Adds a new entry in `outbox` mapping storage variable. The value is      set as `true` for `messagehash_` in `outbox` mapping. The      `messageHash_` is obtained by calling `MessageOutbox.declareMessage`      with the parameters `withdrawIntentHash`,      `MessageOutbox.outboxNonces[msg.sender]`, `_feeGasPrice`,      `_feeGasLimit` and `msg.sender`. `withdrawIntentHash` is calculated      by calling `ERC20GatewayBase.hashWithdrawIntent` with parameters      `valueToken`, `_utilityToken`, `_amount`, `_beneficiary`. \\post `_amount` number of utility tokens will be burned from `msg.sender`      account by erc20 cogateway. \\post Update the `MessageOutbox.outboxNonces` storage mapping variable      by incrementing the value for `msg.sender` by one. \\post Emits `WithdrawIntentDeclared` event with the `_amount`, address of      `_beneficiary`, `_feeGasPrice`, `_feeGasLimit`, address of      `msg.sender`, address of `_utilityToken` and `messageHash_`."
      }
    },
    "title": "Implements ERC20Cogateway contract for gen0 chains."
  },
  "userdoc": {
    "methods": {
      "activate(bytes32,address,address,uint256,uint8,address)": {
        "notice": "activate() function activates the contract."
      },
      "confirmDeposit(address,uint256,address,uint256,uint256,address,uint256,bytes)": {
        "notice": "Confirm deposit in order to mint tokens."
      },
      "getRemoteGatewayLatestProvenBlockNumber()": {
        "notice": "Gets the remote gateway latest proven block number."
      },
      "hashChannelIdentifier(bytes32,address,address)": {
        "notice": "Generate channel identifier hash from the input params"
      },
      "hashDepositIntent(address,uint256,address)": {
        "notice": "It returns hash of deposit intent."
      },
      "hashWithdrawIntent(address,address,uint256,address)": {
        "notice": "It returns hash of withdraw intent."
      },
      "inboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "notice": "Generate inbox message hash from the input params"
      },
      "outboxMessageHash(bytes32,uint256,uint256,uint256,address)": {
        "notice": "Generate outbox message hash from the input params"
      },
      "proveGateway(uint256,bytes,bytes)": {
        "notice": "It verifies that ERC20Gateway contract exists on origin chain        using merkle account proof."
      },
      "setup()": {
        "notice": "setup() function is a dummy function for this contract."
      },
      "withdraw(uint256,address,uint256,uint256,address)": {
        "notice": "It allows withdrawing Utility tokens. Withdrawer needs to      approve erc20 cogateway contract for the amount to be      withdrawn."
      }
    }
  }
}